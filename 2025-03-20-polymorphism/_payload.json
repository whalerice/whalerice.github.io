[{"data":1,"prerenderedAt":1009},["ShallowReactive",2],{"/2025-03-20-polymorphism":3},{"id":4,"title":5,"body":6,"date":996,"description":997,"extension":998,"image":999,"meta":1000,"navigation":156,"path":1001,"seo":1002,"stem":1003,"tags":1004,"__hash__":1008},"content/2025-03-20-polymorphism.md","다형성(Polymorphism)",{"type":7,"value":8,"toc":986},"minimal",[9,14,18,21,31,38,42,50,55,66,72,76,397,403,407,545,551,555,951,955,982],[10,11,13],"h2",{"id":12},"다형성polymorphism이란","다형성(Polymorphism)이란?",[15,16,17],"p",{},"다형성은 객체 지향 프로그래밍의 핵심 개념 중 하나입니다. 같은 인터페이스를 통해 여러 다른 형태의 객체를 다룰 수 있게 해주는 기능을 의미합니다.",[15,19,20],{},"TypeScript에서 다형성은 다음과 같은 형태로 구현됩니다:",[22,23,24,28],"ol",{},[25,26,27],"li",{},"함수 오버로딩: 같은 함수 이름으로 다른 파라미터를 받는 여러 버전의 함수를 정의",[25,29,30],{},"제네릭: 타입을 파라미터화하여 다양한 타입에 대해 동작하는 코드를 작성",[15,32,33,36],{},[34,35],"br",{},[34,37],{},[10,39,41],{"id":40},"제네릭generic-타입","제네릭(Generic) 타입",[15,43,44,45,49],{},"제네릭은 타입의 ",[46,47,48],"em",{},"placeholder","로, 구체적인 타입을 대신해서 사용할 수 있는 기능입니다. 이를 통해 타입 안정성을 유지하면서도 다양한 타입에 대해 동작하는 코드를 작성할 수 있습니다.",[51,52,54],"h3",{"id":53},"제네릭을-사용하는-이유","제네릭을 사용하는 이유",[22,56,57,60,63],{},[25,58,59],{},"타입 안정성 보장",[25,61,62],{},"코드 재사용성 향상",[25,64,65],{},"유연한 타입 처리 가능",[15,67,68,70],{},[34,69],{},[34,71],{},[51,73,75],{"id":74},"기본적인-제네릭-사용-예시","기본적인 제네릭 사용 예시",[77,78,83],"pre",{"className":79,"code":80,"language":81,"meta":82,"style":82},"language-ts shiki shiki-themes github-light","// 함수 오버로딩 방식\ntype SuperPrint = {\n  \u003CTypePlaceHolder>(arr: TypePlaceHolder[]): TypePlaceHolder;\n};\n\n// 화살표 함수 방식\ntype SuperPrint = \u003CT>(arr: T[]) => T;\n\n// 함수 구현\nconst superPrint: SuperPrint = (arr) => arr[0];\n\n// 다양한 타입으로 함수 실행\nconst a = superPrint([1, 2, 3, 4]); // number[]\nconst b = superPrint([true, false, true]); // boolean[]\nconst c = superPrint([\"a\", \"b\", \"c\"]); // string[]\nconst d = superPrint([1, 2, true, false, \"hello\"]); // (number | boolean | string)[]\n","ts","",[84,85,86,95,113,145,151,158,164,198,203,209,244,249,255,295,326,359],"code",{"__ignoreMap":82},[87,88,91],"span",{"class":89,"line":90},"line",1,[87,92,94],{"class":93},"stJHq","// 함수 오버로딩 방식\n",[87,96,98,102,106,109],{"class":89,"line":97},2,[87,99,101],{"class":100},"sXGI6","type",[87,103,105],{"class":104},"stlaL"," SuperPrint",[87,107,108],{"class":100}," =",[87,110,112],{"class":111},"sXk0b"," {\n",[87,114,116,119,122,125,129,132,135,138,140,142],{"class":89,"line":115},3,[87,117,118],{"class":111},"  \u003C",[87,120,121],{"class":104},"TypePlaceHolder",[87,123,124],{"class":111},">(",[87,126,128],{"class":127},"skzk4","arr",[87,130,131],{"class":100},":",[87,133,134],{"class":104}," TypePlaceHolder",[87,136,137],{"class":111},"[])",[87,139,131],{"class":100},[87,141,134],{"class":104},[87,143,144],{"class":111},";\n",[87,146,148],{"class":89,"line":147},4,[87,149,150],{"class":111},"};\n",[87,152,154],{"class":89,"line":153},5,[87,155,157],{"emptyLinePlaceholder":156},true,"\n",[87,159,161],{"class":89,"line":160},6,[87,162,163],{"class":93},"// 화살표 함수 방식\n",[87,165,167,169,171,173,176,179,181,183,185,188,191,194,196],{"class":89,"line":166},7,[87,168,101],{"class":100},[87,170,105],{"class":104},[87,172,108],{"class":100},[87,174,175],{"class":111}," \u003C",[87,177,178],{"class":104},"T",[87,180,124],{"class":111},[87,182,128],{"class":127},[87,184,131],{"class":100},[87,186,187],{"class":104}," T",[87,189,190],{"class":111},"[]) ",[87,192,193],{"class":100},"=>",[87,195,187],{"class":104},[87,197,144],{"class":111},[87,199,201],{"class":89,"line":200},8,[87,202,157],{"emptyLinePlaceholder":156},[87,204,206],{"class":89,"line":205},9,[87,207,208],{"class":93},"// 함수 구현\n",[87,210,212,215,218,220,222,224,227,229,232,234,237,241],{"class":89,"line":211},10,[87,213,214],{"class":100},"const",[87,216,217],{"class":104}," superPrint",[87,219,131],{"class":100},[87,221,105],{"class":104},[87,223,108],{"class":100},[87,225,226],{"class":111}," (",[87,228,128],{"class":127},[87,230,231],{"class":111},") ",[87,233,193],{"class":100},[87,235,236],{"class":111}," arr[",[87,238,240],{"class":239},"s6Utp","0",[87,242,243],{"class":111},"];\n",[87,245,247],{"class":89,"line":246},11,[87,248,157],{"emptyLinePlaceholder":156},[87,250,252],{"class":89,"line":251},12,[87,253,254],{"class":93},"// 다양한 타입으로 함수 실행\n",[87,256,258,260,263,265,267,270,273,276,279,281,284,286,289,292],{"class":89,"line":257},13,[87,259,214],{"class":100},[87,261,262],{"class":239}," a",[87,264,108],{"class":100},[87,266,217],{"class":104},[87,268,269],{"class":111},"([",[87,271,272],{"class":239},"1",[87,274,275],{"class":111},", ",[87,277,278],{"class":239},"2",[87,280,275],{"class":111},[87,282,283],{"class":239},"3",[87,285,275],{"class":111},[87,287,288],{"class":239},"4",[87,290,291],{"class":111},"]); ",[87,293,294],{"class":93},"// number[]\n",[87,296,298,300,303,305,307,309,312,314,317,319,321,323],{"class":89,"line":297},14,[87,299,214],{"class":100},[87,301,302],{"class":239}," b",[87,304,108],{"class":100},[87,306,217],{"class":104},[87,308,269],{"class":111},[87,310,311],{"class":239},"true",[87,313,275],{"class":111},[87,315,316],{"class":239},"false",[87,318,275],{"class":111},[87,320,311],{"class":239},[87,322,291],{"class":111},[87,324,325],{"class":93},"// boolean[]\n",[87,327,329,331,334,336,338,340,344,346,349,351,354,356],{"class":89,"line":328},15,[87,330,214],{"class":100},[87,332,333],{"class":239}," c",[87,335,108],{"class":100},[87,337,217],{"class":104},[87,339,269],{"class":111},[87,341,343],{"class":342},"s2cXZ","\"a\"",[87,345,275],{"class":111},[87,347,348],{"class":342},"\"b\"",[87,350,275],{"class":111},[87,352,353],{"class":342},"\"c\"",[87,355,291],{"class":111},[87,357,358],{"class":93},"// string[]\n",[87,360,362,364,367,369,371,373,375,377,379,381,383,385,387,389,392,394],{"class":89,"line":361},16,[87,363,214],{"class":100},[87,365,366],{"class":239}," d",[87,368,108],{"class":100},[87,370,217],{"class":104},[87,372,269],{"class":111},[87,374,272],{"class":239},[87,376,275],{"class":111},[87,378,278],{"class":239},[87,380,275],{"class":111},[87,382,311],{"class":239},[87,384,275],{"class":111},[87,386,316],{"class":239},[87,388,275],{"class":111},[87,390,391],{"class":342},"\"hello\"",[87,393,291],{"class":111},[87,395,396],{"class":93},"// (number | boolean | string)[]\n",[15,398,399,401],{},[34,400],{},[34,402],{},[51,404,406],{"id":405},"복수의-제네릭-타입","복수의 제네릭 타입",[77,408,410],{"className":79,"code":409,"language":81,"meta":82,"style":82},"type SuperPrint = {\n  \u003CT, M>(arr: T[], x: M): T;\n};\n\nconst superPrint: SuperPrint = (arr, x) => arr[0];\n\n// 다양한 타입 조합으로 사용 가능\nlet a = superPrint([1, \"b\", true], \"hi\"); // T: number | string | boolean, M: string\n",[84,411,412,422,461,465,469,499,503,508],{"__ignoreMap":82},[87,413,414,416,418,420],{"class":89,"line":90},[87,415,101],{"class":100},[87,417,105],{"class":104},[87,419,108],{"class":100},[87,421,112],{"class":111},[87,423,424,426,428,430,433,435,437,439,441,444,447,449,452,455,457,459],{"class":89,"line":97},[87,425,118],{"class":111},[87,427,178],{"class":104},[87,429,275],{"class":111},[87,431,432],{"class":104},"M",[87,434,124],{"class":111},[87,436,128],{"class":127},[87,438,131],{"class":100},[87,440,187],{"class":104},[87,442,443],{"class":111},"[], ",[87,445,446],{"class":127},"x",[87,448,131],{"class":100},[87,450,451],{"class":104}," M",[87,453,454],{"class":111},")",[87,456,131],{"class":100},[87,458,187],{"class":104},[87,460,144],{"class":111},[87,462,463],{"class":89,"line":115},[87,464,150],{"class":111},[87,466,467],{"class":89,"line":147},[87,468,157],{"emptyLinePlaceholder":156},[87,470,471,473,475,477,479,481,483,485,487,489,491,493,495,497],{"class":89,"line":153},[87,472,214],{"class":100},[87,474,217],{"class":104},[87,476,131],{"class":100},[87,478,105],{"class":104},[87,480,108],{"class":100},[87,482,226],{"class":111},[87,484,128],{"class":127},[87,486,275],{"class":111},[87,488,446],{"class":127},[87,490,231],{"class":111},[87,492,193],{"class":100},[87,494,236],{"class":111},[87,496,240],{"class":239},[87,498,243],{"class":111},[87,500,501],{"class":89,"line":160},[87,502,157],{"emptyLinePlaceholder":156},[87,504,505],{"class":89,"line":166},[87,506,507],{"class":93},"// 다양한 타입 조합으로 사용 가능\n",[87,509,510,513,516,519,521,523,525,527,529,531,533,536,539,542],{"class":89,"line":200},[87,511,512],{"class":100},"let",[87,514,515],{"class":111}," a ",[87,517,518],{"class":100},"=",[87,520,217],{"class":104},[87,522,269],{"class":111},[87,524,272],{"class":239},[87,526,275],{"class":111},[87,528,348],{"class":342},[87,530,275],{"class":111},[87,532,311],{"class":239},[87,534,535],{"class":111},"], ",[87,537,538],{"class":342},"\"hi\"",[87,540,541],{"class":111},"); ",[87,543,544],{"class":93},"// T: number | string | boolean, M: string\n",[15,546,547,549],{},[34,548],{},[34,550],{},[51,552,554],{"id":553},"실제-활용-예시","실제 활용 예시",[77,556,558],{"className":79,"code":557,"language":81,"meta":82,"style":82},"// 제네릭 함수 정의\nfunction superPrint\u003CT>(a: T[]) {\n  return a[0];\n}\n\n// 타입 추론을 통한 사용\nconst a = superPrint([1, 2, 3, 4]); // T는 number로 추론됨\n\n// 제네릭 타입을 사용한 인터페이스 정의\ntype Player\u003CE> = {\n  name: string;\n  extraInfo: E;\n};\n\n// 다양한 형태의 Player 타입 사용\nconst nico: Player\u003C{ favFood: string }> = {\n  name: \"nico\",\n  extraInfo: {\n    favFood: \"kimchi\",\n  },\n};\n\nconst lynn: Player\u003Cnull> = {\n  name: \"lynn\",\n  extraInfo: null,\n};\n\n// 타입 별칭을 사용한 재사용\ntype NicoExtra = {\n  favFood: string;\n};\n\ntype NicoPlayer = Player\u003CNicoExtra>;\n\nconst nico2: NicoPlayer = {\n  name: \"nico\",\n  extraInfo: {\n    favFood: \"kimchi\",\n  },\n};\n",[84,559,560,565,589,601,606,610,615,646,650,655,674,686,698,702,706,711,739,751,757,768,774,779,784,807,817,827,832,837,843,855,867,872,877,897,902,918,927,932,941,946],{"__ignoreMap":82},[87,561,562],{"class":89,"line":90},[87,563,564],{"class":93},"// 제네릭 함수 정의\n",[87,566,567,570,572,575,577,579,582,584,586],{"class":89,"line":97},[87,568,569],{"class":100},"function",[87,571,217],{"class":104},[87,573,574],{"class":111},"\u003C",[87,576,178],{"class":104},[87,578,124],{"class":111},[87,580,581],{"class":127},"a",[87,583,131],{"class":100},[87,585,187],{"class":104},[87,587,588],{"class":111},"[]) {\n",[87,590,591,594,597,599],{"class":89,"line":115},[87,592,593],{"class":100},"  return",[87,595,596],{"class":111}," a[",[87,598,240],{"class":239},[87,600,243],{"class":111},[87,602,603],{"class":89,"line":147},[87,604,605],{"class":111},"}\n",[87,607,608],{"class":89,"line":153},[87,609,157],{"emptyLinePlaceholder":156},[87,611,612],{"class":89,"line":160},[87,613,614],{"class":93},"// 타입 추론을 통한 사용\n",[87,616,617,619,621,623,625,627,629,631,633,635,637,639,641,643],{"class":89,"line":166},[87,618,214],{"class":100},[87,620,262],{"class":239},[87,622,108],{"class":100},[87,624,217],{"class":104},[87,626,269],{"class":111},[87,628,272],{"class":239},[87,630,275],{"class":111},[87,632,278],{"class":239},[87,634,275],{"class":111},[87,636,283],{"class":239},[87,638,275],{"class":111},[87,640,288],{"class":239},[87,642,291],{"class":111},[87,644,645],{"class":93},"// T는 number로 추론됨\n",[87,647,648],{"class":89,"line":200},[87,649,157],{"emptyLinePlaceholder":156},[87,651,652],{"class":89,"line":205},[87,653,654],{"class":93},"// 제네릭 타입을 사용한 인터페이스 정의\n",[87,656,657,659,662,664,667,670,672],{"class":89,"line":211},[87,658,101],{"class":100},[87,660,661],{"class":104}," Player",[87,663,574],{"class":111},[87,665,666],{"class":104},"E",[87,668,669],{"class":111},"> ",[87,671,518],{"class":100},[87,673,112],{"class":111},[87,675,676,679,681,684],{"class":89,"line":246},[87,677,678],{"class":127},"  name",[87,680,131],{"class":100},[87,682,683],{"class":239}," string",[87,685,144],{"class":111},[87,687,688,691,693,696],{"class":89,"line":251},[87,689,690],{"class":127},"  extraInfo",[87,692,131],{"class":100},[87,694,695],{"class":104}," E",[87,697,144],{"class":111},[87,699,700],{"class":89,"line":257},[87,701,150],{"class":111},[87,703,704],{"class":89,"line":297},[87,705,157],{"emptyLinePlaceholder":156},[87,707,708],{"class":89,"line":328},[87,709,710],{"class":93},"// 다양한 형태의 Player 타입 사용\n",[87,712,713,715,718,720,722,725,728,730,732,735,737],{"class":89,"line":361},[87,714,214],{"class":100},[87,716,717],{"class":239}," nico",[87,719,131],{"class":100},[87,721,661],{"class":104},[87,723,724],{"class":111},"\u003C{ ",[87,726,727],{"class":127},"favFood",[87,729,131],{"class":100},[87,731,683],{"class":239},[87,733,734],{"class":111}," }> ",[87,736,518],{"class":100},[87,738,112],{"class":111},[87,740,742,745,748],{"class":89,"line":741},17,[87,743,744],{"class":111},"  name: ",[87,746,747],{"class":342},"\"nico\"",[87,749,750],{"class":111},",\n",[87,752,754],{"class":89,"line":753},18,[87,755,756],{"class":111},"  extraInfo: {\n",[87,758,760,763,766],{"class":89,"line":759},19,[87,761,762],{"class":111},"    favFood: ",[87,764,765],{"class":342},"\"kimchi\"",[87,767,750],{"class":111},[87,769,771],{"class":89,"line":770},20,[87,772,773],{"class":111},"  },\n",[87,775,777],{"class":89,"line":776},21,[87,778,150],{"class":111},[87,780,782],{"class":89,"line":781},22,[87,783,157],{"emptyLinePlaceholder":156},[87,785,787,789,792,794,796,798,801,803,805],{"class":89,"line":786},23,[87,788,214],{"class":100},[87,790,791],{"class":239}," lynn",[87,793,131],{"class":100},[87,795,661],{"class":104},[87,797,574],{"class":111},[87,799,800],{"class":239},"null",[87,802,669],{"class":111},[87,804,518],{"class":100},[87,806,112],{"class":111},[87,808,810,812,815],{"class":89,"line":809},24,[87,811,744],{"class":111},[87,813,814],{"class":342},"\"lynn\"",[87,816,750],{"class":111},[87,818,820,823,825],{"class":89,"line":819},25,[87,821,822],{"class":111},"  extraInfo: ",[87,824,800],{"class":239},[87,826,750],{"class":111},[87,828,830],{"class":89,"line":829},26,[87,831,150],{"class":111},[87,833,835],{"class":89,"line":834},27,[87,836,157],{"emptyLinePlaceholder":156},[87,838,840],{"class":89,"line":839},28,[87,841,842],{"class":93},"// 타입 별칭을 사용한 재사용\n",[87,844,846,848,851,853],{"class":89,"line":845},29,[87,847,101],{"class":100},[87,849,850],{"class":104}," NicoExtra",[87,852,108],{"class":100},[87,854,112],{"class":111},[87,856,858,861,863,865],{"class":89,"line":857},30,[87,859,860],{"class":127},"  favFood",[87,862,131],{"class":100},[87,864,683],{"class":239},[87,866,144],{"class":111},[87,868,870],{"class":89,"line":869},31,[87,871,150],{"class":111},[87,873,875],{"class":89,"line":874},32,[87,876,157],{"emptyLinePlaceholder":156},[87,878,880,882,885,887,889,891,894],{"class":89,"line":879},33,[87,881,101],{"class":100},[87,883,884],{"class":104}," NicoPlayer",[87,886,108],{"class":100},[87,888,661],{"class":104},[87,890,574],{"class":111},[87,892,893],{"class":104},"NicoExtra",[87,895,896],{"class":111},">;\n",[87,898,900],{"class":89,"line":899},34,[87,901,157],{"emptyLinePlaceholder":156},[87,903,905,907,910,912,914,916],{"class":89,"line":904},35,[87,906,214],{"class":100},[87,908,909],{"class":239}," nico2",[87,911,131],{"class":100},[87,913,884],{"class":104},[87,915,108],{"class":100},[87,917,112],{"class":111},[87,919,921,923,925],{"class":89,"line":920},36,[87,922,744],{"class":111},[87,924,747],{"class":342},[87,926,750],{"class":111},[87,928,930],{"class":89,"line":929},37,[87,931,756],{"class":111},[87,933,935,937,939],{"class":89,"line":934},38,[87,936,762],{"class":111},[87,938,765],{"class":342},[87,940,750],{"class":111},[87,942,944],{"class":89,"line":943},39,[87,945,773],{"class":111},[87,947,949],{"class":89,"line":948},40,[87,950,150],{"class":111},[10,952,954],{"id":953},"제네릭의-장점","제네릭의 장점",[22,956,957,964,970,976],{},[25,958,959,963],{},[960,961,962],"strong",{},"타입 안정성",": 컴파일 시점에서 타입 오류를 잡아낼 수 있습니다.",[25,965,966,969],{},[960,967,968],{},"코드 재사용",": 다양한 타입에 대해 동일한 로직을 재사용할 수 있습니다.",[25,971,972,975],{},[960,973,974],{},"유연성",": 타입을 파라미터화하여 다양한 상황에 대응할 수 있습니다.",[25,977,978,981],{},[960,979,980],{},"가독성",": 타입 정보가 명확하게 드러나 코드의 의도를 파악하기 쉽습니다.",[983,984,985],"style",{},"html pre.shiki code .stJHq, html code.shiki .stJHq{--shiki-default:#6A737D}html pre.shiki code .sXGI6, html code.shiki .sXGI6{--shiki-default:#D73A49}html pre.shiki code .stlaL, html code.shiki .stlaL{--shiki-default:#6F42C1}html pre.shiki code .sXk0b, html code.shiki .sXk0b{--shiki-default:#24292E}html pre.shiki code .skzk4, html code.shiki .skzk4{--shiki-default:#E36209}html pre.shiki code .s6Utp, html code.shiki .s6Utp{--shiki-default:#005CC5}html pre.shiki code .s2cXZ, html code.shiki .s2cXZ{--shiki-default:#032F62}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}",{"title":82,"searchDepth":97,"depth":97,"links":987},[988,989,995],{"id":12,"depth":97,"text":13},{"id":40,"depth":97,"text":41,"children":990},[991,992,993,994],{"id":53,"depth":115,"text":54},{"id":74,"depth":115,"text":75},{"id":405,"depth":115,"text":406},{"id":553,"depth":115,"text":554},{"id":953,"depth":97,"text":954},"2025-03-20T00:00:00.000Z","다형성은 객체 지향 프로그래밍의 핵심 개념 중 하나로, 같은 인터페이스를 통해 여러 다른 형태의 객체를 다룰 수 있게 해주는 기능입니다. TypeScript에서는 제네릭을 통해 다형성을 구현할 수 있습니다.","md",null,{},"/2025-03-20-polymorphism",{"title":5,"description":997},"2025-03-20-polymorphism",[1005,1006,1007],"TypeScript","다형성","제네릭","qdMygimxs1",1743315375765]