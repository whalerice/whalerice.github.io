[{"data":1,"prerenderedAt":975},["ShallowReactive",2],{"/2025-03-20-polymorphism":3},{"id":4,"title":5,"body":6,"date":964,"description":965,"extension":966,"image":967,"meta":968,"navigation":191,"path":969,"seo":970,"stem":971,"tags":972,"__hash__":974},"content/2025-03-20-polymorphism.md","다형성(Polymorphism)",{"type":7,"value":8,"toc":961},"minimal",[9,32,40,46,51,63,80,86,91,101,107,112,419,425,429,551,557,560,957],[10,11,12,13,17,18,21,22,25,26,29,30],"p",{},"기본적으로 함수는 여러가지 다른 모양, 다른 형태를 가지고 있으며, ",[14,15,16],"code",{},"overloading","처럼 다른 2~3 개의 파라미터을 가질 수 있다.\n",[19,20],"br",{},"\n또는, Typescript에서의 함수는 ",[14,23,24],{},"string","이나 ",[14,27,28],{},"object","를 첫 번째 파라미터로 가질 수 있다.\n",[19,31],{},[10,33,34,35,39],{},"이런 모든 것은 ",[36,37,38],"strong",{},"Polymorphism(다형성)"," 이라고 할 수 있다.",[10,41,42,44],{},[19,43],{},[19,45],{},[10,47,48],{},[36,49,50],{},"generic(제네릭) type 개념",[10,52,53,54,58,59,62],{},"타입의 ",[55,56,57],"em",{},"placeholder"," 같은 것으로 ",[14,60,61],{},"concrete type"," 를 대신해서 사용할 수 있다.",[10,64,65,67,68,71,72,75,76,79],{},[55,66,57],{}," 를 이용해서 ",[36,69,70],{},"전달하는 인자","를 ",[36,73,74],{},"추론","하여 ",[36,77,78],{},"함수를 실행","하는 것이다.",[10,81,82,84],{},[19,83],{},[19,85],{},[87,88,90],"h3",{"id":89},"generic-type을-왜-사용할까","generic type을 왜 사용할까?",[10,92,93,96,97,100],{},[55,94,95],{},"call signature"," 를 작성할 때, 여기 들어올 확실한 타입을 모를 때 ",[36,98,99],{},"generic type","을 사용한다.",[10,102,103,105],{},[19,104],{},[19,106],{},[108,109,111],"h4",{"id":110},"return-하는-generic-type","return 하는 generic type",[113,114,119],"pre",{"className":115,"code":116,"language":117,"meta":118,"style":118},"language-ts shiki shiki-themes github-light","// call signature\ntype SuperPrint = {\n  \u003CTypePlaceHolder>(arr: TypePlaceHolder[]): TypePlaceHolder;\n};\n\n// call signature\ntype SuperPrint = \u003CT>(arr: T[]) => T;\n\n// 함수 구현\nconst superPrint: SuperPrint = (arr) => arr[0];\n\n// 함수 실행\nconst a = superPrint([1, 2, 3, 4]);\nconst b = superPrint([true, false, true]);\nconst c = superPrint([\"a\", \"b\", \"c\"]);\nconst d = superPrint([1, 2, true, false, \"hello\"]);\n","ts","",[14,120,121,130,148,180,186,193,198,232,237,243,278,283,289,326,354,384],{"__ignoreMap":118},[122,123,126],"span",{"class":124,"line":125},"line",1,[122,127,129],{"class":128},"stJHq","// call signature\n",[122,131,133,137,141,144],{"class":124,"line":132},2,[122,134,136],{"class":135},"sXGI6","type",[122,138,140],{"class":139},"stlaL"," SuperPrint",[122,142,143],{"class":135}," =",[122,145,147],{"class":146},"sXk0b"," {\n",[122,149,151,154,157,160,164,167,170,173,175,177],{"class":124,"line":150},3,[122,152,153],{"class":146},"  \u003C",[122,155,156],{"class":139},"TypePlaceHolder",[122,158,159],{"class":146},">(",[122,161,163],{"class":162},"skzk4","arr",[122,165,166],{"class":135},":",[122,168,169],{"class":139}," TypePlaceHolder",[122,171,172],{"class":146},"[])",[122,174,166],{"class":135},[122,176,169],{"class":139},[122,178,179],{"class":146},";\n",[122,181,183],{"class":124,"line":182},4,[122,184,185],{"class":146},"};\n",[122,187,189],{"class":124,"line":188},5,[122,190,192],{"emptyLinePlaceholder":191},true,"\n",[122,194,196],{"class":124,"line":195},6,[122,197,129],{"class":128},[122,199,201,203,205,207,210,213,215,217,219,222,225,228,230],{"class":124,"line":200},7,[122,202,136],{"class":135},[122,204,140],{"class":139},[122,206,143],{"class":135},[122,208,209],{"class":146}," \u003C",[122,211,212],{"class":139},"T",[122,214,159],{"class":146},[122,216,163],{"class":162},[122,218,166],{"class":135},[122,220,221],{"class":139}," T",[122,223,224],{"class":146},"[]) ",[122,226,227],{"class":135},"=>",[122,229,221],{"class":139},[122,231,179],{"class":146},[122,233,235],{"class":124,"line":234},8,[122,236,192],{"emptyLinePlaceholder":191},[122,238,240],{"class":124,"line":239},9,[122,241,242],{"class":128},"// 함수 구현\n",[122,244,246,249,252,254,256,258,261,263,266,268,271,275],{"class":124,"line":245},10,[122,247,248],{"class":135},"const",[122,250,251],{"class":139}," superPrint",[122,253,166],{"class":135},[122,255,140],{"class":139},[122,257,143],{"class":135},[122,259,260],{"class":146}," (",[122,262,163],{"class":162},[122,264,265],{"class":146},") ",[122,267,227],{"class":135},[122,269,270],{"class":146}," arr[",[122,272,274],{"class":273},"s6Utp","0",[122,276,277],{"class":146},"];\n",[122,279,281],{"class":124,"line":280},11,[122,282,192],{"emptyLinePlaceholder":191},[122,284,286],{"class":124,"line":285},12,[122,287,288],{"class":128},"// 함수 실행\n",[122,290,292,294,297,299,301,304,307,310,313,315,318,320,323],{"class":124,"line":291},13,[122,293,248],{"class":135},[122,295,296],{"class":273}," a",[122,298,143],{"class":135},[122,300,251],{"class":139},[122,302,303],{"class":146},"([",[122,305,306],{"class":273},"1",[122,308,309],{"class":146},", ",[122,311,312],{"class":273},"2",[122,314,309],{"class":146},[122,316,317],{"class":273},"3",[122,319,309],{"class":146},[122,321,322],{"class":273},"4",[122,324,325],{"class":146},"]);\n",[122,327,329,331,334,336,338,340,343,345,348,350,352],{"class":124,"line":328},14,[122,330,248],{"class":135},[122,332,333],{"class":273}," b",[122,335,143],{"class":135},[122,337,251],{"class":139},[122,339,303],{"class":146},[122,341,342],{"class":273},"true",[122,344,309],{"class":146},[122,346,347],{"class":273},"false",[122,349,309],{"class":146},[122,351,342],{"class":273},[122,353,325],{"class":146},[122,355,357,359,362,364,366,368,372,374,377,379,382],{"class":124,"line":356},15,[122,358,248],{"class":135},[122,360,361],{"class":273}," c",[122,363,143],{"class":135},[122,365,251],{"class":139},[122,367,303],{"class":146},[122,369,371],{"class":370},"s2cXZ","\"a\"",[122,373,309],{"class":146},[122,375,376],{"class":370},"\"b\"",[122,378,309],{"class":146},[122,380,381],{"class":370},"\"c\"",[122,383,325],{"class":146},[122,385,387,389,392,394,396,398,400,402,404,406,408,410,412,414,417],{"class":124,"line":386},16,[122,388,248],{"class":135},[122,390,391],{"class":273}," d",[122,393,143],{"class":135},[122,395,251],{"class":139},[122,397,303],{"class":146},[122,399,306],{"class":273},[122,401,309],{"class":146},[122,403,312],{"class":273},[122,405,309],{"class":146},[122,407,342],{"class":273},[122,409,309],{"class":146},[122,411,347],{"class":273},[122,413,309],{"class":146},[122,415,416],{"class":370},"\"hello\"",[122,418,325],{"class":146},[10,420,421,423],{},[19,422],{},[19,424],{},[108,426,428],{"id":427},"복수의-generic-type","복수의 generic type",[113,430,432],{"className":115,"code":431,"language":117,"meta":118,"style":118},"type SuperPrint = {\n  (arr: T[], x: M): T;\n};\n\nconst superPrint: SuperPrint = (arr, x) => arr[0];\n\nlet a = superPrint([1, \"b\", true], \"hi\");\n",[14,433,434,444,475,479,483,513,517],{"__ignoreMap":118},[122,435,436,438,440,442],{"class":124,"line":125},[122,437,136],{"class":135},[122,439,140],{"class":139},[122,441,143],{"class":135},[122,443,147],{"class":146},[122,445,446,449,451,453,455,458,461,463,466,469,471,473],{"class":124,"line":132},[122,447,448],{"class":146},"  (",[122,450,163],{"class":162},[122,452,166],{"class":135},[122,454,221],{"class":139},[122,456,457],{"class":146},"[], ",[122,459,460],{"class":162},"x",[122,462,166],{"class":135},[122,464,465],{"class":139}," M",[122,467,468],{"class":146},")",[122,470,166],{"class":135},[122,472,221],{"class":139},[122,474,179],{"class":146},[122,476,477],{"class":124,"line":150},[122,478,185],{"class":146},[122,480,481],{"class":124,"line":182},[122,482,192],{"emptyLinePlaceholder":191},[122,484,485,487,489,491,493,495,497,499,501,503,505,507,509,511],{"class":124,"line":188},[122,486,248],{"class":135},[122,488,251],{"class":139},[122,490,166],{"class":135},[122,492,140],{"class":139},[122,494,143],{"class":135},[122,496,260],{"class":146},[122,498,163],{"class":162},[122,500,309],{"class":146},[122,502,460],{"class":162},[122,504,265],{"class":146},[122,506,227],{"class":135},[122,508,270],{"class":146},[122,510,274],{"class":273},[122,512,277],{"class":146},[122,514,515],{"class":124,"line":195},[122,516,192],{"emptyLinePlaceholder":191},[122,518,519,522,525,528,530,532,534,536,538,540,542,545,548],{"class":124,"line":200},[122,520,521],{"class":135},"let",[122,523,524],{"class":146}," a ",[122,526,527],{"class":135},"=",[122,529,251],{"class":139},[122,531,303],{"class":146},[122,533,306],{"class":273},[122,535,309],{"class":146},[122,537,376],{"class":370},[122,539,309],{"class":146},[122,541,342],{"class":273},[122,543,544],{"class":146},"], ",[122,546,547],{"class":370},"\"hi\"",[122,549,550],{"class":146},");\n",[10,552,553,555],{},[19,554],{},[19,556],{},[10,558,559],{},"ex)",[113,561,563],{"className":115,"code":562,"language":117,"meta":118,"style":118},"function superPrint\u003CT>(a: T[]) {\n  return a[0];\n}\n// 해당 배열의 타입을 타입스크립트가 추론함\nconst a = superPrint([1, 2, 3, 4]);\n\n// \u003CE>에 무엇이 들어가도 상관없음 대문자로 시작하시만 하면됨\ntype Player\u003CE> = {\n  name: string;\n  extraInfo: E;\n};\n\nconst nico: Player\u003C{ favFood: string }> = {\n  name: \"nico\",\n  extraInfo: {\n    favFood: \"kimchi\",\n  },\n};\n\nconst lynn: Player\u003Cnull> = {\n  name: \"lynn\",\n  extraInfo: null,\n};\n\ntype NicoPlayer = Player\u003C{ favFood: string }>;\n\nconst nico2: NicoPlayer = {\n  name: \"nico\",\n  extraInfo: {\n    favFood: \"kimchi\",\n  },\n};\n\ntype NicoExtra = {\n  favFood: string;\n};\n\ntype NicoPlayer = Player\u003CNicoExtra>;\n",[14,564,565,589,601,606,611,639,643,648,667,679,691,695,699,727,738,743,753,759,764,769,792,802,812,817,822,845,850,866,875,880,889,894,899,904,916,928,933,938],{"__ignoreMap":118},[122,566,567,570,572,575,577,579,582,584,586],{"class":124,"line":125},[122,568,569],{"class":135},"function",[122,571,251],{"class":139},[122,573,574],{"class":146},"\u003C",[122,576,212],{"class":139},[122,578,159],{"class":146},[122,580,581],{"class":162},"a",[122,583,166],{"class":135},[122,585,221],{"class":139},[122,587,588],{"class":146},"[]) {\n",[122,590,591,594,597,599],{"class":124,"line":132},[122,592,593],{"class":135},"  return",[122,595,596],{"class":146}," a[",[122,598,274],{"class":273},[122,600,277],{"class":146},[122,602,603],{"class":124,"line":150},[122,604,605],{"class":146},"}\n",[122,607,608],{"class":124,"line":182},[122,609,610],{"class":128},"// 해당 배열의 타입을 타입스크립트가 추론함\n",[122,612,613,615,617,619,621,623,625,627,629,631,633,635,637],{"class":124,"line":188},[122,614,248],{"class":135},[122,616,296],{"class":273},[122,618,143],{"class":135},[122,620,251],{"class":139},[122,622,303],{"class":146},[122,624,306],{"class":273},[122,626,309],{"class":146},[122,628,312],{"class":273},[122,630,309],{"class":146},[122,632,317],{"class":273},[122,634,309],{"class":146},[122,636,322],{"class":273},[122,638,325],{"class":146},[122,640,641],{"class":124,"line":195},[122,642,192],{"emptyLinePlaceholder":191},[122,644,645],{"class":124,"line":200},[122,646,647],{"class":128},"// \u003CE>에 무엇이 들어가도 상관없음 대문자로 시작하시만 하면됨\n",[122,649,650,652,655,657,660,663,665],{"class":124,"line":234},[122,651,136],{"class":135},[122,653,654],{"class":139}," Player",[122,656,574],{"class":146},[122,658,659],{"class":139},"E",[122,661,662],{"class":146},"> ",[122,664,527],{"class":135},[122,666,147],{"class":146},[122,668,669,672,674,677],{"class":124,"line":239},[122,670,671],{"class":162},"  name",[122,673,166],{"class":135},[122,675,676],{"class":273}," string",[122,678,179],{"class":146},[122,680,681,684,686,689],{"class":124,"line":245},[122,682,683],{"class":162},"  extraInfo",[122,685,166],{"class":135},[122,687,688],{"class":139}," E",[122,690,179],{"class":146},[122,692,693],{"class":124,"line":280},[122,694,185],{"class":146},[122,696,697],{"class":124,"line":285},[122,698,192],{"emptyLinePlaceholder":191},[122,700,701,703,706,708,710,713,716,718,720,723,725],{"class":124,"line":291},[122,702,248],{"class":135},[122,704,705],{"class":273}," nico",[122,707,166],{"class":135},[122,709,654],{"class":139},[122,711,712],{"class":146},"\u003C{ ",[122,714,715],{"class":162},"favFood",[122,717,166],{"class":135},[122,719,676],{"class":273},[122,721,722],{"class":146}," }> ",[122,724,527],{"class":135},[122,726,147],{"class":146},[122,728,729,732,735],{"class":124,"line":328},[122,730,731],{"class":146},"  name: ",[122,733,734],{"class":370},"\"nico\"",[122,736,737],{"class":146},",\n",[122,739,740],{"class":124,"line":356},[122,741,742],{"class":146},"  extraInfo: {\n",[122,744,745,748,751],{"class":124,"line":386},[122,746,747],{"class":146},"    favFood: ",[122,749,750],{"class":370},"\"kimchi\"",[122,752,737],{"class":146},[122,754,756],{"class":124,"line":755},17,[122,757,758],{"class":146},"  },\n",[122,760,762],{"class":124,"line":761},18,[122,763,185],{"class":146},[122,765,767],{"class":124,"line":766},19,[122,768,192],{"emptyLinePlaceholder":191},[122,770,772,774,777,779,781,783,786,788,790],{"class":124,"line":771},20,[122,773,248],{"class":135},[122,775,776],{"class":273}," lynn",[122,778,166],{"class":135},[122,780,654],{"class":139},[122,782,574],{"class":146},[122,784,785],{"class":273},"null",[122,787,662],{"class":146},[122,789,527],{"class":135},[122,791,147],{"class":146},[122,793,795,797,800],{"class":124,"line":794},21,[122,796,731],{"class":146},[122,798,799],{"class":370},"\"lynn\"",[122,801,737],{"class":146},[122,803,805,808,810],{"class":124,"line":804},22,[122,806,807],{"class":146},"  extraInfo: ",[122,809,785],{"class":273},[122,811,737],{"class":146},[122,813,815],{"class":124,"line":814},23,[122,816,185],{"class":146},[122,818,820],{"class":124,"line":819},24,[122,821,192],{"emptyLinePlaceholder":191},[122,823,825,827,830,832,834,836,838,840,842],{"class":124,"line":824},25,[122,826,136],{"class":135},[122,828,829],{"class":139}," NicoPlayer",[122,831,143],{"class":135},[122,833,654],{"class":139},[122,835,712],{"class":146},[122,837,715],{"class":162},[122,839,166],{"class":135},[122,841,676],{"class":273},[122,843,844],{"class":146}," }>;\n",[122,846,848],{"class":124,"line":847},26,[122,849,192],{"emptyLinePlaceholder":191},[122,851,853,855,858,860,862,864],{"class":124,"line":852},27,[122,854,248],{"class":135},[122,856,857],{"class":273}," nico2",[122,859,166],{"class":135},[122,861,829],{"class":139},[122,863,143],{"class":135},[122,865,147],{"class":146},[122,867,869,871,873],{"class":124,"line":868},28,[122,870,731],{"class":146},[122,872,734],{"class":370},[122,874,737],{"class":146},[122,876,878],{"class":124,"line":877},29,[122,879,742],{"class":146},[122,881,883,885,887],{"class":124,"line":882},30,[122,884,747],{"class":146},[122,886,750],{"class":370},[122,888,737],{"class":146},[122,890,892],{"class":124,"line":891},31,[122,893,758],{"class":146},[122,895,897],{"class":124,"line":896},32,[122,898,185],{"class":146},[122,900,902],{"class":124,"line":901},33,[122,903,192],{"emptyLinePlaceholder":191},[122,905,907,909,912,914],{"class":124,"line":906},34,[122,908,136],{"class":135},[122,910,911],{"class":139}," NicoExtra",[122,913,143],{"class":135},[122,915,147],{"class":146},[122,917,919,922,924,926],{"class":124,"line":918},35,[122,920,921],{"class":162},"  favFood",[122,923,166],{"class":135},[122,925,676],{"class":273},[122,927,179],{"class":146},[122,929,931],{"class":124,"line":930},36,[122,932,185],{"class":146},[122,934,936],{"class":124,"line":935},37,[122,937,192],{"emptyLinePlaceholder":191},[122,939,941,943,945,947,949,951,954],{"class":124,"line":940},38,[122,942,136],{"class":135},[122,944,829],{"class":139},[122,946,143],{"class":135},[122,948,654],{"class":139},[122,950,574],{"class":146},[122,952,953],{"class":139},"NicoExtra",[122,955,956],{"class":146},">;\n",[958,959,960],"style",{},"html pre.shiki code .stJHq, html code.shiki .stJHq{--shiki-default:#6A737D}html pre.shiki code .sXGI6, html code.shiki .sXGI6{--shiki-default:#D73A49}html pre.shiki code .stlaL, html code.shiki .stlaL{--shiki-default:#6F42C1}html pre.shiki code .sXk0b, html code.shiki .sXk0b{--shiki-default:#24292E}html pre.shiki code .skzk4, html code.shiki .skzk4{--shiki-default:#E36209}html pre.shiki code .s6Utp, html code.shiki .s6Utp{--shiki-default:#005CC5}html pre.shiki code .s2cXZ, html code.shiki .s2cXZ{--shiki-default:#032F62}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}",{"title":118,"searchDepth":132,"depth":132,"links":962},[963],{"id":89,"depth":150,"text":90},"2025-03-20T00:00:00.000Z","기본적으로 함수는 여러가지 다른 모양, 다른 형태를 가지고 있으며, overloading처럼 다른 2~3 개의 파라미터을 가질 수 있다. 또는, Typescript에서의 함수는 string이나 object를 첫 번째 파라미터로 가질 수 있다. 이런 모든 것은 Polymorphism(다형성)이라고 할 수 있다.","md",null,{},"/2025-03-20-polymorphism",{"title":5,"description":965},"2025-03-20-polymorphism",[973],"타입스크립트","G6TkyO1a0Y",1742469466021]