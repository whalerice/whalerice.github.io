[{"data":1,"prerenderedAt":850},["ShallowReactive",2],{"/2025-03-30-javascript-predicate":3},{"id":4,"title":5,"body":6,"date":839,"description":840,"extension":841,"image":842,"meta":843,"navigation":130,"path":844,"seo":845,"stem":846,"tags":847,"__hash__":849},"content/2025-03-30-javascript-predicate.md","자바스크립트 Predicate 이해하기",{"type":7,"value":8,"toc":826},"minimal",[9,13,18,21,34,38,43,268,272,509,513,540,544,548,642,646,816,819,822],[10,11,12],"p",{},"Predicate는 프로그래밍에서 참(true) 또는 거짓(false)을 반환하는 함수를 의미합니다. 자바스크립트에서 Predicate는 배열 메서드나 조건문에서 자주 사용되는 중요한 개념입니다.",[14,15,17],"h2",{"id":16},"predicate의-기본-개념","Predicate의 기본 개념",[10,19,20],{},"Predicate는 주로 다음과 같은 특징을 가집니다:",[22,23,24,28,31],"ol",{},[25,26,27],"li",{},"하나 이상의 매개변수를 받습니다",[25,29,30],{},"항상 boolean 값을 반환합니다",[25,32,33],{},"주로 조건을 검사하는 용도로 사용됩니다",[14,35,37],{"id":36},"자주-사용되는-predicate-예시","자주 사용되는 Predicate 예시",[39,40,42],"h3",{"id":41},"_1-배열-메서드에서의-predicate","1. 배열 메서드에서의 Predicate",[44,45,50],"pre",{"className":46,"code":47,"language":48,"meta":49,"style":49},"language-javascript shiki shiki-themes dracula","const numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\n// 짝수인지 확인하는 Predicate\nconst isEven = (num) => num % 2 === 0;\n\n// filter 메서드에서 Predicate 사용\nconst evenNumbers = numbers.filter(isEven);\nconsole.log(evenNumbers); // [2, 4, 6, 8, 10]\n\n// some 메서드에서 Predicate 사용\nconst hasEvenNumber = numbers.some(isEven);\nconsole.log(hasEvenNumber); // true\n","javascript","",[51,52,53,125,132,139,182,187,193,212,227,232,238,255],"code",{"__ignoreMap":49},[54,55,58,62,66,69,72,76,79,82,84,87,89,92,94,97,99,102,104,107,109,112,114,117,119,122],"span",{"class":56,"line":57},"line",1,[54,59,61],{"class":60},"sRedq","const",[54,63,65],{"class":64},"sddWA"," numbers ",[54,67,68],{"class":60},"=",[54,70,71],{"class":64}," [",[54,73,75],{"class":74},"sjKgF","1",[54,77,78],{"class":64},", ",[54,80,81],{"class":74},"2",[54,83,78],{"class":64},[54,85,86],{"class":74},"3",[54,88,78],{"class":64},[54,90,91],{"class":74},"4",[54,93,78],{"class":64},[54,95,96],{"class":74},"5",[54,98,78],{"class":64},[54,100,101],{"class":74},"6",[54,103,78],{"class":64},[54,105,106],{"class":74},"7",[54,108,78],{"class":64},[54,110,111],{"class":74},"8",[54,113,78],{"class":64},[54,115,116],{"class":74},"9",[54,118,78],{"class":64},[54,120,121],{"class":74},"10",[54,123,124],{"class":64},"];\n",[54,126,128],{"class":56,"line":127},2,[54,129,131],{"emptyLinePlaceholder":130},true,"\n",[54,133,135],{"class":56,"line":134},3,[54,136,138],{"class":137},"si6LB","// 짝수인지 확인하는 Predicate\n",[54,140,142,144,148,151,154,158,161,164,167,170,173,176,179],{"class":56,"line":141},4,[54,143,61],{"class":60},[54,145,147],{"class":146},"s57r0"," isEven",[54,149,150],{"class":60}," =",[54,152,153],{"class":64}," (",[54,155,157],{"class":156},"sDXMj","num",[54,159,160],{"class":64},") ",[54,162,163],{"class":60},"=>",[54,165,166],{"class":64}," num ",[54,168,169],{"class":60},"%",[54,171,172],{"class":74}," 2",[54,174,175],{"class":60}," ===",[54,177,178],{"class":74}," 0",[54,180,181],{"class":64},";\n",[54,183,185],{"class":56,"line":184},5,[54,186,131],{"emptyLinePlaceholder":130},[54,188,190],{"class":56,"line":189},6,[54,191,192],{"class":137},"// filter 메서드에서 Predicate 사용\n",[54,194,196,198,201,203,206,209],{"class":56,"line":195},7,[54,197,61],{"class":60},[54,199,200],{"class":64}," evenNumbers ",[54,202,68],{"class":60},[54,204,205],{"class":64}," numbers.",[54,207,208],{"class":146},"filter",[54,210,211],{"class":64},"(isEven);\n",[54,213,215,218,221,224],{"class":56,"line":214},8,[54,216,217],{"class":64},"console.",[54,219,220],{"class":146},"log",[54,222,223],{"class":64},"(evenNumbers); ",[54,225,226],{"class":137},"// [2, 4, 6, 8, 10]\n",[54,228,230],{"class":56,"line":229},9,[54,231,131],{"emptyLinePlaceholder":130},[54,233,235],{"class":56,"line":234},10,[54,236,237],{"class":137},"// some 메서드에서 Predicate 사용\n",[54,239,241,243,246,248,250,253],{"class":56,"line":240},11,[54,242,61],{"class":60},[54,244,245],{"class":64}," hasEvenNumber ",[54,247,68],{"class":60},[54,249,205],{"class":64},[54,251,252],{"class":146},"some",[54,254,211],{"class":64},[54,256,258,260,262,265],{"class":56,"line":257},12,[54,259,217],{"class":64},[54,261,220],{"class":146},[54,263,264],{"class":64},"(hasEvenNumber); ",[54,266,267],{"class":137},"// true\n",[39,269,271],{"id":270},"_2-객체-검증에서의-predicate","2. 객체 검증에서의 Predicate",[44,273,275],{"className":46,"code":274,"language":48,"meta":49,"style":49},"const user = {\n  name: \"홍길동\",\n  age: 25,\n  email: \"hong@example.com\",\n};\n\n// 유효성 검사를 위한 Predicate들\nconst isValidName = (name) => name.length >= 2;\nconst isValidAge = (age) => age >= 0 && age \u003C= 120;\nconst isValidEmail = (email) => email.includes(\"@\");\n\n// Predicate들을 조합하여 사용\nconst isValidUser = (user) =>\n  isValidName(user.name) && isValidAge(user.age) && isValidEmail(user.email);\n",[51,276,277,289,311,323,339,344,348,353,381,419,456,460,465,485],{"__ignoreMap":49},[54,278,279,281,284,286],{"class":56,"line":57},[54,280,61],{"class":60},[54,282,283],{"class":64}," user ",[54,285,68],{"class":60},[54,287,288],{"class":64}," {\n",[54,290,291,294,297,301,305,308],{"class":56,"line":127},[54,292,293],{"class":64},"  name",[54,295,296],{"class":60},":",[54,298,300],{"class":299},"syA0A"," \"",[54,302,304],{"class":303},"shai9","홍길동",[54,306,307],{"class":299},"\"",[54,309,310],{"class":64},",\n",[54,312,313,316,318,321],{"class":56,"line":134},[54,314,315],{"class":64},"  age",[54,317,296],{"class":60},[54,319,320],{"class":74}," 25",[54,322,310],{"class":64},[54,324,325,328,330,332,335,337],{"class":56,"line":141},[54,326,327],{"class":64},"  email",[54,329,296],{"class":60},[54,331,300],{"class":299},[54,333,334],{"class":303},"hong@example.com",[54,336,307],{"class":299},[54,338,310],{"class":64},[54,340,341],{"class":56,"line":184},[54,342,343],{"class":64},"};\n",[54,345,346],{"class":56,"line":189},[54,347,131],{"emptyLinePlaceholder":130},[54,349,350],{"class":56,"line":195},[54,351,352],{"class":137},"// 유효성 검사를 위한 Predicate들\n",[54,354,355,357,360,362,364,367,369,371,374,377,379],{"class":56,"line":214},[54,356,61],{"class":60},[54,358,359],{"class":146}," isValidName",[54,361,150],{"class":60},[54,363,153],{"class":64},[54,365,366],{"class":156},"name",[54,368,160],{"class":64},[54,370,163],{"class":60},[54,372,373],{"class":64}," name.length ",[54,375,376],{"class":60},">=",[54,378,172],{"class":74},[54,380,181],{"class":64},[54,382,383,385,388,390,392,395,397,399,402,404,406,409,411,414,417],{"class":56,"line":229},[54,384,61],{"class":60},[54,386,387],{"class":146}," isValidAge",[54,389,150],{"class":60},[54,391,153],{"class":64},[54,393,394],{"class":156},"age",[54,396,160],{"class":64},[54,398,163],{"class":60},[54,400,401],{"class":64}," age ",[54,403,376],{"class":60},[54,405,178],{"class":74},[54,407,408],{"class":60}," &&",[54,410,401],{"class":64},[54,412,413],{"class":60},"\u003C=",[54,415,416],{"class":74}," 120",[54,418,181],{"class":64},[54,420,421,423,426,428,430,433,435,437,440,443,446,448,451,453],{"class":56,"line":234},[54,422,61],{"class":60},[54,424,425],{"class":146}," isValidEmail",[54,427,150],{"class":60},[54,429,153],{"class":64},[54,431,432],{"class":156},"email",[54,434,160],{"class":64},[54,436,163],{"class":60},[54,438,439],{"class":64}," email.",[54,441,442],{"class":146},"includes",[54,444,445],{"class":64},"(",[54,447,307],{"class":299},[54,449,450],{"class":303},"@",[54,452,307],{"class":299},[54,454,455],{"class":64},");\n",[54,457,458],{"class":56,"line":240},[54,459,131],{"emptyLinePlaceholder":130},[54,461,462],{"class":56,"line":257},[54,463,464],{"class":137},"// Predicate들을 조합하여 사용\n",[54,466,468,470,473,475,477,480,482],{"class":56,"line":467},13,[54,469,61],{"class":60},[54,471,472],{"class":146}," isValidUser",[54,474,150],{"class":60},[54,476,153],{"class":64},[54,478,479],{"class":156},"user",[54,481,160],{"class":64},[54,483,484],{"class":60},"=>\n",[54,486,488,491,494,497,499,502,504,506],{"class":56,"line":487},14,[54,489,490],{"class":146},"  isValidName",[54,492,493],{"class":64},"(user.name) ",[54,495,496],{"class":60},"&&",[54,498,387],{"class":146},[54,500,501],{"class":64},"(user.age) ",[54,503,496],{"class":60},[54,505,425],{"class":146},[54,507,508],{"class":64},"(user.email);\n",[14,510,512],{"id":511},"predicate의-장점","Predicate의 장점",[22,514,515,522,528,534],{},[25,516,517,521],{},[518,519,520],"strong",{},"재사용성",": 한 번 정의한 Predicate를 여러 곳에서 재사용할 수 있습니다.",[25,523,524,527],{},[518,525,526],{},"가독성",": 조건 로직을 명확하게 표현할 수 있습니다.",[25,529,530,533],{},[518,531,532],{},"유지보수성",": 조건 변경이 필요할 때 한 곳만 수정하면 됩니다.",[25,535,536,539],{},[518,537,538],{},"테스트 용이성",": Predicate는 순수 함수이므로 단위 테스트가 쉽습니다.",[14,541,543],{"id":542},"고급-predicate-활용","고급 Predicate 활용",[39,545,547],{"id":546},"_1-predicate-조합","1. Predicate 조합",[44,549,551],{"className":46,"code":550,"language":48,"meta":49,"style":49},"const isPositive = (num) => num > 0;\nconst isInteger = (num) => Number.isInteger(num);\n\n// Predicate 조합\nconst isPositiveInteger = (num) => isPositive(num) && isInteger(num);\n",[51,552,553,579,605,609,614],{"__ignoreMap":49},[54,554,555,557,560,562,564,566,568,570,572,575,577],{"class":56,"line":57},[54,556,61],{"class":60},[54,558,559],{"class":146}," isPositive",[54,561,150],{"class":60},[54,563,153],{"class":64},[54,565,157],{"class":156},[54,567,160],{"class":64},[54,569,163],{"class":60},[54,571,166],{"class":64},[54,573,574],{"class":60},">",[54,576,178],{"class":74},[54,578,181],{"class":64},[54,580,581,583,586,588,590,592,594,596,599,602],{"class":56,"line":127},[54,582,61],{"class":60},[54,584,585],{"class":146}," isInteger",[54,587,150],{"class":60},[54,589,153],{"class":64},[54,591,157],{"class":156},[54,593,160],{"class":64},[54,595,163],{"class":60},[54,597,598],{"class":64}," Number.",[54,600,601],{"class":146},"isInteger",[54,603,604],{"class":64},"(num);\n",[54,606,607],{"class":56,"line":134},[54,608,131],{"emptyLinePlaceholder":130},[54,610,611],{"class":56,"line":141},[54,612,613],{"class":137},"// Predicate 조합\n",[54,615,616,618,621,623,625,627,629,631,633,636,638,640],{"class":56,"line":184},[54,617,61],{"class":60},[54,619,620],{"class":146}," isPositiveInteger",[54,622,150],{"class":60},[54,624,153],{"class":64},[54,626,157],{"class":156},[54,628,160],{"class":64},[54,630,163],{"class":60},[54,632,559],{"class":146},[54,634,635],{"class":64},"(num) ",[54,637,496],{"class":60},[54,639,585],{"class":146},[54,641,604],{"class":64},[39,643,645],{"id":644},"_2-커링을-활용한-predicate","2. 커링을 활용한 Predicate",[44,647,649],{"className":46,"code":648,"language":48,"meta":49,"style":49},"const greaterThan = (threshold) => (value) => value > threshold;\nconst lessThan = (threshold) => (value) => value \u003C threshold;\n\nconst isBetween = (min, max) => (value) =>\n  greaterThan(min)(value) && lessThan(max)(value);\n\nconst isInRange = isBetween(0, 100);\nconsole.log(isInRange(50)); // true\n",[51,650,651,686,718,722,753,768,772,795],{"__ignoreMap":49},[54,652,653,655,658,660,662,665,667,669,671,674,676,678,681,683],{"class":56,"line":57},[54,654,61],{"class":60},[54,656,657],{"class":146}," greaterThan",[54,659,150],{"class":60},[54,661,153],{"class":64},[54,663,664],{"class":156},"threshold",[54,666,160],{"class":64},[54,668,163],{"class":60},[54,670,153],{"class":64},[54,672,673],{"class":156},"value",[54,675,160],{"class":64},[54,677,163],{"class":60},[54,679,680],{"class":64}," value ",[54,682,574],{"class":60},[54,684,685],{"class":64}," threshold;\n",[54,687,688,690,693,695,697,699,701,703,705,707,709,711,713,716],{"class":56,"line":127},[54,689,61],{"class":60},[54,691,692],{"class":146}," lessThan",[54,694,150],{"class":60},[54,696,153],{"class":64},[54,698,664],{"class":156},[54,700,160],{"class":64},[54,702,163],{"class":60},[54,704,153],{"class":64},[54,706,673],{"class":156},[54,708,160],{"class":64},[54,710,163],{"class":60},[54,712,680],{"class":64},[54,714,715],{"class":60},"\u003C",[54,717,685],{"class":64},[54,719,720],{"class":56,"line":134},[54,721,131],{"emptyLinePlaceholder":130},[54,723,724,726,729,731,733,736,738,741,743,745,747,749,751],{"class":56,"line":141},[54,725,61],{"class":60},[54,727,728],{"class":146}," isBetween",[54,730,150],{"class":60},[54,732,153],{"class":64},[54,734,735],{"class":156},"min",[54,737,78],{"class":64},[54,739,740],{"class":156},"max",[54,742,160],{"class":64},[54,744,163],{"class":60},[54,746,153],{"class":64},[54,748,673],{"class":156},[54,750,160],{"class":64},[54,752,484],{"class":60},[54,754,755,758,761,763,765],{"class":56,"line":184},[54,756,757],{"class":146},"  greaterThan",[54,759,760],{"class":64},"(min)(value) ",[54,762,496],{"class":60},[54,764,692],{"class":146},[54,766,767],{"class":64},"(max)(value);\n",[54,769,770],{"class":56,"line":189},[54,771,131],{"emptyLinePlaceholder":130},[54,773,774,776,779,781,783,785,788,790,793],{"class":56,"line":195},[54,775,61],{"class":60},[54,777,778],{"class":64}," isInRange ",[54,780,68],{"class":60},[54,782,728],{"class":146},[54,784,445],{"class":64},[54,786,787],{"class":74},"0",[54,789,78],{"class":64},[54,791,792],{"class":74},"100",[54,794,455],{"class":64},[54,796,797,799,801,803,806,808,811,814],{"class":56,"line":214},[54,798,217],{"class":64},[54,800,220],{"class":146},[54,802,445],{"class":64},[54,804,805],{"class":146},"isInRange",[54,807,445],{"class":64},[54,809,810],{"class":74},"50",[54,812,813],{"class":64},")); ",[54,815,267],{"class":137},[14,817,818],{"id":818},"결론",[10,820,821],{},"Predicate는 자바스크립트에서 조건부 로직을 표현하는 강력한 도구입니다. 특히 배열 메서드나 객체 검증에서 자주 사용되며, 코드의 재사용성과 가독성을 높이는 데 도움을 줍니다. Predicate를 적절히 활용하면 더 깔끔하고 유지보수하기 쉬운 코드를 작성할 수 있습니다.",[823,824,825],"style",{},"html pre.shiki code .sRedq, html code.shiki .sRedq{--shiki-default:#FF79C6}html pre.shiki code .sddWA, html code.shiki .sddWA{--shiki-default:#F8F8F2}html pre.shiki code .sjKgF, html code.shiki .sjKgF{--shiki-default:#BD93F9}html pre.shiki code .si6LB, html code.shiki .si6LB{--shiki-default:#6272A4}html pre.shiki code .s57r0, html code.shiki .s57r0{--shiki-default:#50FA7B}html pre.shiki code .sDXMj, html code.shiki .sDXMj{--shiki-default:#FFB86C;--shiki-default-font-style:italic}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html pre.shiki code .syA0A, html code.shiki .syA0A{--shiki-default:#E9F284}html pre.shiki code .shai9, html code.shiki .shai9{--shiki-default:#F1FA8C}",{"title":49,"searchDepth":127,"depth":127,"links":827},[828,829,833,834,838],{"id":16,"depth":127,"text":17},{"id":36,"depth":127,"text":37,"children":830},[831,832],{"id":41,"depth":134,"text":42},{"id":270,"depth":134,"text":271},{"id":511,"depth":127,"text":512},{"id":542,"depth":127,"text":543,"children":835},[836,837],{"id":546,"depth":134,"text":547},{"id":644,"depth":134,"text":645},{"id":818,"depth":127,"text":818},"2025-03-30T00:00:00.000Z","자바스크립트에서 Predicate의 개념과 활용 방법에 대해 알아봅니다.","md",null,{},"/2025-03-30-javascript-predicate",{"title":5,"description":840},"2025-03-30-javascript-predicate",[848],"JavaScript","u5C27b6bf7",1743513278385]