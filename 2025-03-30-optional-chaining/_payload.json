[{"data":1,"prerenderedAt":374},["ShallowReactive",2],{"/2025-03-30-optional-chaining":3},{"id":4,"title":5,"body":6,"date":363,"description":364,"extension":365,"image":366,"meta":367,"navigation":92,"path":368,"seo":369,"stem":370,"tags":371,"__hash__":373},"content/2025-03-30-optional-chaining.md","Optional Chaining (옵셔널 체이닝)",{"type":7,"value":8,"toc":350},"minimal",[9,13,22,27,41,46,112,116,160,164,168,209,213,237,241,306,309,325,340,343,346],[10,11,5],"h1",{"id":12},"optional-chaining-옵셔널-체이닝",[14,15,16,17,21],"p",{},"Optional Chaining은 자바스크립트 ES2020에서 도입된 기능으로, 객체의 속성에 안전하게 접근할 수 있게 해주는 연산자입니다. ",[18,19,20],"code",{},"?."," 연산자를 사용하여 구현됩니다.",[23,24,26],"h2",{"id":25},"왜-optional-chaining이-필요한가","왜 Optional Chaining이 필요한가?",[14,28,29,30,33,34,37,38,40],{},"객체의 중첩된 속성에 접근할 때, 중간 속성이 ",[18,31,32],{},"undefined"," 또는 ",[18,35,36],{},"null","인 경우 에러가 발생할 수 있습니다. Optional Chaining은 이러한 상황에서 코드가 중단되지 않고 ",[18,39,32],{},"를 반환하도록 해줍니다.",[42,43,45],"h3",{"id":44},"전통적인-방식","전통적인 방식",[47,48,53],"pre",{"className":49,"code":50,"language":51,"meta":52,"style":52},"language-javascript shiki shiki-themes github-light","const user = {\n  address: {\n    street: \"Main St\",\n  },\n};\n\n// 안전하지 않은 접근\nconsole.log(user.address.street); // 'Main St'\nconsole.log(user.contact.email); // TypeError: Cannot read property 'email' of undefined\n","javascript","",[18,54,55,63,69,75,81,87,94,100,106],{"__ignoreMap":52},[56,57,60],"span",{"class":58,"line":59},"line",1,[56,61,62],{},"const user = {\n",[56,64,66],{"class":58,"line":65},2,[56,67,68],{},"  address: {\n",[56,70,72],{"class":58,"line":71},3,[56,73,74],{},"    street: \"Main St\",\n",[56,76,78],{"class":58,"line":77},4,[56,79,80],{},"  },\n",[56,82,84],{"class":58,"line":83},5,[56,85,86],{},"};\n",[56,88,90],{"class":58,"line":89},6,[56,91,93],{"emptyLinePlaceholder":92},true,"\n",[56,95,97],{"class":58,"line":96},7,[56,98,99],{},"// 안전하지 않은 접근\n",[56,101,103],{"class":58,"line":102},8,[56,104,105],{},"console.log(user.address.street); // 'Main St'\n",[56,107,109],{"class":58,"line":108},9,[56,110,111],{},"console.log(user.contact.email); // TypeError: Cannot read property 'email' of undefined\n",[42,113,115],{"id":114},"optional-chaining-사용","Optional Chaining 사용",[47,117,119],{"className":49,"code":118,"language":51,"meta":52,"style":52},"const user = {\n  address: {\n    street: \"Main St\",\n  },\n};\n\n// 안전한 접근\nconsole.log(user?.address?.street); // 'Main St'\nconsole.log(user?.contact?.email); // undefined\n",[18,120,121,125,129,133,137,141,145,150,155],{"__ignoreMap":52},[56,122,123],{"class":58,"line":59},[56,124,62],{},[56,126,127],{"class":58,"line":65},[56,128,68],{},[56,130,131],{"class":58,"line":71},[56,132,74],{},[56,134,135],{"class":58,"line":77},[56,136,80],{},[56,138,139],{"class":58,"line":83},[56,140,86],{},[56,142,143],{"class":58,"line":89},[56,144,93],{"emptyLinePlaceholder":92},[56,146,147],{"class":58,"line":96},[56,148,149],{},"// 안전한 접근\n",[56,151,152],{"class":58,"line":102},[56,153,154],{},"console.log(user?.address?.street); // 'Main St'\n",[56,156,157],{"class":58,"line":108},[56,158,159],{},"console.log(user?.contact?.email); // undefined\n",[23,161,163],{"id":162},"주요-사용-사례","주요 사용 사례",[42,165,167],{"id":166},"_1-메서드-호출","1. 메서드 호출",[47,169,171],{"className":49,"code":170,"language":51,"meta":52,"style":52},"const user = {\n  greet() {\n    return \"Hello!\";\n  },\n};\n\nconsole.log(user?.greet?.()); // 'Hello!'\nconsole.log(user?.nonexistentMethod?.()); // undefined\n",[18,172,173,177,182,187,191,195,199,204],{"__ignoreMap":52},[56,174,175],{"class":58,"line":59},[56,176,62],{},[56,178,179],{"class":58,"line":65},[56,180,181],{},"  greet() {\n",[56,183,184],{"class":58,"line":71},[56,185,186],{},"    return \"Hello!\";\n",[56,188,189],{"class":58,"line":77},[56,190,80],{},[56,192,193],{"class":58,"line":83},[56,194,86],{},[56,196,197],{"class":58,"line":89},[56,198,93],{"emptyLinePlaceholder":92},[56,200,201],{"class":58,"line":96},[56,202,203],{},"console.log(user?.greet?.()); // 'Hello!'\n",[56,205,206],{"class":58,"line":102},[56,207,208],{},"console.log(user?.nonexistentMethod?.()); // undefined\n",[42,210,212],{"id":211},"_2-배열-접근","2. 배열 접근",[47,214,216],{"className":49,"code":215,"language":51,"meta":52,"style":52},"const users = [{ name: \"John\" }, { name: \"Jane\" }];\n\nconsole.log(users?.[0]?.name); // 'John'\nconsole.log(users?.[5]?.name); // undefined\n",[18,217,218,223,227,232],{"__ignoreMap":52},[56,219,220],{"class":58,"line":59},[56,221,222],{},"const users = [{ name: \"John\" }, { name: \"Jane\" }];\n",[56,224,225],{"class":58,"line":65},[56,226,93],{"emptyLinePlaceholder":92},[56,228,229],{"class":58,"line":71},[56,230,231],{},"console.log(users?.[0]?.name); // 'John'\n",[56,233,234],{"class":58,"line":77},[56,235,236],{},"console.log(users?.[5]?.name); // undefined\n",[42,238,240],{"id":239},"_3-api-응답-처리","3. API 응답 처리",[47,242,244],{"className":49,"code":243,"language":51,"meta":52,"style":52},"const response = {\n  data: {\n    user: {\n      profile: {\n        name: \"John Doe\",\n      },\n    },\n  },\n};\n\nconst userName = response?.data?.user?.profile?.name;\nconsole.log(userName); // 'John Doe'\n",[18,245,246,251,256,261,266,271,276,281,285,289,294,300],{"__ignoreMap":52},[56,247,248],{"class":58,"line":59},[56,249,250],{},"const response = {\n",[56,252,253],{"class":58,"line":65},[56,254,255],{},"  data: {\n",[56,257,258],{"class":58,"line":71},[56,259,260],{},"    user: {\n",[56,262,263],{"class":58,"line":77},[56,264,265],{},"      profile: {\n",[56,267,268],{"class":58,"line":83},[56,269,270],{},"        name: \"John Doe\",\n",[56,272,273],{"class":58,"line":89},[56,274,275],{},"      },\n",[56,277,278],{"class":58,"line":96},[56,279,280],{},"    },\n",[56,282,283],{"class":58,"line":102},[56,284,80],{},[56,286,287],{"class":58,"line":108},[56,288,86],{},[56,290,292],{"class":58,"line":291},10,[56,293,93],{"emptyLinePlaceholder":92},[56,295,297],{"class":58,"line":296},11,[56,298,299],{},"const userName = response?.data?.user?.profile?.name;\n",[56,301,303],{"class":58,"line":302},12,[56,304,305],{},"console.log(userName); // 'John Doe'\n",[23,307,308],{"id":308},"주의사항",[310,311,312,322],"ol",{},[313,314,315,316,318,319,321],"li",{},"Optional Chaining은 ",[18,317,32],{},"와 ",[18,320,36],{},"에 대해서만 작동합니다. 다른 falsy 값(0, '', false)에는 영향을 주지 않습니다.",[313,323,324],{},"Optional Chaining은 읽기 전용 연산자입니다. 할당 연산자와 함께 사용할 수 없습니다.",[47,326,328],{"className":49,"code":327,"language":51,"meta":52,"style":52},"const obj = {};\nobj?.property = 'value'; // SyntaxError\n",[18,329,330,335],{"__ignoreMap":52},[56,331,332],{"class":58,"line":59},[56,333,334],{},"const obj = {};\n",[56,336,337],{"class":58,"line":65},[56,338,339],{},"obj?.property = 'value'; // SyntaxError\n",[23,341,342],{"id":342},"결론",[14,344,345],{},"Optional Chaining은 코드의 안정성을 높이고 에러를 방지하는 데 매우 유용한 기능입니다. 특히 API 응답 처리나 복잡한 객체 구조를 다룰 때 유용하게 사용할 수 있습니다. 하지만 과도한 사용은 코드의 의도를 불명확하게 만들 수 있으므로, 적절한 상황에서만 사용하는 것이 좋습니다.",[347,348,349],"style",{},"html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}",{"title":52,"searchDepth":65,"depth":65,"links":351},[352,356,361,362],{"id":25,"depth":65,"text":26,"children":353},[354,355],{"id":44,"depth":71,"text":45},{"id":114,"depth":71,"text":115},{"id":162,"depth":65,"text":163,"children":357},[358,359,360],{"id":166,"depth":71,"text":167},{"id":211,"depth":71,"text":212},{"id":239,"depth":71,"text":240},{"id":308,"depth":65,"text":308},{"id":342,"depth":65,"text":342},"2025-03-30T00:00:00.000Z","자바스크립트의 Optional Chaining 연산자(?.)에 대해 알아보고 실제 사용 예시를 살펴봅니다.","md",null,{},"/2025-03-30-optional-chaining",{"title":5,"description":364},"2025-03-30-optional-chaining",[372],"JavaScript","33Qcv6bEYv",1743315375764]