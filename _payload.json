[{"data":1,"prerenderedAt":4902},["ShallowReactive",2],{"posts":3},{"total":4,"posts":5,"limit":129},11,[6,1730,2936,3576,4347],{"id":7,"title":8,"body":9,"date":1717,"description":1718,"extension":1719,"image":1720,"meta":1721,"navigation":119,"path":1722,"seo":1723,"stem":1724,"tags":1725,"__hash__":1729},"content/2025-04-03-data-type-map.md","자바스크립트 Map 자료형: 키-값 쌍의 효율적인 관리",{"type":10,"value":11,"toc":1699},"minimal",[12,25,31,36,42,58,64,68,71,237,241,246,343,347,457,461,553,557,663,667,758,762,766,983,987,1188,1192,1496,1502,1506,1537,1543,1546,1551,1684,1689,1695],[13,14,15,16,20,21,24],"p",{},"자바스크립트의 특별한 자료형인 ",[17,18,19],"code",{},"Map","에 대해 이야기해보려고 합니다.",[22,23],"br",{},"\nMap은 키-값 쌍을 효율적으로 관리할 수 있는 자료구조입니다.",[13,26,27,29],{},[22,28],{},[22,30],{},[32,33,35],"h2",{"id":34},"map이란-무엇인가요","Map이란 무엇인가요?",[13,37,38,39,41],{},"Map은 ES6(ECMAScript 2015)에서 도입된 새로운 자료구조로, 키-값 쌍을 저장하고 관리할 수 있게 해줍니다.",[22,40],{},"\n일반 객체와 비슷해 보이지만, Map은 다음과 같은 특징이 있습니다:",[43,44,45,49,52,55],"ul",{},[46,47,48],"li",{},"키로 어떤 타입이든 사용 가능 (객체는 문자열이나 심볼만 가능)",[46,50,51],{},"삽입 순서가 보장됨",[46,53,54],{},"크기를 쉽게 알 수 있음",[46,56,57],{},"반복이 용이함",[13,59,60,62],{},[22,61],{},[22,63],{},[32,65,67],{"id":66},"map-생성하기","Map 생성하기",[13,69,70],{},"Map을 만드는 방법은 매우 간단합니다:",[72,73,78],"pre",{"className":74,"code":75,"language":76,"meta":77,"style":77},"language-javascript shiki shiki-themes dracula","// 빈 Map 생성\nconst emptyMap = new Map();\n\n// 배열로부터 Map 생성\nconst map = new Map([\n  [\"key1\", \"value1\"],\n  [\"key2\", \"value2\"],\n  [1, \"number key\"],\n  [{}, \"object key\"],\n]);\n","javascript","",[17,79,80,89,114,121,127,144,173,196,216,231],{"__ignoreMap":77},[81,82,85],"span",{"class":83,"line":84},"line",1,[81,86,88],{"class":87},"si6LB","// 빈 Map 생성\n",[81,90,92,96,100,103,107,111],{"class":83,"line":91},2,[81,93,95],{"class":94},"sRedq","const",[81,97,99],{"class":98},"sddWA"," emptyMap ",[81,101,102],{"class":94},"=",[81,104,106],{"class":105},"sDz32"," new",[81,108,110],{"class":109},"s57r0"," Map",[81,112,113],{"class":98},"();\n",[81,115,117],{"class":83,"line":116},3,[81,118,120],{"emptyLinePlaceholder":119},true,"\n",[81,122,124],{"class":83,"line":123},4,[81,125,126],{"class":87},"// 배열로부터 Map 생성\n",[81,128,130,132,135,137,139,141],{"class":83,"line":129},5,[81,131,95],{"class":94},[81,133,134],{"class":98}," map ",[81,136,102],{"class":94},[81,138,106],{"class":105},[81,140,110],{"class":109},[81,142,143],{"class":98},"([\n",[81,145,147,150,154,158,160,163,165,168,170],{"class":83,"line":146},6,[81,148,149],{"class":98},"  [",[81,151,153],{"class":152},"syA0A","\"",[81,155,157],{"class":156},"shai9","key1",[81,159,153],{"class":152},[81,161,162],{"class":98},", ",[81,164,153],{"class":152},[81,166,167],{"class":156},"value1",[81,169,153],{"class":152},[81,171,172],{"class":98},"],\n",[81,174,176,178,180,183,185,187,189,192,194],{"class":83,"line":175},7,[81,177,149],{"class":98},[81,179,153],{"class":152},[81,181,182],{"class":156},"key2",[81,184,153],{"class":152},[81,186,162],{"class":98},[81,188,153],{"class":152},[81,190,191],{"class":156},"value2",[81,193,153],{"class":152},[81,195,172],{"class":98},[81,197,199,201,205,207,209,212,214],{"class":83,"line":198},8,[81,200,149],{"class":98},[81,202,204],{"class":203},"sjKgF","1",[81,206,162],{"class":98},[81,208,153],{"class":152},[81,210,211],{"class":156},"number key",[81,213,153],{"class":152},[81,215,172],{"class":98},[81,217,219,222,224,227,229],{"class":83,"line":218},9,[81,220,221],{"class":98},"  [{}, ",[81,223,153],{"class":152},[81,225,226],{"class":156},"object key",[81,228,153],{"class":152},[81,230,172],{"class":98},[81,232,234],{"class":83,"line":233},10,[81,235,236],{"class":98},"]);\n",[32,238,240],{"id":239},"map의-주요-메서드들","Map의 주요 메서드들",[242,243,245],"h3",{"id":244},"_1-값-추가하기-set","1. 값 추가하기 (set)",[72,247,249],{"className":74,"code":248,"language":76,"meta":77,"style":77},"const map = new Map();\nmap.set(\"name\", \"홍길동\");\nmap.set(\"age\", 25);\nmap.set(\"city\", \"서울\");\n",[17,250,251,265,295,317],{"__ignoreMap":77},[81,252,253,255,257,259,261,263],{"class":83,"line":84},[81,254,95],{"class":94},[81,256,134],{"class":98},[81,258,102],{"class":94},[81,260,106],{"class":105},[81,262,110],{"class":109},[81,264,113],{"class":98},[81,266,267,270,273,276,278,281,283,285,287,290,292],{"class":83,"line":91},[81,268,269],{"class":98},"map.",[81,271,272],{"class":109},"set",[81,274,275],{"class":98},"(",[81,277,153],{"class":152},[81,279,280],{"class":156},"name",[81,282,153],{"class":152},[81,284,162],{"class":98},[81,286,153],{"class":152},[81,288,289],{"class":156},"홍길동",[81,291,153],{"class":152},[81,293,294],{"class":98},");\n",[81,296,297,299,301,303,305,308,310,312,315],{"class":83,"line":116},[81,298,269],{"class":98},[81,300,272],{"class":109},[81,302,275],{"class":98},[81,304,153],{"class":152},[81,306,307],{"class":156},"age",[81,309,153],{"class":152},[81,311,162],{"class":98},[81,313,314],{"class":203},"25",[81,316,294],{"class":98},[81,318,319,321,323,325,327,330,332,334,336,339,341],{"class":83,"line":123},[81,320,269],{"class":98},[81,322,272],{"class":109},[81,324,275],{"class":98},[81,326,153],{"class":152},[81,328,329],{"class":156},"city",[81,331,153],{"class":152},[81,333,162],{"class":98},[81,335,153],{"class":152},[81,337,338],{"class":156},"서울",[81,340,153],{"class":152},[81,342,294],{"class":98},[242,344,346],{"id":345},"_2-값-가져오기-get","2. 값 가져오기 (get)",[72,348,350],{"className":74,"code":349,"language":76,"meta":77,"style":77},"const map = new Map([\n  [\"name\", \"홍길동\"],\n  [\"age\", 25],\n]);\nconsole.log(map.get(\"name\")); // '홍길동'\nconsole.log(map.get(\"age\")); // 25\n",[17,351,352,366,386,402,406,434],{"__ignoreMap":77},[81,353,354,356,358,360,362,364],{"class":83,"line":84},[81,355,95],{"class":94},[81,357,134],{"class":98},[81,359,102],{"class":94},[81,361,106],{"class":105},[81,363,110],{"class":109},[81,365,143],{"class":98},[81,367,368,370,372,374,376,378,380,382,384],{"class":83,"line":91},[81,369,149],{"class":98},[81,371,153],{"class":152},[81,373,280],{"class":156},[81,375,153],{"class":152},[81,377,162],{"class":98},[81,379,153],{"class":152},[81,381,289],{"class":156},[81,383,153],{"class":152},[81,385,172],{"class":98},[81,387,388,390,392,394,396,398,400],{"class":83,"line":116},[81,389,149],{"class":98},[81,391,153],{"class":152},[81,393,307],{"class":156},[81,395,153],{"class":152},[81,397,162],{"class":98},[81,399,314],{"class":203},[81,401,172],{"class":98},[81,403,404],{"class":83,"line":123},[81,405,236],{"class":98},[81,407,408,411,414,417,420,422,424,426,428,431],{"class":83,"line":129},[81,409,410],{"class":98},"console.",[81,412,413],{"class":109},"log",[81,415,416],{"class":98},"(map.",[81,418,419],{"class":109},"get",[81,421,275],{"class":98},[81,423,153],{"class":152},[81,425,280],{"class":156},[81,427,153],{"class":152},[81,429,430],{"class":98},")); ",[81,432,433],{"class":87},"// '홍길동'\n",[81,435,436,438,440,442,444,446,448,450,452,454],{"class":83,"line":146},[81,437,410],{"class":98},[81,439,413],{"class":109},[81,441,416],{"class":98},[81,443,419],{"class":109},[81,445,275],{"class":98},[81,447,153],{"class":152},[81,449,307],{"class":156},[81,451,153],{"class":152},[81,453,430],{"class":98},[81,455,456],{"class":87},"// 25\n",[242,458,460],{"id":459},"_3-값-삭제하기-delete","3. 값 삭제하기 (delete)",[72,462,464],{"className":74,"code":463,"language":76,"meta":77,"style":77},"const map = new Map([\n  [\"name\", \"홍길동\"],\n  [\"age\", 25],\n]);\nmap.delete(\"age\"); // true 반환\nconsole.log(map); // Map(1) { 'name' => '홍길동' }\n",[17,465,466,480,500,516,520,541],{"__ignoreMap":77},[81,467,468,470,472,474,476,478],{"class":83,"line":84},[81,469,95],{"class":94},[81,471,134],{"class":98},[81,473,102],{"class":94},[81,475,106],{"class":105},[81,477,110],{"class":109},[81,479,143],{"class":98},[81,481,482,484,486,488,490,492,494,496,498],{"class":83,"line":91},[81,483,149],{"class":98},[81,485,153],{"class":152},[81,487,280],{"class":156},[81,489,153],{"class":152},[81,491,162],{"class":98},[81,493,153],{"class":152},[81,495,289],{"class":156},[81,497,153],{"class":152},[81,499,172],{"class":98},[81,501,502,504,506,508,510,512,514],{"class":83,"line":116},[81,503,149],{"class":98},[81,505,153],{"class":152},[81,507,307],{"class":156},[81,509,153],{"class":152},[81,511,162],{"class":98},[81,513,314],{"class":203},[81,515,172],{"class":98},[81,517,518],{"class":83,"line":123},[81,519,236],{"class":98},[81,521,522,524,527,529,531,533,535,538],{"class":83,"line":129},[81,523,269],{"class":98},[81,525,526],{"class":109},"delete",[81,528,275],{"class":98},[81,530,153],{"class":152},[81,532,307],{"class":156},[81,534,153],{"class":152},[81,536,537],{"class":98},"); ",[81,539,540],{"class":87},"// true 반환\n",[81,542,543,545,547,550],{"class":83,"line":146},[81,544,410],{"class":98},[81,546,413],{"class":109},[81,548,549],{"class":98},"(map); ",[81,551,552],{"class":87},"// Map(1) { 'name' => '홍길동' }\n",[242,554,556],{"id":555},"_4-키-존재-확인하기-has","4. 키 존재 확인하기 (has)",[72,558,560],{"className":74,"code":559,"language":76,"meta":77,"style":77},"const map = new Map([\n  [\"name\", \"홍길동\"],\n  [\"age\", 25],\n]);\nconsole.log(map.has(\"name\")); // true\nconsole.log(map.has(\"city\")); // false\n",[17,561,562,576,596,612,616,640],{"__ignoreMap":77},[81,563,564,566,568,570,572,574],{"class":83,"line":84},[81,565,95],{"class":94},[81,567,134],{"class":98},[81,569,102],{"class":94},[81,571,106],{"class":105},[81,573,110],{"class":109},[81,575,143],{"class":98},[81,577,578,580,582,584,586,588,590,592,594],{"class":83,"line":91},[81,579,149],{"class":98},[81,581,153],{"class":152},[81,583,280],{"class":156},[81,585,153],{"class":152},[81,587,162],{"class":98},[81,589,153],{"class":152},[81,591,289],{"class":156},[81,593,153],{"class":152},[81,595,172],{"class":98},[81,597,598,600,602,604,606,608,610],{"class":83,"line":116},[81,599,149],{"class":98},[81,601,153],{"class":152},[81,603,307],{"class":156},[81,605,153],{"class":152},[81,607,162],{"class":98},[81,609,314],{"class":203},[81,611,172],{"class":98},[81,613,614],{"class":83,"line":123},[81,615,236],{"class":98},[81,617,618,620,622,624,627,629,631,633,635,637],{"class":83,"line":129},[81,619,410],{"class":98},[81,621,413],{"class":109},[81,623,416],{"class":98},[81,625,626],{"class":109},"has",[81,628,275],{"class":98},[81,630,153],{"class":152},[81,632,280],{"class":156},[81,634,153],{"class":152},[81,636,430],{"class":98},[81,638,639],{"class":87},"// true\n",[81,641,642,644,646,648,650,652,654,656,658,660],{"class":83,"line":146},[81,643,410],{"class":98},[81,645,413],{"class":109},[81,647,416],{"class":98},[81,649,626],{"class":109},[81,651,275],{"class":98},[81,653,153],{"class":152},[81,655,329],{"class":156},[81,657,153],{"class":152},[81,659,430],{"class":98},[81,661,662],{"class":87},"// false\n",[242,664,666],{"id":665},"_5-크기-확인하기-size","5. 크기 확인하기 (size)",[72,668,670],{"className":74,"code":669,"language":76,"meta":77,"style":77},"const map = new Map([\n  [\"name\", \"홍길동\"],\n  [\"age\", 25],\n  [\"city\", \"서울\"],\n]);\nconsole.log(map.size); // 3\n",[17,671,672,686,706,722,742,746],{"__ignoreMap":77},[81,673,674,676,678,680,682,684],{"class":83,"line":84},[81,675,95],{"class":94},[81,677,134],{"class":98},[81,679,102],{"class":94},[81,681,106],{"class":105},[81,683,110],{"class":109},[81,685,143],{"class":98},[81,687,688,690,692,694,696,698,700,702,704],{"class":83,"line":91},[81,689,149],{"class":98},[81,691,153],{"class":152},[81,693,280],{"class":156},[81,695,153],{"class":152},[81,697,162],{"class":98},[81,699,153],{"class":152},[81,701,289],{"class":156},[81,703,153],{"class":152},[81,705,172],{"class":98},[81,707,708,710,712,714,716,718,720],{"class":83,"line":116},[81,709,149],{"class":98},[81,711,153],{"class":152},[81,713,307],{"class":156},[81,715,153],{"class":152},[81,717,162],{"class":98},[81,719,314],{"class":203},[81,721,172],{"class":98},[81,723,724,726,728,730,732,734,736,738,740],{"class":83,"line":123},[81,725,149],{"class":98},[81,727,153],{"class":152},[81,729,329],{"class":156},[81,731,153],{"class":152},[81,733,162],{"class":98},[81,735,153],{"class":152},[81,737,338],{"class":156},[81,739,153],{"class":152},[81,741,172],{"class":98},[81,743,744],{"class":83,"line":129},[81,745,236],{"class":98},[81,747,748,750,752,755],{"class":83,"line":146},[81,749,410],{"class":98},[81,751,413],{"class":109},[81,753,754],{"class":98},"(map.size); ",[81,756,757],{"class":87},"// 3\n",[32,759,761],{"id":760},"map의-실제-활용-예시","Map의 실제 활용 예시",[242,763,765],{"id":764},"_1-사용자-세션-관리","1. 사용자 세션 관리",[72,767,769],{"className":74,"code":768,"language":76,"meta":77,"style":77},"const userSessions = new Map();\n\nfunction createSession(userId, sessionData) {\n  userSessions.set(userId, {\n    ...sessionData,\n    createdAt: new Date(),\n    lastActive: new Date(),\n  });\n}\n\nfunction updateLastActive(userId) {\n  const session = userSessions.get(userId);\n  if (session) {\n    session.lastActive = new Date();\n    userSessions.set(userId, session);\n  }\n}\n\nfunction removeSession(userId) {\n  userSessions.delete(userId);\n}\n",[17,770,771,786,790,812,822,830,846,859,864,869,873,886,905,914,928,939,945,950,955,969,978],{"__ignoreMap":77},[81,772,773,775,778,780,782,784],{"class":83,"line":84},[81,774,95],{"class":94},[81,776,777],{"class":98}," userSessions ",[81,779,102],{"class":94},[81,781,106],{"class":105},[81,783,110],{"class":109},[81,785,113],{"class":98},[81,787,788],{"class":83,"line":91},[81,789,120],{"emptyLinePlaceholder":119},[81,791,792,795,798,800,804,806,809],{"class":83,"line":116},[81,793,794],{"class":94},"function",[81,796,797],{"class":109}," createSession",[81,799,275],{"class":98},[81,801,803],{"class":802},"sDXMj","userId",[81,805,162],{"class":98},[81,807,808],{"class":802},"sessionData",[81,810,811],{"class":98},") {\n",[81,813,814,817,819],{"class":83,"line":123},[81,815,816],{"class":98},"  userSessions.",[81,818,272],{"class":109},[81,820,821],{"class":98},"(userId, {\n",[81,823,824,827],{"class":83,"line":129},[81,825,826],{"class":94},"    ...",[81,828,829],{"class":98},"sessionData,\n",[81,831,832,835,838,840,843],{"class":83,"line":146},[81,833,834],{"class":98},"    createdAt",[81,836,837],{"class":94},":",[81,839,106],{"class":105},[81,841,842],{"class":109}," Date",[81,844,845],{"class":98},"(),\n",[81,847,848,851,853,855,857],{"class":83,"line":175},[81,849,850],{"class":98},"    lastActive",[81,852,837],{"class":94},[81,854,106],{"class":105},[81,856,842],{"class":109},[81,858,845],{"class":98},[81,860,861],{"class":83,"line":198},[81,862,863],{"class":98},"  });\n",[81,865,866],{"class":83,"line":218},[81,867,868],{"class":98},"}\n",[81,870,871],{"class":83,"line":233},[81,872,120],{"emptyLinePlaceholder":119},[81,874,875,877,880,882,884],{"class":83,"line":4},[81,876,794],{"class":94},[81,878,879],{"class":109}," updateLastActive",[81,881,275],{"class":98},[81,883,803],{"class":802},[81,885,811],{"class":98},[81,887,889,892,895,897,900,902],{"class":83,"line":888},12,[81,890,891],{"class":94},"  const",[81,893,894],{"class":98}," session ",[81,896,102],{"class":94},[81,898,899],{"class":98}," userSessions.",[81,901,419],{"class":109},[81,903,904],{"class":98},"(userId);\n",[81,906,908,911],{"class":83,"line":907},13,[81,909,910],{"class":94},"  if",[81,912,913],{"class":98}," (session) {\n",[81,915,917,920,922,924,926],{"class":83,"line":916},14,[81,918,919],{"class":98},"    session.lastActive ",[81,921,102],{"class":94},[81,923,106],{"class":105},[81,925,842],{"class":109},[81,927,113],{"class":98},[81,929,931,934,936],{"class":83,"line":930},15,[81,932,933],{"class":98},"    userSessions.",[81,935,272],{"class":109},[81,937,938],{"class":98},"(userId, session);\n",[81,940,942],{"class":83,"line":941},16,[81,943,944],{"class":98},"  }\n",[81,946,948],{"class":83,"line":947},17,[81,949,868],{"class":98},[81,951,953],{"class":83,"line":952},18,[81,954,120],{"emptyLinePlaceholder":119},[81,956,958,960,963,965,967],{"class":83,"line":957},19,[81,959,794],{"class":94},[81,961,962],{"class":109}," removeSession",[81,964,275],{"class":98},[81,966,803],{"class":802},[81,968,811],{"class":98},[81,970,972,974,976],{"class":83,"line":971},20,[81,973,816],{"class":98},[81,975,526],{"class":109},[81,977,904],{"class":98},[81,979,981],{"class":83,"line":980},21,[81,982,868],{"class":98},[242,984,986],{"id":985},"_2-캐시-구현","2. 캐시 구현",[72,988,990],{"className":74,"code":989,"language":76,"meta":77,"style":77},"const cache = new Map();\n\nfunction getCachedData(key) {\n  if (cache.has(key)) {\n    const { data, timestamp } = cache.get(key);\n    // 1시간 이내의 캐시만 유효\n    if (Date.now() - timestamp \u003C 3600000) {\n      return data;\n    }\n    cache.delete(key);\n  }\n  return null;\n}\n\nfunction setCachedData(key, data) {\n  cache.set(key, {\n    data,\n    timestamp: Date.now(),\n  });\n}\n",[17,991,992,1007,1011,1025,1037,1055,1060,1088,1096,1101,1110,1114,1125,1129,1133,1151,1161,1166,1180,1184],{"__ignoreMap":77},[81,993,994,996,999,1001,1003,1005],{"class":83,"line":84},[81,995,95],{"class":94},[81,997,998],{"class":98}," cache ",[81,1000,102],{"class":94},[81,1002,106],{"class":105},[81,1004,110],{"class":109},[81,1006,113],{"class":98},[81,1008,1009],{"class":83,"line":91},[81,1010,120],{"emptyLinePlaceholder":119},[81,1012,1013,1015,1018,1020,1023],{"class":83,"line":116},[81,1014,794],{"class":94},[81,1016,1017],{"class":109}," getCachedData",[81,1019,275],{"class":98},[81,1021,1022],{"class":802},"key",[81,1024,811],{"class":98},[81,1026,1027,1029,1032,1034],{"class":83,"line":123},[81,1028,910],{"class":94},[81,1030,1031],{"class":98}," (cache.",[81,1033,626],{"class":109},[81,1035,1036],{"class":98},"(key)) {\n",[81,1038,1039,1042,1045,1047,1050,1052],{"class":83,"line":129},[81,1040,1041],{"class":94},"    const",[81,1043,1044],{"class":98}," { data, timestamp } ",[81,1046,102],{"class":94},[81,1048,1049],{"class":98}," cache.",[81,1051,419],{"class":109},[81,1053,1054],{"class":98},"(key);\n",[81,1056,1057],{"class":83,"line":146},[81,1058,1059],{"class":87},"    // 1시간 이내의 캐시만 유효\n",[81,1061,1062,1065,1068,1071,1074,1077,1080,1083,1086],{"class":83,"line":175},[81,1063,1064],{"class":94},"    if",[81,1066,1067],{"class":98}," (Date.",[81,1069,1070],{"class":109},"now",[81,1072,1073],{"class":98},"() ",[81,1075,1076],{"class":94},"-",[81,1078,1079],{"class":98}," timestamp ",[81,1081,1082],{"class":94},"\u003C",[81,1084,1085],{"class":203}," 3600000",[81,1087,811],{"class":98},[81,1089,1090,1093],{"class":83,"line":198},[81,1091,1092],{"class":94},"      return",[81,1094,1095],{"class":98}," data;\n",[81,1097,1098],{"class":83,"line":218},[81,1099,1100],{"class":98},"    }\n",[81,1102,1103,1106,1108],{"class":83,"line":233},[81,1104,1105],{"class":98},"    cache.",[81,1107,526],{"class":109},[81,1109,1054],{"class":98},[81,1111,1112],{"class":83,"line":4},[81,1113,944],{"class":98},[81,1115,1116,1119,1122],{"class":83,"line":888},[81,1117,1118],{"class":94},"  return",[81,1120,1121],{"class":203}," null",[81,1123,1124],{"class":98},";\n",[81,1126,1127],{"class":83,"line":907},[81,1128,868],{"class":98},[81,1130,1131],{"class":83,"line":916},[81,1132,120],{"emptyLinePlaceholder":119},[81,1134,1135,1137,1140,1142,1144,1146,1149],{"class":83,"line":930},[81,1136,794],{"class":94},[81,1138,1139],{"class":109}," setCachedData",[81,1141,275],{"class":98},[81,1143,1022],{"class":802},[81,1145,162],{"class":98},[81,1147,1148],{"class":802},"data",[81,1150,811],{"class":98},[81,1152,1153,1156,1158],{"class":83,"line":941},[81,1154,1155],{"class":98},"  cache.",[81,1157,272],{"class":109},[81,1159,1160],{"class":98},"(key, {\n",[81,1162,1163],{"class":83,"line":947},[81,1164,1165],{"class":98},"    data,\n",[81,1167,1168,1171,1173,1176,1178],{"class":83,"line":952},[81,1169,1170],{"class":98},"    timestamp",[81,1172,837],{"class":94},[81,1174,1175],{"class":98}," Date.",[81,1177,1070],{"class":109},[81,1179,845],{"class":98},[81,1181,1182],{"class":83,"line":957},[81,1183,863],{"class":98},[81,1185,1186],{"class":83,"line":971},[81,1187,868],{"class":98},[242,1189,1191],{"id":1190},"_3-map-순회하기","3. Map 순회하기",[72,1193,1195],{"className":74,"code":1194,"language":76,"meta":77,"style":77},"const map = new Map([\n  [\"name\", \"홍길동\"],\n  [\"age\", 25],\n  [\"city\", \"서울\"],\n]);\n\n// 키-값 쌍 순회\nfor (const [key, value] of map) {\n  console.log(`${key}: ${value}`);\n}\n\n// 키만 순회\nfor (const key of map.keys()) {\n  console.log(key);\n}\n\n// 값만 순회\nfor (const value of map.values()) {\n  console.log(value);\n}\n\n// Map을 배열로 변환\nconst entries = Array.from(map.entries());\nconst keys = Array.from(map.keys());\nconst values = Array.from(map.values());\n",[17,1196,1197,1211,1231,1247,1267,1271,1275,1280,1299,1333,1337,1341,1346,1368,1376,1380,1384,1389,1409,1418,1422,1426,1432,1456,1476],{"__ignoreMap":77},[81,1198,1199,1201,1203,1205,1207,1209],{"class":83,"line":84},[81,1200,95],{"class":94},[81,1202,134],{"class":98},[81,1204,102],{"class":94},[81,1206,106],{"class":105},[81,1208,110],{"class":109},[81,1210,143],{"class":98},[81,1212,1213,1215,1217,1219,1221,1223,1225,1227,1229],{"class":83,"line":91},[81,1214,149],{"class":98},[81,1216,153],{"class":152},[81,1218,280],{"class":156},[81,1220,153],{"class":152},[81,1222,162],{"class":98},[81,1224,153],{"class":152},[81,1226,289],{"class":156},[81,1228,153],{"class":152},[81,1230,172],{"class":98},[81,1232,1233,1235,1237,1239,1241,1243,1245],{"class":83,"line":116},[81,1234,149],{"class":98},[81,1236,153],{"class":152},[81,1238,307],{"class":156},[81,1240,153],{"class":152},[81,1242,162],{"class":98},[81,1244,314],{"class":203},[81,1246,172],{"class":98},[81,1248,1249,1251,1253,1255,1257,1259,1261,1263,1265],{"class":83,"line":123},[81,1250,149],{"class":98},[81,1252,153],{"class":152},[81,1254,329],{"class":156},[81,1256,153],{"class":152},[81,1258,162],{"class":98},[81,1260,153],{"class":152},[81,1262,338],{"class":156},[81,1264,153],{"class":152},[81,1266,172],{"class":98},[81,1268,1269],{"class":83,"line":129},[81,1270,236],{"class":98},[81,1272,1273],{"class":83,"line":146},[81,1274,120],{"emptyLinePlaceholder":119},[81,1276,1277],{"class":83,"line":175},[81,1278,1279],{"class":87},"// 키-값 쌍 순회\n",[81,1281,1282,1285,1288,1290,1293,1296],{"class":83,"line":198},[81,1283,1284],{"class":94},"for",[81,1286,1287],{"class":98}," (",[81,1289,95],{"class":94},[81,1291,1292],{"class":98}," [key, value] ",[81,1294,1295],{"class":94},"of",[81,1297,1298],{"class":98}," map) {\n",[81,1300,1301,1304,1306,1308,1311,1314,1316,1319,1322,1324,1327,1329,1331],{"class":83,"line":218},[81,1302,1303],{"class":98},"  console.",[81,1305,413],{"class":109},[81,1307,275],{"class":98},[81,1309,1310],{"class":156},"`",[81,1312,1313],{"class":94},"${",[81,1315,1022],{"class":98},[81,1317,1318],{"class":94},"}",[81,1320,1321],{"class":156},": ",[81,1323,1313],{"class":94},[81,1325,1326],{"class":98},"value",[81,1328,1318],{"class":94},[81,1330,1310],{"class":156},[81,1332,294],{"class":98},[81,1334,1335],{"class":83,"line":233},[81,1336,868],{"class":98},[81,1338,1339],{"class":83,"line":4},[81,1340,120],{"emptyLinePlaceholder":119},[81,1342,1343],{"class":83,"line":888},[81,1344,1345],{"class":87},"// 키만 순회\n",[81,1347,1348,1350,1352,1354,1357,1359,1362,1365],{"class":83,"line":907},[81,1349,1284],{"class":94},[81,1351,1287],{"class":98},[81,1353,95],{"class":94},[81,1355,1356],{"class":98}," key ",[81,1358,1295],{"class":94},[81,1360,1361],{"class":98}," map.",[81,1363,1364],{"class":109},"keys",[81,1366,1367],{"class":98},"()) {\n",[81,1369,1370,1372,1374],{"class":83,"line":916},[81,1371,1303],{"class":98},[81,1373,413],{"class":109},[81,1375,1054],{"class":98},[81,1377,1378],{"class":83,"line":930},[81,1379,868],{"class":98},[81,1381,1382],{"class":83,"line":941},[81,1383,120],{"emptyLinePlaceholder":119},[81,1385,1386],{"class":83,"line":947},[81,1387,1388],{"class":87},"// 값만 순회\n",[81,1390,1391,1393,1395,1397,1400,1402,1404,1407],{"class":83,"line":952},[81,1392,1284],{"class":94},[81,1394,1287],{"class":98},[81,1396,95],{"class":94},[81,1398,1399],{"class":98}," value ",[81,1401,1295],{"class":94},[81,1403,1361],{"class":98},[81,1405,1406],{"class":109},"values",[81,1408,1367],{"class":98},[81,1410,1411,1413,1415],{"class":83,"line":957},[81,1412,1303],{"class":98},[81,1414,413],{"class":109},[81,1416,1417],{"class":98},"(value);\n",[81,1419,1420],{"class":83,"line":971},[81,1421,868],{"class":98},[81,1423,1424],{"class":83,"line":980},[81,1425,120],{"emptyLinePlaceholder":119},[81,1427,1429],{"class":83,"line":1428},22,[81,1430,1431],{"class":87},"// Map을 배열로 변환\n",[81,1433,1435,1437,1440,1442,1445,1448,1450,1453],{"class":83,"line":1434},23,[81,1436,95],{"class":94},[81,1438,1439],{"class":98}," entries ",[81,1441,102],{"class":94},[81,1443,1444],{"class":98}," Array.",[81,1446,1447],{"class":109},"from",[81,1449,416],{"class":98},[81,1451,1452],{"class":109},"entries",[81,1454,1455],{"class":98},"());\n",[81,1457,1459,1461,1464,1466,1468,1470,1472,1474],{"class":83,"line":1458},24,[81,1460,95],{"class":94},[81,1462,1463],{"class":98}," keys ",[81,1465,102],{"class":94},[81,1467,1444],{"class":98},[81,1469,1447],{"class":109},[81,1471,416],{"class":98},[81,1473,1364],{"class":109},[81,1475,1455],{"class":98},[81,1477,1479,1481,1484,1486,1488,1490,1492,1494],{"class":83,"line":1478},25,[81,1480,95],{"class":94},[81,1482,1483],{"class":98}," values ",[81,1485,102],{"class":94},[81,1487,1444],{"class":98},[81,1489,1447],{"class":109},[81,1491,416],{"class":98},[81,1493,1406],{"class":109},[81,1495,1455],{"class":98},[13,1497,1498,1500],{},[22,1499],{},[22,1501],{},[32,1503,1505],{"id":1504},"map의-장점","Map의 장점",[1507,1508,1509,1516,1522,1528],"ol",{},[46,1510,1511,1515],{},[1512,1513,1514],"strong",{},"다양한 키 타입",": 객체는 문자열이나 심볼만 키로 사용할 수 있지만, Map은 어떤 타입이든 키로 사용 가능합니다.",[46,1517,1518,1521],{},[1512,1519,1520],{},"순서 보장",": 삽입 순서가 보장되어 있어 순회할 때 예측 가능한 순서로 데이터를 얻을 수 있습니다.",[46,1523,1524,1527],{},[1512,1525,1526],{},"성능",": 빈번한 추가/삭제 작업에서 객체보다 더 나은 성능을 보입니다.",[46,1529,1530,1321,1533,1536],{},[1512,1531,1532],{},"크기 확인",[17,1534,1535],{},"size"," 속성으로 쉽게 크기를 알 수 있습니다.",[13,1538,1539,1541],{},[22,1540],{},[22,1542],{},[32,1544,1545],{"id":1545},"주의사항",[1507,1547,1548],{},[46,1549,1550],{},"JSON 직렬화가 되지 않습니다. Map을 JSON으로 변환하려면 별도의 변환 작업이 필요합니다:",[72,1552,1554],{"className":74,"code":1553,"language":76,"meta":77,"style":77},"const map = new Map([\n  [\"name\", \"홍길동\"],\n  [\"age\", 25],\n]);\n\n// Map을 JSON으로 변환\nconst json = JSON.stringify(Array.from(map.entries()));\n\n// JSON을 Map으로 변환\nconst map2 = new Map(JSON.parse(json));\n",[17,1555,1556,1570,1590,1606,1610,1614,1619,1649,1653,1658],{"__ignoreMap":77},[81,1557,1558,1560,1562,1564,1566,1568],{"class":83,"line":84},[81,1559,95],{"class":94},[81,1561,134],{"class":98},[81,1563,102],{"class":94},[81,1565,106],{"class":105},[81,1567,110],{"class":109},[81,1569,143],{"class":98},[81,1571,1572,1574,1576,1578,1580,1582,1584,1586,1588],{"class":83,"line":91},[81,1573,149],{"class":98},[81,1575,153],{"class":152},[81,1577,280],{"class":156},[81,1579,153],{"class":152},[81,1581,162],{"class":98},[81,1583,153],{"class":152},[81,1585,289],{"class":156},[81,1587,153],{"class":152},[81,1589,172],{"class":98},[81,1591,1592,1594,1596,1598,1600,1602,1604],{"class":83,"line":116},[81,1593,149],{"class":98},[81,1595,153],{"class":152},[81,1597,307],{"class":156},[81,1599,153],{"class":152},[81,1601,162],{"class":98},[81,1603,314],{"class":203},[81,1605,172],{"class":98},[81,1607,1608],{"class":83,"line":123},[81,1609,236],{"class":98},[81,1611,1612],{"class":83,"line":129},[81,1613,120],{"emptyLinePlaceholder":119},[81,1615,1616],{"class":83,"line":146},[81,1617,1618],{"class":87},"// Map을 JSON으로 변환\n",[81,1620,1621,1623,1626,1628,1631,1634,1637,1640,1642,1644,1646],{"class":83,"line":175},[81,1622,95],{"class":94},[81,1624,1625],{"class":98}," json ",[81,1627,102],{"class":94},[81,1629,1630],{"class":203}," JSON",[81,1632,1633],{"class":98},".",[81,1635,1636],{"class":109},"stringify",[81,1638,1639],{"class":98},"(Array.",[81,1641,1447],{"class":109},[81,1643,416],{"class":98},[81,1645,1452],{"class":109},[81,1647,1648],{"class":98},"()));\n",[81,1650,1651],{"class":83,"line":198},[81,1652,120],{"emptyLinePlaceholder":119},[81,1654,1655],{"class":83,"line":218},[81,1656,1657],{"class":87},"// JSON을 Map으로 변환\n",[81,1659,1660,1662,1665,1667,1669,1671,1673,1676,1678,1681],{"class":83,"line":233},[81,1661,95],{"class":94},[81,1663,1664],{"class":98}," map2 ",[81,1666,102],{"class":94},[81,1668,106],{"class":105},[81,1670,110],{"class":109},[81,1672,275],{"class":98},[81,1674,1675],{"class":203},"JSON",[81,1677,1633],{"class":98},[81,1679,1680],{"class":109},"parse",[81,1682,1683],{"class":98},"(json));\n",[1507,1685,1686],{"start":91},[46,1687,1688],{},"객체와 달리 Map은 프로토타입 체인의 영향을 받지 않습니다. 이는 보안상의 이점이 있습니다.",[13,1690,1691,1693],{},[22,1692],{},[22,1694],{},[1696,1697,1698],"style",{},"html pre.shiki code .si6LB, html code.shiki .si6LB{--shiki-default:#6272A4}html pre.shiki code .sRedq, html code.shiki .sRedq{--shiki-default:#FF79C6}html pre.shiki code .sddWA, html code.shiki .sddWA{--shiki-default:#F8F8F2}html pre.shiki code .sDz32, html code.shiki .sDz32{--shiki-default:#FF79C6;--shiki-default-font-weight:bold}html pre.shiki code .s57r0, html code.shiki .s57r0{--shiki-default:#50FA7B}html pre.shiki code .syA0A, html code.shiki .syA0A{--shiki-default:#E9F284}html pre.shiki code .shai9, html code.shiki .shai9{--shiki-default:#F1FA8C}html pre.shiki code .sjKgF, html code.shiki .sjKgF{--shiki-default:#BD93F9}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html pre.shiki code .sDXMj, html code.shiki .sDXMj{--shiki-default:#FFB86C;--shiki-default-font-style:italic}",{"title":77,"searchDepth":91,"depth":91,"links":1700},[1701,1702,1703,1710,1715,1716],{"id":34,"depth":91,"text":35},{"id":66,"depth":91,"text":67},{"id":239,"depth":91,"text":240,"children":1704},[1705,1706,1707,1708,1709],{"id":244,"depth":116,"text":245},{"id":345,"depth":116,"text":346},{"id":459,"depth":116,"text":460},{"id":555,"depth":116,"text":556},{"id":665,"depth":116,"text":666},{"id":760,"depth":91,"text":761,"children":1711},[1712,1713,1714],{"id":764,"depth":116,"text":765},{"id":985,"depth":116,"text":986},{"id":1190,"depth":116,"text":1191},{"id":1504,"depth":91,"text":1505},{"id":1545,"depth":91,"text":1545},"2025-04-03T00:00:00.000Z","자바스크립트의 Map 자료형에 대해 알아보고, 실제 사용 예시를 통해 이해해봅시다.","md",null,{},"/2025-04-03-data-type-map",{"title":8,"description":1718},"2025-04-03-data-type-map",[76,1726,1727,1728],"map","자료구조","프로그래밍","OXdmB9AdKO",{"id":1731,"title":1732,"body":1733,"date":2928,"description":2929,"extension":1719,"image":1720,"meta":2930,"navigation":119,"path":2931,"seo":2932,"stem":2933,"tags":2934,"__hash__":2935},"content/2025-04-02-data-type-set.md","자바스크립트 Set 자료형: 중복 없는 데이터 관리의 시작",{"type":10,"value":1734,"toc":2910},[1735,1743,1749,1753,1759,1765,1769,1772,1912,1916,1920,1992,1996,2061,2065,2154,2158,2209,2213,2217,2300,2304,2495,2499,2749,2755,2759,2778,2784,2786,2791,2887,2892,2898,2901,2904,2907],[13,1736,15,1737,20,1740,1742],{},[17,1738,1739],{},"Set",[22,1741],{},"\nSet은 중복을 허용하지 않는 값들의 집합을 다룰 때 매우 유용한 자료구조입니다.",[13,1744,1745,1747],{},[22,1746],{},[22,1748],{},[32,1750,1752],{"id":1751},"set이란-무엇인가요","Set이란 무엇인가요?",[13,1754,1755,1756,1758],{},"Set은 ES6(ECMAScript 2015)에서 도입된 새로운 자료구조로, 중복되지 않는 값들의 집합을 다룰 수 있게 해줍니다.",[22,1757],{},"\n배열과 비슷해 보이지만, Set은 값의 순서를 보장하지 않으며 중복된 값을 자동으로 제거한다는 특징이 있습니다.",[13,1760,1761,1763],{},[22,1762],{},[22,1764],{},[32,1766,1768],{"id":1767},"set-생성하기","Set 생성하기",[13,1770,1771],{},"Set을 만드는 방법은 매우 간단합니다:",[72,1773,1775],{"className":74,"code":1774,"language":76,"meta":77,"style":77},"// 빈 Set 생성\nconst emptySet = new Set();\n\n// 배열로부터 Set 생성\nconst numberSet = new Set([1, 2, 3, 3, 4, 4, 5]); // [1, 2, 3, 4, 5]\nconst fruitSet = new Set([\"사과\", \"바나나\", \"사과\", \"오렌지\"]); // ['사과', '바나나', '오렌지']\n",[17,1776,1777,1782,1798,1802,1807,1859],{"__ignoreMap":77},[81,1778,1779],{"class":83,"line":84},[81,1780,1781],{"class":87},"// 빈 Set 생성\n",[81,1783,1784,1786,1789,1791,1793,1796],{"class":83,"line":91},[81,1785,95],{"class":94},[81,1787,1788],{"class":98}," emptySet ",[81,1790,102],{"class":94},[81,1792,106],{"class":105},[81,1794,1795],{"class":109}," Set",[81,1797,113],{"class":98},[81,1799,1800],{"class":83,"line":116},[81,1801,120],{"emptyLinePlaceholder":119},[81,1803,1804],{"class":83,"line":123},[81,1805,1806],{"class":87},"// 배열로부터 Set 생성\n",[81,1808,1809,1811,1814,1816,1818,1820,1823,1825,1827,1830,1832,1835,1837,1839,1841,1844,1846,1848,1850,1853,1856],{"class":83,"line":129},[81,1810,95],{"class":94},[81,1812,1813],{"class":98}," numberSet ",[81,1815,102],{"class":94},[81,1817,106],{"class":105},[81,1819,1795],{"class":109},[81,1821,1822],{"class":98},"([",[81,1824,204],{"class":203},[81,1826,162],{"class":98},[81,1828,1829],{"class":203},"2",[81,1831,162],{"class":98},[81,1833,1834],{"class":203},"3",[81,1836,162],{"class":98},[81,1838,1834],{"class":203},[81,1840,162],{"class":98},[81,1842,1843],{"class":203},"4",[81,1845,162],{"class":98},[81,1847,1843],{"class":203},[81,1849,162],{"class":98},[81,1851,1852],{"class":203},"5",[81,1854,1855],{"class":98},"]); ",[81,1857,1858],{"class":87},"// [1, 2, 3, 4, 5]\n",[81,1860,1861,1863,1866,1868,1870,1872,1874,1876,1879,1881,1883,1885,1888,1890,1892,1894,1896,1898,1900,1902,1905,1907,1909],{"class":83,"line":146},[81,1862,95],{"class":94},[81,1864,1865],{"class":98}," fruitSet ",[81,1867,102],{"class":94},[81,1869,106],{"class":105},[81,1871,1795],{"class":109},[81,1873,1822],{"class":98},[81,1875,153],{"class":152},[81,1877,1878],{"class":156},"사과",[81,1880,153],{"class":152},[81,1882,162],{"class":98},[81,1884,153],{"class":152},[81,1886,1887],{"class":156},"바나나",[81,1889,153],{"class":152},[81,1891,162],{"class":98},[81,1893,153],{"class":152},[81,1895,1878],{"class":156},[81,1897,153],{"class":152},[81,1899,162],{"class":98},[81,1901,153],{"class":152},[81,1903,1904],{"class":156},"오렌지",[81,1906,153],{"class":152},[81,1908,1855],{"class":98},[81,1910,1911],{"class":87},"// ['사과', '바나나', '오렌지']\n",[32,1913,1915],{"id":1914},"set의-주요-메서드들","Set의 주요 메서드들",[242,1917,1919],{"id":1918},"_1-값-추가하기-add","1. 값 추가하기 (add)",[72,1921,1923],{"className":74,"code":1922,"language":76,"meta":77,"style":77},"const set = new Set();\nset.add(1);\nset.add(\"안녕하세요\");\nset.add({ name: \"홍길동\" });\n",[17,1924,1925,1940,1954,1971],{"__ignoreMap":77},[81,1926,1927,1929,1932,1934,1936,1938],{"class":83,"line":84},[81,1928,95],{"class":94},[81,1930,1931],{"class":98}," set ",[81,1933,102],{"class":94},[81,1935,106],{"class":105},[81,1937,1795],{"class":109},[81,1939,113],{"class":98},[81,1941,1942,1945,1948,1950,1952],{"class":83,"line":91},[81,1943,1944],{"class":98},"set.",[81,1946,1947],{"class":109},"add",[81,1949,275],{"class":98},[81,1951,204],{"class":203},[81,1953,294],{"class":98},[81,1955,1956,1958,1960,1962,1964,1967,1969],{"class":83,"line":116},[81,1957,1944],{"class":98},[81,1959,1947],{"class":109},[81,1961,275],{"class":98},[81,1963,153],{"class":152},[81,1965,1966],{"class":156},"안녕하세요",[81,1968,153],{"class":152},[81,1970,294],{"class":98},[81,1972,1973,1975,1977,1980,1982,1985,1987,1989],{"class":83,"line":123},[81,1974,1944],{"class":98},[81,1976,1947],{"class":109},[81,1978,1979],{"class":98},"({ name",[81,1981,837],{"class":94},[81,1983,1984],{"class":152}," \"",[81,1986,289],{"class":156},[81,1988,153],{"class":152},[81,1990,1991],{"class":98}," });\n",[242,1993,1995],{"id":1994},"_2-값-삭제하기-delete","2. 값 삭제하기 (delete)",[72,1997,1999],{"className":74,"code":1998,"language":76,"meta":77,"style":77},"const set = new Set([1, 2, 3, 4, 5]);\nset.delete(3); // true 반환\nconsole.log(set); // Set(4) { 1, 2, 4, 5 }\n",[17,2000,2001,2035,2049],{"__ignoreMap":77},[81,2002,2003,2005,2007,2009,2011,2013,2015,2017,2019,2021,2023,2025,2027,2029,2031,2033],{"class":83,"line":84},[81,2004,95],{"class":94},[81,2006,1931],{"class":98},[81,2008,102],{"class":94},[81,2010,106],{"class":105},[81,2012,1795],{"class":109},[81,2014,1822],{"class":98},[81,2016,204],{"class":203},[81,2018,162],{"class":98},[81,2020,1829],{"class":203},[81,2022,162],{"class":98},[81,2024,1834],{"class":203},[81,2026,162],{"class":98},[81,2028,1843],{"class":203},[81,2030,162],{"class":98},[81,2032,1852],{"class":203},[81,2034,236],{"class":98},[81,2036,2037,2039,2041,2043,2045,2047],{"class":83,"line":91},[81,2038,1944],{"class":98},[81,2040,526],{"class":109},[81,2042,275],{"class":98},[81,2044,1834],{"class":203},[81,2046,537],{"class":98},[81,2048,540],{"class":87},[81,2050,2051,2053,2055,2058],{"class":83,"line":116},[81,2052,410],{"class":98},[81,2054,413],{"class":109},[81,2056,2057],{"class":98},"(set); ",[81,2059,2060],{"class":87},"// Set(4) { 1, 2, 4, 5 }\n",[242,2062,2064],{"id":2063},"_3-값-확인하기-has","3. 값 확인하기 (has)",[72,2066,2068],{"className":74,"code":2067,"language":76,"meta":77,"style":77},"const set = new Set([\"사과\", \"바나나\", \"오렌지\"]);\nconsole.log(set.has(\"사과\")); // true\nconsole.log(set.has(\"포도\")); // false\n",[17,2069,2070,2108,2131],{"__ignoreMap":77},[81,2071,2072,2074,2076,2078,2080,2082,2084,2086,2088,2090,2092,2094,2096,2098,2100,2102,2104,2106],{"class":83,"line":84},[81,2073,95],{"class":94},[81,2075,1931],{"class":98},[81,2077,102],{"class":94},[81,2079,106],{"class":105},[81,2081,1795],{"class":109},[81,2083,1822],{"class":98},[81,2085,153],{"class":152},[81,2087,1878],{"class":156},[81,2089,153],{"class":152},[81,2091,162],{"class":98},[81,2093,153],{"class":152},[81,2095,1887],{"class":156},[81,2097,153],{"class":152},[81,2099,162],{"class":98},[81,2101,153],{"class":152},[81,2103,1904],{"class":156},[81,2105,153],{"class":152},[81,2107,236],{"class":98},[81,2109,2110,2112,2114,2117,2119,2121,2123,2125,2127,2129],{"class":83,"line":91},[81,2111,410],{"class":98},[81,2113,413],{"class":109},[81,2115,2116],{"class":98},"(set.",[81,2118,626],{"class":109},[81,2120,275],{"class":98},[81,2122,153],{"class":152},[81,2124,1878],{"class":156},[81,2126,153],{"class":152},[81,2128,430],{"class":98},[81,2130,639],{"class":87},[81,2132,2133,2135,2137,2139,2141,2143,2145,2148,2150,2152],{"class":83,"line":116},[81,2134,410],{"class":98},[81,2136,413],{"class":109},[81,2138,2116],{"class":98},[81,2140,626],{"class":109},[81,2142,275],{"class":98},[81,2144,153],{"class":152},[81,2146,2147],{"class":156},"포도",[81,2149,153],{"class":152},[81,2151,430],{"class":98},[81,2153,662],{"class":87},[242,2155,2157],{"id":2156},"_4-크기-확인하기-size","4. 크기 확인하기 (size)",[72,2159,2161],{"className":74,"code":2160,"language":76,"meta":77,"style":77},"const set = new Set([1, 2, 3, 4, 5]);\nconsole.log(set.size); // 5\n",[17,2162,2163,2197],{"__ignoreMap":77},[81,2164,2165,2167,2169,2171,2173,2175,2177,2179,2181,2183,2185,2187,2189,2191,2193,2195],{"class":83,"line":84},[81,2166,95],{"class":94},[81,2168,1931],{"class":98},[81,2170,102],{"class":94},[81,2172,106],{"class":105},[81,2174,1795],{"class":109},[81,2176,1822],{"class":98},[81,2178,204],{"class":203},[81,2180,162],{"class":98},[81,2182,1829],{"class":203},[81,2184,162],{"class":98},[81,2186,1834],{"class":203},[81,2188,162],{"class":98},[81,2190,1843],{"class":203},[81,2192,162],{"class":98},[81,2194,1852],{"class":203},[81,2196,236],{"class":98},[81,2198,2199,2201,2203,2206],{"class":83,"line":91},[81,2200,410],{"class":98},[81,2202,413],{"class":109},[81,2204,2205],{"class":98},"(set.size); ",[81,2207,2208],{"class":87},"// 5\n",[32,2210,2212],{"id":2211},"set의-실제-활용-예시","Set의 실제 활용 예시",[242,2214,2216],{"id":2215},"_1-중복-제거하기","1. 중복 제거하기",[72,2218,2220],{"className":74,"code":2219,"language":76,"meta":77,"style":77},"const numbers = [1, 2, 2, 3, 3, 4, 5, 5];\nconst uniqueNumbers = [...new Set(numbers)];\nconsole.log(uniqueNumbers); // [1, 2, 3, 4, 5]\n",[17,2221,2222,2267,2289],{"__ignoreMap":77},[81,2223,2224,2226,2229,2231,2234,2236,2238,2240,2242,2244,2246,2248,2250,2252,2254,2256,2258,2260,2262,2264],{"class":83,"line":84},[81,2225,95],{"class":94},[81,2227,2228],{"class":98}," numbers ",[81,2230,102],{"class":94},[81,2232,2233],{"class":98}," [",[81,2235,204],{"class":203},[81,2237,162],{"class":98},[81,2239,1829],{"class":203},[81,2241,162],{"class":98},[81,2243,1829],{"class":203},[81,2245,162],{"class":98},[81,2247,1834],{"class":203},[81,2249,162],{"class":98},[81,2251,1834],{"class":203},[81,2253,162],{"class":98},[81,2255,1843],{"class":203},[81,2257,162],{"class":98},[81,2259,1852],{"class":203},[81,2261,162],{"class":98},[81,2263,1852],{"class":203},[81,2265,2266],{"class":98},"];\n",[81,2268,2269,2271,2274,2276,2278,2281,2284,2286],{"class":83,"line":91},[81,2270,95],{"class":94},[81,2272,2273],{"class":98}," uniqueNumbers ",[81,2275,102],{"class":94},[81,2277,2233],{"class":98},[81,2279,2280],{"class":94},"...",[81,2282,2283],{"class":105},"new",[81,2285,1795],{"class":109},[81,2287,2288],{"class":98},"(numbers)];\n",[81,2290,2291,2293,2295,2298],{"class":83,"line":116},[81,2292,410],{"class":98},[81,2294,413],{"class":109},[81,2296,2297],{"class":98},"(uniqueNumbers); ",[81,2299,1858],{"class":87},[242,2301,2303],{"id":2302},"_2-유니크한-사용자-id-관리","2. 유니크한 사용자 ID 관리",[72,2305,2307],{"className":74,"code":2306,"language":76,"meta":77,"style":77},"const activeUsers = new Set();\n\nfunction userLogin(userId) {\n  activeUsers.add(userId);\n  console.log(`${userId}님이 로그인했습니다.`);\n}\n\nfunction userLogout(userId) {\n  activeUsers.delete(userId);\n  console.log(`${userId}님이 로그아웃했습니다.`);\n}\n\nuserLogin(\"user1\"); // user1님이 로그인했습니다.\nuserLogin(\"user2\"); // user2님이 로그인했습니다.\nuserLogin(\"user1\"); // user1님이 로그인했습니다. (중복 추가는 무시됨)\nconsole.log(activeUsers.size); // 2\n",[17,2308,2309,2324,2328,2341,2350,2371,2375,2379,2392,2400,2421,2425,2429,2448,2466,2483],{"__ignoreMap":77},[81,2310,2311,2313,2316,2318,2320,2322],{"class":83,"line":84},[81,2312,95],{"class":94},[81,2314,2315],{"class":98}," activeUsers ",[81,2317,102],{"class":94},[81,2319,106],{"class":105},[81,2321,1795],{"class":109},[81,2323,113],{"class":98},[81,2325,2326],{"class":83,"line":91},[81,2327,120],{"emptyLinePlaceholder":119},[81,2329,2330,2332,2335,2337,2339],{"class":83,"line":116},[81,2331,794],{"class":94},[81,2333,2334],{"class":109}," userLogin",[81,2336,275],{"class":98},[81,2338,803],{"class":802},[81,2340,811],{"class":98},[81,2342,2343,2346,2348],{"class":83,"line":123},[81,2344,2345],{"class":98},"  activeUsers.",[81,2347,1947],{"class":109},[81,2349,904],{"class":98},[81,2351,2352,2354,2356,2358,2360,2362,2364,2366,2369],{"class":83,"line":129},[81,2353,1303],{"class":98},[81,2355,413],{"class":109},[81,2357,275],{"class":98},[81,2359,1310],{"class":156},[81,2361,1313],{"class":94},[81,2363,803],{"class":98},[81,2365,1318],{"class":94},[81,2367,2368],{"class":156},"님이 로그인했습니다.`",[81,2370,294],{"class":98},[81,2372,2373],{"class":83,"line":146},[81,2374,868],{"class":98},[81,2376,2377],{"class":83,"line":175},[81,2378,120],{"emptyLinePlaceholder":119},[81,2380,2381,2383,2386,2388,2390],{"class":83,"line":198},[81,2382,794],{"class":94},[81,2384,2385],{"class":109}," userLogout",[81,2387,275],{"class":98},[81,2389,803],{"class":802},[81,2391,811],{"class":98},[81,2393,2394,2396,2398],{"class":83,"line":218},[81,2395,2345],{"class":98},[81,2397,526],{"class":109},[81,2399,904],{"class":98},[81,2401,2402,2404,2406,2408,2410,2412,2414,2416,2419],{"class":83,"line":233},[81,2403,1303],{"class":98},[81,2405,413],{"class":109},[81,2407,275],{"class":98},[81,2409,1310],{"class":156},[81,2411,1313],{"class":94},[81,2413,803],{"class":98},[81,2415,1318],{"class":94},[81,2417,2418],{"class":156},"님이 로그아웃했습니다.`",[81,2420,294],{"class":98},[81,2422,2423],{"class":83,"line":4},[81,2424,868],{"class":98},[81,2426,2427],{"class":83,"line":888},[81,2428,120],{"emptyLinePlaceholder":119},[81,2430,2431,2434,2436,2438,2441,2443,2445],{"class":83,"line":907},[81,2432,2433],{"class":109},"userLogin",[81,2435,275],{"class":98},[81,2437,153],{"class":152},[81,2439,2440],{"class":156},"user1",[81,2442,153],{"class":152},[81,2444,537],{"class":98},[81,2446,2447],{"class":87},"// user1님이 로그인했습니다.\n",[81,2449,2450,2452,2454,2456,2459,2461,2463],{"class":83,"line":916},[81,2451,2433],{"class":109},[81,2453,275],{"class":98},[81,2455,153],{"class":152},[81,2457,2458],{"class":156},"user2",[81,2460,153],{"class":152},[81,2462,537],{"class":98},[81,2464,2465],{"class":87},"// user2님이 로그인했습니다.\n",[81,2467,2468,2470,2472,2474,2476,2478,2480],{"class":83,"line":930},[81,2469,2433],{"class":109},[81,2471,275],{"class":98},[81,2473,153],{"class":152},[81,2475,2440],{"class":156},[81,2477,153],{"class":152},[81,2479,537],{"class":98},[81,2481,2482],{"class":87},"// user1님이 로그인했습니다. (중복 추가는 무시됨)\n",[81,2484,2485,2487,2489,2492],{"class":83,"line":941},[81,2486,410],{"class":98},[81,2488,413],{"class":109},[81,2490,2491],{"class":98},"(activeUsers.size); ",[81,2493,2494],{"class":87},"// 2\n",[242,2496,2498],{"id":2497},"_3-교집합-합집합-차집합-구현","3. 교집합, 합집합, 차집합 구현",[72,2500,2502],{"className":74,"code":2501,"language":76,"meta":77,"style":77},"const setA = new Set([1, 2, 3, 4]);\nconst setB = new Set([3, 4, 5, 6]);\n\n// 합집합\nconst union = new Set([...setA, ...setB]);\nconsole.log([...union]); // [1, 2, 3, 4, 5, 6]\n\n// 교집합\nconst intersection = new Set([...setA].filter((x) => setB.has(x)));\nconsole.log([...intersection]); // [3, 4]\n\n// 차집합\nconst difference = new Set([...setA].filter((x) => !setB.has(x)));\nconsole.log([...difference]); // [1, 2]\n",[17,2503,2504,2535,2567,2571,2576,2601,2617,2621,2626,2669,2685,2689,2694,2733],{"__ignoreMap":77},[81,2505,2506,2508,2511,2513,2515,2517,2519,2521,2523,2525,2527,2529,2531,2533],{"class":83,"line":84},[81,2507,95],{"class":94},[81,2509,2510],{"class":98}," setA ",[81,2512,102],{"class":94},[81,2514,106],{"class":105},[81,2516,1795],{"class":109},[81,2518,1822],{"class":98},[81,2520,204],{"class":203},[81,2522,162],{"class":98},[81,2524,1829],{"class":203},[81,2526,162],{"class":98},[81,2528,1834],{"class":203},[81,2530,162],{"class":98},[81,2532,1843],{"class":203},[81,2534,236],{"class":98},[81,2536,2537,2539,2542,2544,2546,2548,2550,2552,2554,2556,2558,2560,2562,2565],{"class":83,"line":91},[81,2538,95],{"class":94},[81,2540,2541],{"class":98}," setB ",[81,2543,102],{"class":94},[81,2545,106],{"class":105},[81,2547,1795],{"class":109},[81,2549,1822],{"class":98},[81,2551,1834],{"class":203},[81,2553,162],{"class":98},[81,2555,1843],{"class":203},[81,2557,162],{"class":98},[81,2559,1852],{"class":203},[81,2561,162],{"class":98},[81,2563,2564],{"class":203},"6",[81,2566,236],{"class":98},[81,2568,2569],{"class":83,"line":116},[81,2570,120],{"emptyLinePlaceholder":119},[81,2572,2573],{"class":83,"line":123},[81,2574,2575],{"class":87},"// 합집합\n",[81,2577,2578,2580,2583,2585,2587,2589,2591,2593,2596,2598],{"class":83,"line":129},[81,2579,95],{"class":94},[81,2581,2582],{"class":98}," union ",[81,2584,102],{"class":94},[81,2586,106],{"class":105},[81,2588,1795],{"class":109},[81,2590,1822],{"class":98},[81,2592,2280],{"class":94},[81,2594,2595],{"class":98},"setA, ",[81,2597,2280],{"class":94},[81,2599,2600],{"class":98},"setB]);\n",[81,2602,2603,2605,2607,2609,2611,2614],{"class":83,"line":146},[81,2604,410],{"class":98},[81,2606,413],{"class":109},[81,2608,1822],{"class":98},[81,2610,2280],{"class":94},[81,2612,2613],{"class":98},"union]); ",[81,2615,2616],{"class":87},"// [1, 2, 3, 4, 5, 6]\n",[81,2618,2619],{"class":83,"line":175},[81,2620,120],{"emptyLinePlaceholder":119},[81,2622,2623],{"class":83,"line":198},[81,2624,2625],{"class":87},"// 교집합\n",[81,2627,2628,2630,2633,2635,2637,2639,2641,2643,2646,2649,2652,2655,2658,2661,2664,2666],{"class":83,"line":218},[81,2629,95],{"class":94},[81,2631,2632],{"class":98}," intersection ",[81,2634,102],{"class":94},[81,2636,106],{"class":105},[81,2638,1795],{"class":109},[81,2640,1822],{"class":98},[81,2642,2280],{"class":94},[81,2644,2645],{"class":98},"setA].",[81,2647,2648],{"class":109},"filter",[81,2650,2651],{"class":98},"((",[81,2653,2654],{"class":802},"x",[81,2656,2657],{"class":98},") ",[81,2659,2660],{"class":94},"=>",[81,2662,2663],{"class":98}," setB.",[81,2665,626],{"class":109},[81,2667,2668],{"class":98},"(x)));\n",[81,2670,2671,2673,2675,2677,2679,2682],{"class":83,"line":233},[81,2672,410],{"class":98},[81,2674,413],{"class":109},[81,2676,1822],{"class":98},[81,2678,2280],{"class":94},[81,2680,2681],{"class":98},"intersection]); ",[81,2683,2684],{"class":87},"// [3, 4]\n",[81,2686,2687],{"class":83,"line":4},[81,2688,120],{"emptyLinePlaceholder":119},[81,2690,2691],{"class":83,"line":888},[81,2692,2693],{"class":87},"// 차집합\n",[81,2695,2696,2698,2701,2703,2705,2707,2709,2711,2713,2715,2717,2719,2721,2723,2726,2729,2731],{"class":83,"line":907},[81,2697,95],{"class":94},[81,2699,2700],{"class":98}," difference ",[81,2702,102],{"class":94},[81,2704,106],{"class":105},[81,2706,1795],{"class":109},[81,2708,1822],{"class":98},[81,2710,2280],{"class":94},[81,2712,2645],{"class":98},[81,2714,2648],{"class":109},[81,2716,2651],{"class":98},[81,2718,2654],{"class":802},[81,2720,2657],{"class":98},[81,2722,2660],{"class":94},[81,2724,2725],{"class":94}," !",[81,2727,2728],{"class":98},"setB.",[81,2730,626],{"class":109},[81,2732,2668],{"class":98},[81,2734,2735,2737,2739,2741,2743,2746],{"class":83,"line":916},[81,2736,410],{"class":98},[81,2738,413],{"class":109},[81,2740,1822],{"class":98},[81,2742,2280],{"class":94},[81,2744,2745],{"class":98},"difference]); ",[81,2747,2748],{"class":87},"// [1, 2]\n",[13,2750,2751,2753],{},[22,2752],{},[22,2754],{},[32,2756,2758],{"id":2757},"set의-장점","Set의 장점",[1507,2760,2761,2767,2772],{},[46,2762,2763,2766],{},[1512,2764,2765],{},"중복 제거",": 자동으로 중복된 값을 제거합니다.",[46,2768,2769,2771],{},[1512,2770,1526],{},": 값의 존재 여부를 확인하는 작업이 배열보다 빠릅니다.",[46,2773,2774,2777],{},[1512,2775,2776],{},"간단한 API",": 직관적이고 사용하기 쉬운 메서드들을 제공합니다.",[13,2779,2780,2782],{},[22,2781],{},[22,2783],{},[32,2785,1545],{"id":1545},[1507,2787,2788],{},[46,2789,2790],{},"Set은 객체 참조를 저장할 때도 중복을 체크합니다:",[72,2792,2794],{"className":74,"code":2793,"language":76,"meta":77,"style":77},"const set = new Set();\nconst obj1 = { name: \"홍길동\" };\nconst obj2 = { name: \"홍길동\" };\n\nset.add(obj1);\nset.add(obj2);\nconsole.log(set.size); // 2 (다른 객체로 인식)\n",[17,2795,2796,2810,2833,2854,2858,2867,2876],{"__ignoreMap":77},[81,2797,2798,2800,2802,2804,2806,2808],{"class":83,"line":84},[81,2799,95],{"class":94},[81,2801,1931],{"class":98},[81,2803,102],{"class":94},[81,2805,106],{"class":105},[81,2807,1795],{"class":109},[81,2809,113],{"class":98},[81,2811,2812,2814,2817,2819,2822,2824,2826,2828,2830],{"class":83,"line":91},[81,2813,95],{"class":94},[81,2815,2816],{"class":98}," obj1 ",[81,2818,102],{"class":94},[81,2820,2821],{"class":98}," { name",[81,2823,837],{"class":94},[81,2825,1984],{"class":152},[81,2827,289],{"class":156},[81,2829,153],{"class":152},[81,2831,2832],{"class":98}," };\n",[81,2834,2835,2837,2840,2842,2844,2846,2848,2850,2852],{"class":83,"line":116},[81,2836,95],{"class":94},[81,2838,2839],{"class":98}," obj2 ",[81,2841,102],{"class":94},[81,2843,2821],{"class":98},[81,2845,837],{"class":94},[81,2847,1984],{"class":152},[81,2849,289],{"class":156},[81,2851,153],{"class":152},[81,2853,2832],{"class":98},[81,2855,2856],{"class":83,"line":123},[81,2857,120],{"emptyLinePlaceholder":119},[81,2859,2860,2862,2864],{"class":83,"line":129},[81,2861,1944],{"class":98},[81,2863,1947],{"class":109},[81,2865,2866],{"class":98},"(obj1);\n",[81,2868,2869,2871,2873],{"class":83,"line":146},[81,2870,1944],{"class":98},[81,2872,1947],{"class":109},[81,2874,2875],{"class":98},"(obj2);\n",[81,2877,2878,2880,2882,2884],{"class":83,"line":175},[81,2879,410],{"class":98},[81,2881,413],{"class":109},[81,2883,2205],{"class":98},[81,2885,2886],{"class":87},"// 2 (다른 객체로 인식)\n",[1507,2888,2889],{"start":91},[46,2890,2891],{},"Set은 순서를 보장하지 않습니다. 순서가 중요한 경우에는 배열을 사용하는 것이 좋습니다.",[13,2893,2894,2896],{},[22,2895],{},[22,2897],{},[32,2899,2900],{"id":2900},"마치며",[13,2902,2903],{},"Set은 중복 없는 데이터를 다룰 때 매우 유용한 자료구조입니다. 특히 사용자 ID 관리, 태그 관리, 중복 제거 등 다양한 상황에서 활용할 수 있습니다. 이제 여러분의 코드에서도 Set을 활용해보세요! 😊",[13,2905,2906],{},"더 자세한 내용이나 궁금한 점이 있다면 댓글로 남겨주세요. 함께 공부해요! 💪",[1696,2908,2909],{},"html pre.shiki code .si6LB, html code.shiki .si6LB{--shiki-default:#6272A4}html pre.shiki code .sRedq, html code.shiki .sRedq{--shiki-default:#FF79C6}html pre.shiki code .sddWA, html code.shiki .sddWA{--shiki-default:#F8F8F2}html pre.shiki code .sDz32, html code.shiki .sDz32{--shiki-default:#FF79C6;--shiki-default-font-weight:bold}html pre.shiki code .s57r0, html code.shiki .s57r0{--shiki-default:#50FA7B}html pre.shiki code .sjKgF, html code.shiki .sjKgF{--shiki-default:#BD93F9}html pre.shiki code .syA0A, html code.shiki .syA0A{--shiki-default:#E9F284}html pre.shiki code .shai9, html code.shiki .shai9{--shiki-default:#F1FA8C}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html pre.shiki code .sDXMj, html code.shiki .sDXMj{--shiki-default:#FFB86C;--shiki-default-font-style:italic}",{"title":77,"searchDepth":91,"depth":91,"links":2911},[2912,2913,2914,2920,2925,2926,2927],{"id":1751,"depth":91,"text":1752},{"id":1767,"depth":91,"text":1768},{"id":1914,"depth":91,"text":1915,"children":2915},[2916,2917,2918,2919],{"id":1918,"depth":116,"text":1919},{"id":1994,"depth":116,"text":1995},{"id":2063,"depth":116,"text":2064},{"id":2156,"depth":116,"text":2157},{"id":2211,"depth":91,"text":2212,"children":2921},[2922,2923,2924],{"id":2215,"depth":116,"text":2216},{"id":2302,"depth":116,"text":2303},{"id":2497,"depth":116,"text":2498},{"id":2757,"depth":91,"text":2758},{"id":1545,"depth":91,"text":1545},{"id":2900,"depth":91,"text":2900},"2025-04-02T00:00:00.000Z","자바스크립트의 Set 자료형에 대해 알아보고, 실제 사용 예시를 통해 이해해봅시다.",{},"/2025-04-02-data-type-set",{"title":1732,"description":2929},"2025-04-02-data-type-set",[76,272,1727,1728],"13BBAXaaBg",{"id":2937,"title":2938,"body":2939,"date":3565,"description":3566,"extension":1719,"image":1720,"meta":3567,"navigation":119,"path":3568,"seo":3569,"stem":3570,"tags":3571,"__hash__":3575},"content/2025-04-01-async-await.md","JavaScript의 async/await 이해하기",{"type":10,"value":2940,"toc":3556},[2941,2944,2948,2951,2955,2958,2994,2998,3001,3072,3076,3079,3187,3191,3194,3385,3389,3392,3544,3547,3550,3553],[13,2942,2943],{},"JavaScript에서 비동기 프로그래밍을 처리하는 방법은 시간이 지날수록 더욱 발전해왔습니다. 콜백 함수에서 Promise, 그리고 현재 널리 사용되는 async/await까지. 이번 포스트에서는 async/await의 개념과 사용법에 대해 자세히 살펴보겠습니다.",[32,2945,2947],{"id":2946},"asyncawait란","async/await란?",[13,2949,2950],{},"async/await는 Promise를 기반으로 한 문법적 설탕(syntactic sugar)입니다. 비동기 코드를 동기 코드처럼 보이게 만들어주어 코드의 가독성과 유지보수성을 크게 향상시킵니다.",[32,2952,2954],{"id":2953},"async-함수","async 함수",[13,2956,2957],{},"async 키워드는 함수 선언 앞에 붙여서 사용합니다. 이 함수는 항상 Promise를 반환합니다.",[72,2959,2961],{"className":74,"code":2960,"language":76,"meta":77,"style":77},"async function fetchData() {\n  return \"데이터\";\n}\n",[17,2962,2963,2977,2990],{"__ignoreMap":77},[81,2964,2965,2968,2971,2974],{"class":83,"line":84},[81,2966,2967],{"class":94},"async",[81,2969,2970],{"class":94}," function",[81,2972,2973],{"class":109}," fetchData",[81,2975,2976],{"class":98},"() {\n",[81,2978,2979,2981,2983,2986,2988],{"class":83,"line":91},[81,2980,1118],{"class":94},[81,2982,1984],{"class":152},[81,2984,2985],{"class":156},"데이터",[81,2987,153],{"class":152},[81,2989,1124],{"class":98},[81,2991,2992],{"class":83,"line":116},[81,2993,868],{"class":98},[32,2995,2997],{"id":2996},"await-키워드","await 키워드",[13,2999,3000],{},"await는 async 함수 내부에서만 사용할 수 있으며, Promise가 resolve될 때까지 기다립니다.",[72,3002,3004],{"className":74,"code":3003,"language":76,"meta":77,"style":77},"async function getUserData() {\n  const response = await fetch(\"https://api.example.com/user\");\n  const data = await response.json();\n  return data;\n}\n",[17,3005,3006,3017,3043,3062,3068],{"__ignoreMap":77},[81,3007,3008,3010,3012,3015],{"class":83,"line":84},[81,3009,2967],{"class":94},[81,3011,2970],{"class":94},[81,3013,3014],{"class":109}," getUserData",[81,3016,2976],{"class":98},[81,3018,3019,3021,3024,3026,3029,3032,3034,3036,3039,3041],{"class":83,"line":91},[81,3020,891],{"class":94},[81,3022,3023],{"class":98}," response ",[81,3025,102],{"class":94},[81,3027,3028],{"class":94}," await",[81,3030,3031],{"class":109}," fetch",[81,3033,275],{"class":98},[81,3035,153],{"class":152},[81,3037,3038],{"class":156},"https://api.example.com/user",[81,3040,153],{"class":152},[81,3042,294],{"class":98},[81,3044,3045,3047,3050,3052,3054,3057,3060],{"class":83,"line":116},[81,3046,891],{"class":94},[81,3048,3049],{"class":98}," data ",[81,3051,102],{"class":94},[81,3053,3028],{"class":94},[81,3055,3056],{"class":98}," response.",[81,3058,3059],{"class":109},"json",[81,3061,113],{"class":98},[81,3063,3064,3066],{"class":83,"line":123},[81,3065,1118],{"class":94},[81,3067,1095],{"class":98},[81,3069,3070],{"class":83,"line":129},[81,3071,868],{"class":98},[32,3073,3075],{"id":3074},"에러-처리","에러 처리",[13,3077,3078],{},"try/catch 구문을 사용하여 async/await의 에러를 처리할 수 있습니다.",[72,3080,3082],{"className":74,"code":3081,"language":76,"meta":77,"style":77},"async function fetchUserData() {\n  try {\n    const response = await fetch(\"https://api.example.com/user\");\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(\"데이터를 가져오는데 실패했습니다:\", error);\n  }\n}\n",[17,3083,3084,3095,3103,3125,3141,3148,3159,3179,3183],{"__ignoreMap":77},[81,3085,3086,3088,3090,3093],{"class":83,"line":84},[81,3087,2967],{"class":94},[81,3089,2970],{"class":94},[81,3091,3092],{"class":109}," fetchUserData",[81,3094,2976],{"class":98},[81,3096,3097,3100],{"class":83,"line":91},[81,3098,3099],{"class":94},"  try",[81,3101,3102],{"class":98}," {\n",[81,3104,3105,3107,3109,3111,3113,3115,3117,3119,3121,3123],{"class":83,"line":116},[81,3106,1041],{"class":94},[81,3108,3023],{"class":98},[81,3110,102],{"class":94},[81,3112,3028],{"class":94},[81,3114,3031],{"class":109},[81,3116,275],{"class":98},[81,3118,153],{"class":152},[81,3120,3038],{"class":156},[81,3122,153],{"class":152},[81,3124,294],{"class":98},[81,3126,3127,3129,3131,3133,3135,3137,3139],{"class":83,"line":123},[81,3128,1041],{"class":94},[81,3130,3049],{"class":98},[81,3132,102],{"class":94},[81,3134,3028],{"class":94},[81,3136,3056],{"class":98},[81,3138,3059],{"class":109},[81,3140,113],{"class":98},[81,3142,3143,3146],{"class":83,"line":129},[81,3144,3145],{"class":94},"    return",[81,3147,1095],{"class":98},[81,3149,3150,3153,3156],{"class":83,"line":146},[81,3151,3152],{"class":98},"  } ",[81,3154,3155],{"class":94},"catch",[81,3157,3158],{"class":98}," (error) {\n",[81,3160,3161,3164,3167,3169,3171,3174,3176],{"class":83,"line":175},[81,3162,3163],{"class":98},"    console.",[81,3165,3166],{"class":109},"error",[81,3168,275],{"class":98},[81,3170,153],{"class":152},[81,3172,3173],{"class":156},"데이터를 가져오는데 실패했습니다:",[81,3175,153],{"class":152},[81,3177,3178],{"class":98},", error);\n",[81,3180,3181],{"class":83,"line":198},[81,3182,944],{"class":98},[81,3184,3185],{"class":83,"line":218},[81,3186,868],{"class":98},[32,3188,3190],{"id":3189},"promise와의-비교","Promise와의 비교",[13,3192,3193],{},"async/await를 사용하면 Promise 체인보다 더 읽기 쉽고 이해하기 쉬운 코드를 작성할 수 있습니다.",[72,3195,3197],{"className":74,"code":3196,"language":76,"meta":77,"style":77},"// Promise 체인\nfetch(\"https://api.example.com/user\")\n  .then((response) => response.json())\n  .then((data) => console.log(data))\n  .catch((error) => console.error(error));\n\n// async/await\nasync function getUser() {\n  try {\n    const response = await fetch(\"https://api.example.com/user\");\n    const data = await response.json();\n    console.log(data);\n  } catch (error) {\n    console.error(error);\n  }\n}\n",[17,3198,3199,3204,3220,3244,3266,3287,3291,3296,3307,3313,3335,3351,3360,3368,3377,3381],{"__ignoreMap":77},[81,3200,3201],{"class":83,"line":84},[81,3202,3203],{"class":87},"// Promise 체인\n",[81,3205,3206,3209,3211,3213,3215,3217],{"class":83,"line":91},[81,3207,3208],{"class":109},"fetch",[81,3210,275],{"class":98},[81,3212,153],{"class":152},[81,3214,3038],{"class":156},[81,3216,153],{"class":152},[81,3218,3219],{"class":98},")\n",[81,3221,3222,3225,3228,3230,3233,3235,3237,3239,3241],{"class":83,"line":116},[81,3223,3224],{"class":98},"  .",[81,3226,3227],{"class":109},"then",[81,3229,2651],{"class":98},[81,3231,3232],{"class":802},"response",[81,3234,2657],{"class":98},[81,3236,2660],{"class":94},[81,3238,3056],{"class":98},[81,3240,3059],{"class":109},[81,3242,3243],{"class":98},"())\n",[81,3245,3246,3248,3250,3252,3254,3256,3258,3261,3263],{"class":83,"line":123},[81,3247,3224],{"class":98},[81,3249,3227],{"class":109},[81,3251,2651],{"class":98},[81,3253,1148],{"class":802},[81,3255,2657],{"class":98},[81,3257,2660],{"class":94},[81,3259,3260],{"class":98}," console.",[81,3262,413],{"class":109},[81,3264,3265],{"class":98},"(data))\n",[81,3267,3268,3270,3272,3274,3276,3278,3280,3282,3284],{"class":83,"line":129},[81,3269,3224],{"class":98},[81,3271,3155],{"class":109},[81,3273,2651],{"class":98},[81,3275,3166],{"class":802},[81,3277,2657],{"class":98},[81,3279,2660],{"class":94},[81,3281,3260],{"class":98},[81,3283,3166],{"class":109},[81,3285,3286],{"class":98},"(error));\n",[81,3288,3289],{"class":83,"line":146},[81,3290,120],{"emptyLinePlaceholder":119},[81,3292,3293],{"class":83,"line":175},[81,3294,3295],{"class":87},"// async/await\n",[81,3297,3298,3300,3302,3305],{"class":83,"line":198},[81,3299,2967],{"class":94},[81,3301,2970],{"class":94},[81,3303,3304],{"class":109}," getUser",[81,3306,2976],{"class":98},[81,3308,3309,3311],{"class":83,"line":218},[81,3310,3099],{"class":94},[81,3312,3102],{"class":98},[81,3314,3315,3317,3319,3321,3323,3325,3327,3329,3331,3333],{"class":83,"line":233},[81,3316,1041],{"class":94},[81,3318,3023],{"class":98},[81,3320,102],{"class":94},[81,3322,3028],{"class":94},[81,3324,3031],{"class":109},[81,3326,275],{"class":98},[81,3328,153],{"class":152},[81,3330,3038],{"class":156},[81,3332,153],{"class":152},[81,3334,294],{"class":98},[81,3336,3337,3339,3341,3343,3345,3347,3349],{"class":83,"line":4},[81,3338,1041],{"class":94},[81,3340,3049],{"class":98},[81,3342,102],{"class":94},[81,3344,3028],{"class":94},[81,3346,3056],{"class":98},[81,3348,3059],{"class":109},[81,3350,113],{"class":98},[81,3352,3353,3355,3357],{"class":83,"line":888},[81,3354,3163],{"class":98},[81,3356,413],{"class":109},[81,3358,3359],{"class":98},"(data);\n",[81,3361,3362,3364,3366],{"class":83,"line":907},[81,3363,3152],{"class":98},[81,3365,3155],{"class":94},[81,3367,3158],{"class":98},[81,3369,3370,3372,3374],{"class":83,"line":916},[81,3371,3163],{"class":98},[81,3373,3166],{"class":109},[81,3375,3376],{"class":98},"(error);\n",[81,3378,3379],{"class":83,"line":930},[81,3380,944],{"class":98},[81,3382,3383],{"class":83,"line":941},[81,3384,868],{"class":98},[32,3386,3388],{"id":3387},"병렬-실행","병렬 실행",[13,3390,3391],{},"여러 비동기 작업을 병렬로 실행하려면 Promise.all()을 사용할 수 있습니다.",[72,3393,3395],{"className":74,"code":3394,"language":76,"meta":77,"style":77},"async function fetchMultipleData() {\n  const [users, posts, comments] = await Promise.all([\n    fetch(\"/api/users\").then((res) => res.json()),\n    fetch(\"/api/posts\").then((res) => res.json()),\n    fetch(\"/api/comments\").then((res) => res.json()),\n  ]);\n  return { users, posts, comments };\n}\n",[17,3396,3397,3408,3430,3466,3497,3528,3533,3540],{"__ignoreMap":77},[81,3398,3399,3401,3403,3406],{"class":83,"line":84},[81,3400,2967],{"class":94},[81,3402,2970],{"class":94},[81,3404,3405],{"class":109}," fetchMultipleData",[81,3407,2976],{"class":98},[81,3409,3410,3412,3415,3417,3419,3423,3425,3428],{"class":83,"line":91},[81,3411,891],{"class":94},[81,3413,3414],{"class":98}," [users, posts, comments] ",[81,3416,102],{"class":94},[81,3418,3028],{"class":94},[81,3420,3422],{"class":3421},"s40py"," Promise",[81,3424,1633],{"class":98},[81,3426,3427],{"class":109},"all",[81,3429,143],{"class":98},[81,3431,3432,3435,3437,3439,3442,3444,3447,3449,3451,3454,3456,3458,3461,3463],{"class":83,"line":116},[81,3433,3434],{"class":109},"    fetch",[81,3436,275],{"class":98},[81,3438,153],{"class":152},[81,3440,3441],{"class":156},"/api/users",[81,3443,153],{"class":152},[81,3445,3446],{"class":98},").",[81,3448,3227],{"class":109},[81,3450,2651],{"class":98},[81,3452,3453],{"class":802},"res",[81,3455,2657],{"class":98},[81,3457,2660],{"class":94},[81,3459,3460],{"class":98}," res.",[81,3462,3059],{"class":109},[81,3464,3465],{"class":98},"()),\n",[81,3467,3468,3470,3472,3474,3477,3479,3481,3483,3485,3487,3489,3491,3493,3495],{"class":83,"line":123},[81,3469,3434],{"class":109},[81,3471,275],{"class":98},[81,3473,153],{"class":152},[81,3475,3476],{"class":156},"/api/posts",[81,3478,153],{"class":152},[81,3480,3446],{"class":98},[81,3482,3227],{"class":109},[81,3484,2651],{"class":98},[81,3486,3453],{"class":802},[81,3488,2657],{"class":98},[81,3490,2660],{"class":94},[81,3492,3460],{"class":98},[81,3494,3059],{"class":109},[81,3496,3465],{"class":98},[81,3498,3499,3501,3503,3505,3508,3510,3512,3514,3516,3518,3520,3522,3524,3526],{"class":83,"line":129},[81,3500,3434],{"class":109},[81,3502,275],{"class":98},[81,3504,153],{"class":152},[81,3506,3507],{"class":156},"/api/comments",[81,3509,153],{"class":152},[81,3511,3446],{"class":98},[81,3513,3227],{"class":109},[81,3515,2651],{"class":98},[81,3517,3453],{"class":802},[81,3519,2657],{"class":98},[81,3521,2660],{"class":94},[81,3523,3460],{"class":98},[81,3525,3059],{"class":109},[81,3527,3465],{"class":98},[81,3529,3530],{"class":83,"line":146},[81,3531,3532],{"class":98},"  ]);\n",[81,3534,3535,3537],{"class":83,"line":175},[81,3536,1118],{"class":94},[81,3538,3539],{"class":98}," { users, posts, comments };\n",[81,3541,3542],{"class":83,"line":198},[81,3543,868],{"class":98},[32,3545,3546],{"id":3546},"결론",[13,3548,3549],{},"async/await는 JavaScript의 비동기 프로그래밍을 더욱 직관적이고 관리하기 쉽게 만들어주는 강력한 도구입니다. Promise를 기반으로 하면서도, 동기 코드처럼 보이는 비동기 코드를 작성할 수 있게 해주어 개발자들의 생산성을 크게 향상시킵니다.",[13,3551,3552],{},"이 문법을 적절히 활용하면 복잡한 비동기 로직도 깔끔하고 이해하기 쉽게 구현할 수 있습니다.",[1696,3554,3555],{},"html pre.shiki code .sRedq, html code.shiki .sRedq{--shiki-default:#FF79C6}html pre.shiki code .s57r0, html code.shiki .s57r0{--shiki-default:#50FA7B}html pre.shiki code .sddWA, html code.shiki .sddWA{--shiki-default:#F8F8F2}html pre.shiki code .syA0A, html code.shiki .syA0A{--shiki-default:#E9F284}html pre.shiki code .shai9, html code.shiki .shai9{--shiki-default:#F1FA8C}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html pre.shiki code .si6LB, html code.shiki .si6LB{--shiki-default:#6272A4}html pre.shiki code .sDXMj, html code.shiki .sDXMj{--shiki-default:#FFB86C;--shiki-default-font-style:italic}html pre.shiki code .s40py, html code.shiki .s40py{--shiki-default:#8BE9FD;--shiki-default-font-style:italic}",{"title":77,"searchDepth":91,"depth":91,"links":3557},[3558,3559,3560,3561,3562,3563,3564],{"id":2946,"depth":91,"text":2947},{"id":2953,"depth":91,"text":2954},{"id":2996,"depth":91,"text":2997},{"id":3074,"depth":91,"text":3075},{"id":3189,"depth":91,"text":3190},{"id":3387,"depth":91,"text":3388},{"id":3546,"depth":91,"text":3546},"2025-04-01T00:00:00.000Z","JavaScript에서 비동기 프로그래밍을 더 쉽게 만드는 async/await 문법에 대해 알아보겠습니다.",{},"/2025-04-01-async-await",{"title":2938,"description":3566},"2025-04-01-async-await",[3572,3573,3574],"JavaScript","비동기 프로그래밍","async/await","zd02LF3dgf",{"id":3577,"title":3578,"body":3579,"date":4339,"description":4340,"extension":1719,"image":1720,"meta":4341,"navigation":119,"path":4342,"seo":4343,"stem":4344,"tags":4345,"__hash__":4346},"content/2025-03-30-javascript-predicate.md","자바스크립트 Predicate 이해하기",{"type":10,"value":3580,"toc":4326},[3581,3584,3588,3591,3602,3606,3610,3788,3792,4016,4020,4046,4050,4054,4148,4152,4318,4320,4323],[13,3582,3583],{},"Predicate는 프로그래밍에서 참(true) 또는 거짓(false)을 반환하는 함수를 의미합니다. 자바스크립트에서 Predicate는 배열 메서드나 조건문에서 자주 사용되는 중요한 개념입니다.",[32,3585,3587],{"id":3586},"predicate의-기본-개념","Predicate의 기본 개념",[13,3589,3590],{},"Predicate는 주로 다음과 같은 특징을 가집니다:",[1507,3592,3593,3596,3599],{},[46,3594,3595],{},"하나 이상의 매개변수를 받습니다",[46,3597,3598],{},"항상 boolean 값을 반환합니다",[46,3600,3601],{},"주로 조건을 검사하는 용도로 사용됩니다",[32,3603,3605],{"id":3604},"자주-사용되는-predicate-예시","자주 사용되는 Predicate 예시",[242,3607,3609],{"id":3608},"_1-배열-메서드에서의-predicate","1. 배열 메서드에서의 Predicate",[72,3611,3613],{"className":74,"code":3612,"language":76,"meta":77,"style":77},"const numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\n// 짝수인지 확인하는 Predicate\nconst isEven = (num) => num % 2 === 0;\n\n// filter 메서드에서 Predicate 사용\nconst evenNumbers = numbers.filter(isEven);\nconsole.log(evenNumbers); // [2, 4, 6, 8, 10]\n\n// some 메서드에서 Predicate 사용\nconst hasEvenNumber = numbers.some(isEven);\nconsole.log(hasEvenNumber); // true\n",[17,3614,3615,3669,3673,3678,3714,3718,3723,3740,3752,3756,3761,3777],{"__ignoreMap":77},[81,3616,3617,3619,3621,3623,3625,3627,3629,3631,3633,3635,3637,3639,3641,3643,3645,3647,3649,3652,3654,3657,3659,3662,3664,3667],{"class":83,"line":84},[81,3618,95],{"class":94},[81,3620,2228],{"class":98},[81,3622,102],{"class":94},[81,3624,2233],{"class":98},[81,3626,204],{"class":203},[81,3628,162],{"class":98},[81,3630,1829],{"class":203},[81,3632,162],{"class":98},[81,3634,1834],{"class":203},[81,3636,162],{"class":98},[81,3638,1843],{"class":203},[81,3640,162],{"class":98},[81,3642,1852],{"class":203},[81,3644,162],{"class":98},[81,3646,2564],{"class":203},[81,3648,162],{"class":98},[81,3650,3651],{"class":203},"7",[81,3653,162],{"class":98},[81,3655,3656],{"class":203},"8",[81,3658,162],{"class":98},[81,3660,3661],{"class":203},"9",[81,3663,162],{"class":98},[81,3665,3666],{"class":203},"10",[81,3668,2266],{"class":98},[81,3670,3671],{"class":83,"line":91},[81,3672,120],{"emptyLinePlaceholder":119},[81,3674,3675],{"class":83,"line":116},[81,3676,3677],{"class":87},"// 짝수인지 확인하는 Predicate\n",[81,3679,3680,3682,3685,3688,3690,3693,3695,3697,3700,3703,3706,3709,3712],{"class":83,"line":123},[81,3681,95],{"class":94},[81,3683,3684],{"class":109}," isEven",[81,3686,3687],{"class":94}," =",[81,3689,1287],{"class":98},[81,3691,3692],{"class":802},"num",[81,3694,2657],{"class":98},[81,3696,2660],{"class":94},[81,3698,3699],{"class":98}," num ",[81,3701,3702],{"class":94},"%",[81,3704,3705],{"class":203}," 2",[81,3707,3708],{"class":94}," ===",[81,3710,3711],{"class":203}," 0",[81,3713,1124],{"class":98},[81,3715,3716],{"class":83,"line":129},[81,3717,120],{"emptyLinePlaceholder":119},[81,3719,3720],{"class":83,"line":146},[81,3721,3722],{"class":87},"// filter 메서드에서 Predicate 사용\n",[81,3724,3725,3727,3730,3732,3735,3737],{"class":83,"line":175},[81,3726,95],{"class":94},[81,3728,3729],{"class":98}," evenNumbers ",[81,3731,102],{"class":94},[81,3733,3734],{"class":98}," numbers.",[81,3736,2648],{"class":109},[81,3738,3739],{"class":98},"(isEven);\n",[81,3741,3742,3744,3746,3749],{"class":83,"line":198},[81,3743,410],{"class":98},[81,3745,413],{"class":109},[81,3747,3748],{"class":98},"(evenNumbers); ",[81,3750,3751],{"class":87},"// [2, 4, 6, 8, 10]\n",[81,3753,3754],{"class":83,"line":218},[81,3755,120],{"emptyLinePlaceholder":119},[81,3757,3758],{"class":83,"line":233},[81,3759,3760],{"class":87},"// some 메서드에서 Predicate 사용\n",[81,3762,3763,3765,3768,3770,3772,3775],{"class":83,"line":4},[81,3764,95],{"class":94},[81,3766,3767],{"class":98}," hasEvenNumber ",[81,3769,102],{"class":94},[81,3771,3734],{"class":98},[81,3773,3774],{"class":109},"some",[81,3776,3739],{"class":98},[81,3778,3779,3781,3783,3786],{"class":83,"line":888},[81,3780,410],{"class":98},[81,3782,413],{"class":109},[81,3784,3785],{"class":98},"(hasEvenNumber); ",[81,3787,639],{"class":87},[242,3789,3791],{"id":3790},"_2-객체-검증에서의-predicate","2. 객체 검증에서의 Predicate",[72,3793,3795],{"className":74,"code":3794,"language":76,"meta":77,"style":77},"const user = {\n  name: \"홍길동\",\n  age: 25,\n  email: \"hong@example.com\",\n};\n\n// 유효성 검사를 위한 Predicate들\nconst isValidName = (name) => name.length >= 2;\nconst isValidAge = (age) => age >= 0 && age \u003C= 120;\nconst isValidEmail = (email) => email.includes(\"@\");\n\n// Predicate들을 조합하여 사용\nconst isValidUser = (user) =>\n  isValidName(user.name) && isValidAge(user.age) && isValidEmail(user.email);\n",[17,3796,3797,3808,3824,3836,3852,3857,3861,3866,3893,3930,3965,3969,3974,3993],{"__ignoreMap":77},[81,3798,3799,3801,3804,3806],{"class":83,"line":84},[81,3800,95],{"class":94},[81,3802,3803],{"class":98}," user ",[81,3805,102],{"class":94},[81,3807,3102],{"class":98},[81,3809,3810,3813,3815,3817,3819,3821],{"class":83,"line":91},[81,3811,3812],{"class":98},"  name",[81,3814,837],{"class":94},[81,3816,1984],{"class":152},[81,3818,289],{"class":156},[81,3820,153],{"class":152},[81,3822,3823],{"class":98},",\n",[81,3825,3826,3829,3831,3834],{"class":83,"line":116},[81,3827,3828],{"class":98},"  age",[81,3830,837],{"class":94},[81,3832,3833],{"class":203}," 25",[81,3835,3823],{"class":98},[81,3837,3838,3841,3843,3845,3848,3850],{"class":83,"line":123},[81,3839,3840],{"class":98},"  email",[81,3842,837],{"class":94},[81,3844,1984],{"class":152},[81,3846,3847],{"class":156},"hong@example.com",[81,3849,153],{"class":152},[81,3851,3823],{"class":98},[81,3853,3854],{"class":83,"line":129},[81,3855,3856],{"class":98},"};\n",[81,3858,3859],{"class":83,"line":146},[81,3860,120],{"emptyLinePlaceholder":119},[81,3862,3863],{"class":83,"line":175},[81,3864,3865],{"class":87},"// 유효성 검사를 위한 Predicate들\n",[81,3867,3868,3870,3873,3875,3877,3879,3881,3883,3886,3889,3891],{"class":83,"line":198},[81,3869,95],{"class":94},[81,3871,3872],{"class":109}," isValidName",[81,3874,3687],{"class":94},[81,3876,1287],{"class":98},[81,3878,280],{"class":802},[81,3880,2657],{"class":98},[81,3882,2660],{"class":94},[81,3884,3885],{"class":98}," name.length ",[81,3887,3888],{"class":94},">=",[81,3890,3705],{"class":203},[81,3892,1124],{"class":98},[81,3894,3895,3897,3900,3902,3904,3906,3908,3910,3913,3915,3917,3920,3922,3925,3928],{"class":83,"line":218},[81,3896,95],{"class":94},[81,3898,3899],{"class":109}," isValidAge",[81,3901,3687],{"class":94},[81,3903,1287],{"class":98},[81,3905,307],{"class":802},[81,3907,2657],{"class":98},[81,3909,2660],{"class":94},[81,3911,3912],{"class":98}," age ",[81,3914,3888],{"class":94},[81,3916,3711],{"class":203},[81,3918,3919],{"class":94}," &&",[81,3921,3912],{"class":98},[81,3923,3924],{"class":94},"\u003C=",[81,3926,3927],{"class":203}," 120",[81,3929,1124],{"class":98},[81,3931,3932,3934,3937,3939,3941,3944,3946,3948,3951,3954,3956,3958,3961,3963],{"class":83,"line":233},[81,3933,95],{"class":94},[81,3935,3936],{"class":109}," isValidEmail",[81,3938,3687],{"class":94},[81,3940,1287],{"class":98},[81,3942,3943],{"class":802},"email",[81,3945,2657],{"class":98},[81,3947,2660],{"class":94},[81,3949,3950],{"class":98}," email.",[81,3952,3953],{"class":109},"includes",[81,3955,275],{"class":98},[81,3957,153],{"class":152},[81,3959,3960],{"class":156},"@",[81,3962,153],{"class":152},[81,3964,294],{"class":98},[81,3966,3967],{"class":83,"line":4},[81,3968,120],{"emptyLinePlaceholder":119},[81,3970,3971],{"class":83,"line":888},[81,3972,3973],{"class":87},"// Predicate들을 조합하여 사용\n",[81,3975,3976,3978,3981,3983,3985,3988,3990],{"class":83,"line":907},[81,3977,95],{"class":94},[81,3979,3980],{"class":109}," isValidUser",[81,3982,3687],{"class":94},[81,3984,1287],{"class":98},[81,3986,3987],{"class":802},"user",[81,3989,2657],{"class":98},[81,3991,3992],{"class":94},"=>\n",[81,3994,3995,3998,4001,4004,4006,4009,4011,4013],{"class":83,"line":916},[81,3996,3997],{"class":109},"  isValidName",[81,3999,4000],{"class":98},"(user.name) ",[81,4002,4003],{"class":94},"&&",[81,4005,3899],{"class":109},[81,4007,4008],{"class":98},"(user.age) ",[81,4010,4003],{"class":94},[81,4012,3936],{"class":109},[81,4014,4015],{"class":98},"(user.email);\n",[32,4017,4019],{"id":4018},"predicate의-장점","Predicate의 장점",[1507,4021,4022,4028,4034,4040],{},[46,4023,4024,4027],{},[1512,4025,4026],{},"재사용성",": 한 번 정의한 Predicate를 여러 곳에서 재사용할 수 있습니다.",[46,4029,4030,4033],{},[1512,4031,4032],{},"가독성",": 조건 로직을 명확하게 표현할 수 있습니다.",[46,4035,4036,4039],{},[1512,4037,4038],{},"유지보수성",": 조건 변경이 필요할 때 한 곳만 수정하면 됩니다.",[46,4041,4042,4045],{},[1512,4043,4044],{},"테스트 용이성",": Predicate는 순수 함수이므로 단위 테스트가 쉽습니다.",[32,4047,4049],{"id":4048},"고급-predicate-활용","고급 Predicate 활용",[242,4051,4053],{"id":4052},"_1-predicate-조합","1. Predicate 조합",[72,4055,4057],{"className":74,"code":4056,"language":76,"meta":77,"style":77},"const isPositive = (num) => num > 0;\nconst isInteger = (num) => Number.isInteger(num);\n\n// Predicate 조합\nconst isPositiveInteger = (num) => isPositive(num) && isInteger(num);\n",[17,4058,4059,4085,4111,4115,4120],{"__ignoreMap":77},[81,4060,4061,4063,4066,4068,4070,4072,4074,4076,4078,4081,4083],{"class":83,"line":84},[81,4062,95],{"class":94},[81,4064,4065],{"class":109}," isPositive",[81,4067,3687],{"class":94},[81,4069,1287],{"class":98},[81,4071,3692],{"class":802},[81,4073,2657],{"class":98},[81,4075,2660],{"class":94},[81,4077,3699],{"class":98},[81,4079,4080],{"class":94},">",[81,4082,3711],{"class":203},[81,4084,1124],{"class":98},[81,4086,4087,4089,4092,4094,4096,4098,4100,4102,4105,4108],{"class":83,"line":91},[81,4088,95],{"class":94},[81,4090,4091],{"class":109}," isInteger",[81,4093,3687],{"class":94},[81,4095,1287],{"class":98},[81,4097,3692],{"class":802},[81,4099,2657],{"class":98},[81,4101,2660],{"class":94},[81,4103,4104],{"class":98}," Number.",[81,4106,4107],{"class":109},"isInteger",[81,4109,4110],{"class":98},"(num);\n",[81,4112,4113],{"class":83,"line":116},[81,4114,120],{"emptyLinePlaceholder":119},[81,4116,4117],{"class":83,"line":123},[81,4118,4119],{"class":87},"// Predicate 조합\n",[81,4121,4122,4124,4127,4129,4131,4133,4135,4137,4139,4142,4144,4146],{"class":83,"line":129},[81,4123,95],{"class":94},[81,4125,4126],{"class":109}," isPositiveInteger",[81,4128,3687],{"class":94},[81,4130,1287],{"class":98},[81,4132,3692],{"class":802},[81,4134,2657],{"class":98},[81,4136,2660],{"class":94},[81,4138,4065],{"class":109},[81,4140,4141],{"class":98},"(num) ",[81,4143,4003],{"class":94},[81,4145,4091],{"class":109},[81,4147,4110],{"class":98},[242,4149,4151],{"id":4150},"_2-커링을-활용한-predicate","2. 커링을 활용한 Predicate",[72,4153,4155],{"className":74,"code":4154,"language":76,"meta":77,"style":77},"const greaterThan = (threshold) => (value) => value > threshold;\nconst lessThan = (threshold) => (value) => value \u003C threshold;\n\nconst isBetween = (min, max) => (value) =>\n  greaterThan(min)(value) && lessThan(max)(value);\n\nconst isInRange = isBetween(0, 100);\nconsole.log(isInRange(50)); // true\n",[17,4156,4157,4190,4221,4225,4256,4271,4275,4298],{"__ignoreMap":77},[81,4158,4159,4161,4164,4166,4168,4171,4173,4175,4177,4179,4181,4183,4185,4187],{"class":83,"line":84},[81,4160,95],{"class":94},[81,4162,4163],{"class":109}," greaterThan",[81,4165,3687],{"class":94},[81,4167,1287],{"class":98},[81,4169,4170],{"class":802},"threshold",[81,4172,2657],{"class":98},[81,4174,2660],{"class":94},[81,4176,1287],{"class":98},[81,4178,1326],{"class":802},[81,4180,2657],{"class":98},[81,4182,2660],{"class":94},[81,4184,1399],{"class":98},[81,4186,4080],{"class":94},[81,4188,4189],{"class":98}," threshold;\n",[81,4191,4192,4194,4197,4199,4201,4203,4205,4207,4209,4211,4213,4215,4217,4219],{"class":83,"line":91},[81,4193,95],{"class":94},[81,4195,4196],{"class":109}," lessThan",[81,4198,3687],{"class":94},[81,4200,1287],{"class":98},[81,4202,4170],{"class":802},[81,4204,2657],{"class":98},[81,4206,2660],{"class":94},[81,4208,1287],{"class":98},[81,4210,1326],{"class":802},[81,4212,2657],{"class":98},[81,4214,2660],{"class":94},[81,4216,1399],{"class":98},[81,4218,1082],{"class":94},[81,4220,4189],{"class":98},[81,4222,4223],{"class":83,"line":116},[81,4224,120],{"emptyLinePlaceholder":119},[81,4226,4227,4229,4232,4234,4236,4239,4241,4244,4246,4248,4250,4252,4254],{"class":83,"line":123},[81,4228,95],{"class":94},[81,4230,4231],{"class":109}," isBetween",[81,4233,3687],{"class":94},[81,4235,1287],{"class":98},[81,4237,4238],{"class":802},"min",[81,4240,162],{"class":98},[81,4242,4243],{"class":802},"max",[81,4245,2657],{"class":98},[81,4247,2660],{"class":94},[81,4249,1287],{"class":98},[81,4251,1326],{"class":802},[81,4253,2657],{"class":98},[81,4255,3992],{"class":94},[81,4257,4258,4261,4264,4266,4268],{"class":83,"line":129},[81,4259,4260],{"class":109},"  greaterThan",[81,4262,4263],{"class":98},"(min)(value) ",[81,4265,4003],{"class":94},[81,4267,4196],{"class":109},[81,4269,4270],{"class":98},"(max)(value);\n",[81,4272,4273],{"class":83,"line":146},[81,4274,120],{"emptyLinePlaceholder":119},[81,4276,4277,4279,4282,4284,4286,4288,4291,4293,4296],{"class":83,"line":175},[81,4278,95],{"class":94},[81,4280,4281],{"class":98}," isInRange ",[81,4283,102],{"class":94},[81,4285,4231],{"class":109},[81,4287,275],{"class":98},[81,4289,4290],{"class":203},"0",[81,4292,162],{"class":98},[81,4294,4295],{"class":203},"100",[81,4297,294],{"class":98},[81,4299,4300,4302,4304,4306,4309,4311,4314,4316],{"class":83,"line":198},[81,4301,410],{"class":98},[81,4303,413],{"class":109},[81,4305,275],{"class":98},[81,4307,4308],{"class":109},"isInRange",[81,4310,275],{"class":98},[81,4312,4313],{"class":203},"50",[81,4315,430],{"class":98},[81,4317,639],{"class":87},[32,4319,3546],{"id":3546},[13,4321,4322],{},"Predicate는 자바스크립트에서 조건부 로직을 표현하는 강력한 도구입니다. 특히 배열 메서드나 객체 검증에서 자주 사용되며, 코드의 재사용성과 가독성을 높이는 데 도움을 줍니다. Predicate를 적절히 활용하면 더 깔끔하고 유지보수하기 쉬운 코드를 작성할 수 있습니다.",[1696,4324,4325],{},"html pre.shiki code .sRedq, html code.shiki .sRedq{--shiki-default:#FF79C6}html pre.shiki code .sddWA, html code.shiki .sddWA{--shiki-default:#F8F8F2}html pre.shiki code .sjKgF, html code.shiki .sjKgF{--shiki-default:#BD93F9}html pre.shiki code .si6LB, html code.shiki .si6LB{--shiki-default:#6272A4}html pre.shiki code .s57r0, html code.shiki .s57r0{--shiki-default:#50FA7B}html pre.shiki code .sDXMj, html code.shiki .sDXMj{--shiki-default:#FFB86C;--shiki-default-font-style:italic}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html pre.shiki code .syA0A, html code.shiki .syA0A{--shiki-default:#E9F284}html pre.shiki code .shai9, html code.shiki .shai9{--shiki-default:#F1FA8C}",{"title":77,"searchDepth":91,"depth":91,"links":4327},[4328,4329,4333,4334,4338],{"id":3586,"depth":91,"text":3587},{"id":3604,"depth":91,"text":3605,"children":4330},[4331,4332],{"id":3608,"depth":116,"text":3609},{"id":3790,"depth":116,"text":3791},{"id":4018,"depth":91,"text":4019},{"id":4048,"depth":91,"text":4049,"children":4335},[4336,4337],{"id":4052,"depth":116,"text":4053},{"id":4150,"depth":116,"text":4151},{"id":3546,"depth":91,"text":3546},"2025-03-30T00:00:00.000Z","자바스크립트에서 Predicate의 개념과 활용 방법에 대해 알아봅니다.",{},"/2025-03-30-javascript-predicate",{"title":3578,"description":4340},"2025-03-30-javascript-predicate",[3572],"u5C27b6bf7",{"id":4348,"title":4349,"body":4350,"date":4339,"description":4895,"extension":1719,"image":1720,"meta":4896,"navigation":119,"path":4897,"seo":4898,"stem":4899,"tags":4900,"__hash__":4901},"content/2025-03-30-optional-chaining.md","Optional Chaining (옵셔널 체이닝)",{"type":10,"value":4351,"toc":4882},[4352,4359,4363,4377,4381,4463,4467,4544,4548,4552,4632,4636,4712,4716,4820,4822,4836,4874,4876,4879],[13,4353,4354,4355,4358],{},"Optional Chaining은 자바스크립트 ES2020에서 도입된 기능으로, 객체의 속성에 안전하게 접근할 수 있게 해주는 연산자입니다. ",[17,4356,4357],{},"?."," 연산자를 사용하여 구현됩니다.",[32,4360,4362],{"id":4361},"왜-optional-chaining이-필요한가","왜 Optional Chaining이 필요한가?",[13,4364,4365,4366,4369,4370,4373,4374,4376],{},"객체의 중첩된 속성에 접근할 때, 중간 속성이 ",[17,4367,4368],{},"undefined"," 또는 ",[17,4371,4372],{},"null","인 경우 에러가 발생할 수 있습니다. Optional Chaining은 이러한 상황에서 코드가 중단되지 않고 ",[17,4375,4368],{},"를 반환하도록 해줍니다.",[242,4378,4380],{"id":4379},"전통적인-방식","전통적인 방식",[72,4382,4384],{"className":74,"code":4383,"language":76,"meta":77,"style":77},"const user = {\n  address: {\n    street: \"Main St\",\n  },\n};\n\n// 안전하지 않은 접근\nconsole.log(user.address.street); // 'Main St'\nconsole.log(user.contact.email); // TypeError: Cannot read property 'email' of undefined\n",[17,4385,4386,4396,4405,4421,4426,4430,4434,4439,4451],{"__ignoreMap":77},[81,4387,4388,4390,4392,4394],{"class":83,"line":84},[81,4389,95],{"class":94},[81,4391,3803],{"class":98},[81,4393,102],{"class":94},[81,4395,3102],{"class":98},[81,4397,4398,4401,4403],{"class":83,"line":91},[81,4399,4400],{"class":98},"  address",[81,4402,837],{"class":94},[81,4404,3102],{"class":98},[81,4406,4407,4410,4412,4414,4417,4419],{"class":83,"line":116},[81,4408,4409],{"class":98},"    street",[81,4411,837],{"class":94},[81,4413,1984],{"class":152},[81,4415,4416],{"class":156},"Main St",[81,4418,153],{"class":152},[81,4420,3823],{"class":98},[81,4422,4423],{"class":83,"line":123},[81,4424,4425],{"class":98},"  },\n",[81,4427,4428],{"class":83,"line":129},[81,4429,3856],{"class":98},[81,4431,4432],{"class":83,"line":146},[81,4433,120],{"emptyLinePlaceholder":119},[81,4435,4436],{"class":83,"line":175},[81,4437,4438],{"class":87},"// 안전하지 않은 접근\n",[81,4440,4441,4443,4445,4448],{"class":83,"line":198},[81,4442,410],{"class":98},[81,4444,413],{"class":109},[81,4446,4447],{"class":98},"(user.address.street); ",[81,4449,4450],{"class":87},"// 'Main St'\n",[81,4452,4453,4455,4457,4460],{"class":83,"line":218},[81,4454,410],{"class":98},[81,4456,413],{"class":109},[81,4458,4459],{"class":98},"(user.contact.email); ",[81,4461,4462],{"class":87},"// TypeError: Cannot read property 'email' of undefined\n",[242,4464,4466],{"id":4465},"optional-chaining-사용","Optional Chaining 사용",[72,4468,4470],{"className":74,"code":4469,"language":76,"meta":77,"style":77},"const user = {\n  address: {\n    street: \"Main St\",\n  },\n};\n\n// 안전한 접근\nconsole.log(user?.address?.street); // 'Main St'\nconsole.log(user?.contact?.email); // undefined\n",[17,4471,4472,4482,4490,4504,4508,4512,4516,4521,4532],{"__ignoreMap":77},[81,4473,4474,4476,4478,4480],{"class":83,"line":84},[81,4475,95],{"class":94},[81,4477,3803],{"class":98},[81,4479,102],{"class":94},[81,4481,3102],{"class":98},[81,4483,4484,4486,4488],{"class":83,"line":91},[81,4485,4400],{"class":98},[81,4487,837],{"class":94},[81,4489,3102],{"class":98},[81,4491,4492,4494,4496,4498,4500,4502],{"class":83,"line":116},[81,4493,4409],{"class":98},[81,4495,837],{"class":94},[81,4497,1984],{"class":152},[81,4499,4416],{"class":156},[81,4501,153],{"class":152},[81,4503,3823],{"class":98},[81,4505,4506],{"class":83,"line":123},[81,4507,4425],{"class":98},[81,4509,4510],{"class":83,"line":129},[81,4511,3856],{"class":98},[81,4513,4514],{"class":83,"line":146},[81,4515,120],{"emptyLinePlaceholder":119},[81,4517,4518],{"class":83,"line":175},[81,4519,4520],{"class":87},"// 안전한 접근\n",[81,4522,4523,4525,4527,4530],{"class":83,"line":198},[81,4524,410],{"class":98},[81,4526,413],{"class":109},[81,4528,4529],{"class":98},"(user?.address?.street); ",[81,4531,4450],{"class":87},[81,4533,4534,4536,4538,4541],{"class":83,"line":218},[81,4535,410],{"class":98},[81,4537,413],{"class":109},[81,4539,4540],{"class":98},"(user?.contact?.email); ",[81,4542,4543],{"class":87},"// undefined\n",[32,4545,4547],{"id":4546},"주요-사용-사례","주요 사용 사례",[242,4549,4551],{"id":4550},"_1-메서드-호출","1. 메서드 호출",[72,4553,4555],{"className":74,"code":4554,"language":76,"meta":77,"style":77},"const user = {\n  greet() {\n    return \"Hello!\";\n  },\n};\n\nconsole.log(user?.greet?.()); // 'Hello!'\nconsole.log(user?.nonexistentMethod?.()); // undefined\n",[17,4556,4557,4567,4574,4587,4591,4595,4599,4617],{"__ignoreMap":77},[81,4558,4559,4561,4563,4565],{"class":83,"line":84},[81,4560,95],{"class":94},[81,4562,3803],{"class":98},[81,4564,102],{"class":94},[81,4566,3102],{"class":98},[81,4568,4569,4572],{"class":83,"line":91},[81,4570,4571],{"class":109},"  greet",[81,4573,2976],{"class":98},[81,4575,4576,4578,4580,4583,4585],{"class":83,"line":116},[81,4577,3145],{"class":94},[81,4579,1984],{"class":152},[81,4581,4582],{"class":156},"Hello!",[81,4584,153],{"class":152},[81,4586,1124],{"class":98},[81,4588,4589],{"class":83,"line":123},[81,4590,4425],{"class":98},[81,4592,4593],{"class":83,"line":129},[81,4594,3856],{"class":98},[81,4596,4597],{"class":83,"line":146},[81,4598,120],{"emptyLinePlaceholder":119},[81,4600,4601,4603,4605,4608,4611,4614],{"class":83,"line":175},[81,4602,410],{"class":98},[81,4604,413],{"class":109},[81,4606,4607],{"class":98},"(user?.",[81,4609,4610],{"class":109},"greet",[81,4612,4613],{"class":98},"?.()); ",[81,4615,4616],{"class":87},"// 'Hello!'\n",[81,4618,4619,4621,4623,4625,4628,4630],{"class":83,"line":198},[81,4620,410],{"class":98},[81,4622,413],{"class":109},[81,4624,4607],{"class":98},[81,4626,4627],{"class":109},"nonexistentMethod",[81,4629,4613],{"class":98},[81,4631,4543],{"class":87},[242,4633,4635],{"id":4634},"_2-배열-접근","2. 배열 접근",[72,4637,4639],{"className":74,"code":4638,"language":76,"meta":77,"style":77},"const users = [{ name: \"John\" }, { name: \"Jane\" }];\n\nconsole.log(users?.[0]?.name); // 'John'\nconsole.log(users?.[5]?.name); // undefined\n",[17,4640,4641,4677,4681,4698],{"__ignoreMap":77},[81,4642,4643,4645,4648,4650,4653,4655,4657,4660,4662,4665,4667,4669,4672,4674],{"class":83,"line":84},[81,4644,95],{"class":94},[81,4646,4647],{"class":98}," users ",[81,4649,102],{"class":94},[81,4651,4652],{"class":98}," [{ name",[81,4654,837],{"class":94},[81,4656,1984],{"class":152},[81,4658,4659],{"class":156},"John",[81,4661,153],{"class":152},[81,4663,4664],{"class":98}," }, { name",[81,4666,837],{"class":94},[81,4668,1984],{"class":152},[81,4670,4671],{"class":156},"Jane",[81,4673,153],{"class":152},[81,4675,4676],{"class":98}," }];\n",[81,4678,4679],{"class":83,"line":91},[81,4680,120],{"emptyLinePlaceholder":119},[81,4682,4683,4685,4687,4690,4692,4695],{"class":83,"line":116},[81,4684,410],{"class":98},[81,4686,413],{"class":109},[81,4688,4689],{"class":98},"(users?.[",[81,4691,4290],{"class":203},[81,4693,4694],{"class":98},"]?.name); ",[81,4696,4697],{"class":87},"// 'John'\n",[81,4699,4700,4702,4704,4706,4708,4710],{"class":83,"line":123},[81,4701,410],{"class":98},[81,4703,413],{"class":109},[81,4705,4689],{"class":98},[81,4707,1852],{"class":203},[81,4709,4694],{"class":98},[81,4711,4543],{"class":87},[242,4713,4715],{"id":4714},"_3-api-응답-처리","3. API 응답 처리",[72,4717,4719],{"className":74,"code":4718,"language":76,"meta":77,"style":77},"const response = {\n  data: {\n    user: {\n      profile: {\n        name: \"John Doe\",\n      },\n    },\n  },\n};\n\nconst userName = response?.data?.user?.profile?.name;\nconsole.log(userName); // 'John Doe'\n",[17,4720,4721,4731,4740,4749,4758,4774,4779,4784,4788,4792,4796,4808],{"__ignoreMap":77},[81,4722,4723,4725,4727,4729],{"class":83,"line":84},[81,4724,95],{"class":94},[81,4726,3023],{"class":98},[81,4728,102],{"class":94},[81,4730,3102],{"class":98},[81,4732,4733,4736,4738],{"class":83,"line":91},[81,4734,4735],{"class":98},"  data",[81,4737,837],{"class":94},[81,4739,3102],{"class":98},[81,4741,4742,4745,4747],{"class":83,"line":116},[81,4743,4744],{"class":98},"    user",[81,4746,837],{"class":94},[81,4748,3102],{"class":98},[81,4750,4751,4754,4756],{"class":83,"line":123},[81,4752,4753],{"class":98},"      profile",[81,4755,837],{"class":94},[81,4757,3102],{"class":98},[81,4759,4760,4763,4765,4767,4770,4772],{"class":83,"line":129},[81,4761,4762],{"class":98},"        name",[81,4764,837],{"class":94},[81,4766,1984],{"class":152},[81,4768,4769],{"class":156},"John Doe",[81,4771,153],{"class":152},[81,4773,3823],{"class":98},[81,4775,4776],{"class":83,"line":146},[81,4777,4778],{"class":98},"      },\n",[81,4780,4781],{"class":83,"line":175},[81,4782,4783],{"class":98},"    },\n",[81,4785,4786],{"class":83,"line":198},[81,4787,4425],{"class":98},[81,4789,4790],{"class":83,"line":218},[81,4791,3856],{"class":98},[81,4793,4794],{"class":83,"line":233},[81,4795,120],{"emptyLinePlaceholder":119},[81,4797,4798,4800,4803,4805],{"class":83,"line":4},[81,4799,95],{"class":94},[81,4801,4802],{"class":98}," userName ",[81,4804,102],{"class":94},[81,4806,4807],{"class":98}," response?.data?.user?.profile?.name;\n",[81,4809,4810,4812,4814,4817],{"class":83,"line":888},[81,4811,410],{"class":98},[81,4813,413],{"class":109},[81,4815,4816],{"class":98},"(userName); ",[81,4818,4819],{"class":87},"// 'John Doe'\n",[32,4821,1545],{"id":1545},[1507,4823,4824,4833],{},[46,4825,4826,4827,4829,4830,4832],{},"Optional Chaining은 ",[17,4828,4368],{},"와 ",[17,4831,4372],{},"에 대해서만 작동합니다. 다른 falsy 값(0, '', false)에는 영향을 주지 않습니다.",[46,4834,4835],{},"Optional Chaining은 읽기 전용 연산자입니다. 할당 연산자와 함께 사용할 수 없습니다.",[72,4837,4839],{"className":74,"code":4838,"language":76,"meta":77,"style":77},"const obj = {};\nobj?.property = 'value'; // SyntaxError\n",[17,4840,4841,4853],{"__ignoreMap":77},[81,4842,4843,4845,4848,4850],{"class":83,"line":84},[81,4844,95],{"class":94},[81,4846,4847],{"class":98}," obj ",[81,4849,102],{"class":94},[81,4851,4852],{"class":98}," {};\n",[81,4854,4855,4858,4860,4863,4865,4868,4871],{"class":83,"line":91},[81,4856,4857],{"class":98},"obj?.property ",[81,4859,102],{"class":94},[81,4861,4862],{"class":152}," '",[81,4864,1326],{"class":156},[81,4866,4867],{"class":152},"'",[81,4869,4870],{"class":98},"; ",[81,4872,4873],{"class":87},"// SyntaxError\n",[32,4875,3546],{"id":3546},[13,4877,4878],{},"Optional Chaining은 코드의 안정성을 높이고 에러를 방지하는 데 매우 유용한 기능입니다. 특히 API 응답 처리나 복잡한 객체 구조를 다룰 때 유용하게 사용할 수 있습니다. 하지만 과도한 사용은 코드의 의도를 불명확하게 만들 수 있으므로, 적절한 상황에서만 사용하는 것이 좋습니다.",[1696,4880,4881],{},"html pre.shiki code .sRedq, html code.shiki .sRedq{--shiki-default:#FF79C6}html pre.shiki code .sddWA, html code.shiki .sddWA{--shiki-default:#F8F8F2}html pre.shiki code .syA0A, html code.shiki .syA0A{--shiki-default:#E9F284}html pre.shiki code .shai9, html code.shiki .shai9{--shiki-default:#F1FA8C}html pre.shiki code .si6LB, html code.shiki .si6LB{--shiki-default:#6272A4}html pre.shiki code .s57r0, html code.shiki .s57r0{--shiki-default:#50FA7B}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html pre.shiki code .sjKgF, html code.shiki .sjKgF{--shiki-default:#BD93F9}",{"title":77,"searchDepth":91,"depth":91,"links":4883},[4884,4888,4893,4894],{"id":4361,"depth":91,"text":4362,"children":4885},[4886,4887],{"id":4379,"depth":116,"text":4380},{"id":4465,"depth":116,"text":4466},{"id":4546,"depth":91,"text":4547,"children":4889},[4890,4891,4892],{"id":4550,"depth":116,"text":4551},{"id":4634,"depth":116,"text":4635},{"id":4714,"depth":116,"text":4715},{"id":1545,"depth":91,"text":1545},{"id":3546,"depth":91,"text":3546},"자바스크립트의 Optional Chaining 연산자(?.)에 대해 알아보고 실제 사용 예시를 살펴봅니다.",{},"/2025-03-30-optional-chaining",{"title":4349,"description":4895},"2025-03-30-optional-chaining",[3572],"vD8NuAAfee",1743686572489]