[{"data":1,"prerenderedAt":5212},["ShallowReactive",2],{"posts":3},{"total":4,"posts":5,"limit":261},12,[6,927,2600,3804,4442],{"id":7,"title":8,"body":9,"date":914,"description":915,"extension":916,"image":917,"meta":918,"navigation":257,"path":919,"seo":920,"stem":921,"tags":922,"__hash__":926},"content/2025-04-12-uno-css.md","UnoCSS: 유틸리티 우선 CSS 프레임워크",{"type":10,"value":11,"toc":900},"minimal",[12,17,21,24,28,57,59,62,88,90,93,113,115,119,145,151,155,159,189,193,298,302,348,352,429,435,439,442,448,464,471,632,639,721,732,793,799,867,870,887,893,896],[13,14,16],"h2",{"id":15},"unocss란","UnoCSS란?",[18,19,20],"p",{},"UnoCSS는 유틸리티 우선(Utility-First) CSS 프레임워크로, Tailwind CSS의 철학을 기반으로 만들어진 새로운 CSS 프레임워크입니다. Anthony Fu가 개발한 이 프레임워크는 더 작은 번들 사이즈와 더 빠른 개발 속도를 제공하는 것을 목표로 합니다.",[22,23],"br",{},[13,25,27],{"id":26},"주요-특징","주요 특징",[29,30,31,39,45,51],"ol",{},[32,33,34,38],"li",{},[35,36,37],"strong",{},"온디맨드 생성",": 사용된 유틸리티 클래스만 생성하여 번들 사이즈를 최소화",[32,40,41,44],{},[35,42,43],{},"완전히 커스터마이즈 가능",": 규칙, 변형, 프리셋 등을 자유롭게 구성 가능",[32,46,47,50],{},[35,48,49],{},"Vite 통합",": Vite와 완벽하게 통합되어 빠른 개발 경험 제공",[32,52,53,56],{},[35,54,55],{},"타입스크립트 지원",": 완벽한 타입스크립트 지원으로 타입 안정성 보장",[22,58],{},[13,60,61],{"id":61},"장점",[29,63,64,70,76,82],{},[32,65,66,69],{},[35,67,68],{},"작은 번들 사이즈",": 사용된 클래스만 생성하여 최적화된 CSS 번들 제공",[32,71,72,75],{},[35,73,74],{},"높은 성능",": Tailwind CSS보다 더 빠른 빌드 속도",[32,77,78,81],{},[35,79,80],{},"유연한 커스터마이징",": 프리셋 시스템을 통해 쉽게 확장 가능",[32,83,84,87],{},[35,85,86],{},"개발자 경험",": 직관적인 API와 자동완성 지원",[22,89],{},[13,91,92],{"id":92},"단점",[29,94,95,101,107],{},[32,96,97,100],{},[35,98,99],{},"상대적으로 새로운 기술",": 커뮤니티와 리소스가 Tailwind CSS보다 적음",[32,102,103,106],{},[35,104,105],{},"학습 곡선",": 유틸리티 우선 접근법에 익숙해져야 함",[32,108,109,112],{},[35,110,111],{},"문서화",": Tailwind CSS에 비해 문서화가 덜 되어있음",[22,114],{},[13,116,118],{"id":117},"tailwind-css와의-비교","Tailwind CSS와의 비교",[29,120,121,127,133,139],{},[32,122,123,126],{},[35,124,125],{},"성능",": UnoCSS가 더 작은 번들 사이즈와 빠른 빌드 속도를 제공",[32,128,129,132],{},[35,130,131],{},"커스터마이징",": UnoCSS가 더 유연한 커스터마이징 옵션 제공",[32,134,135,138],{},[35,136,137],{},"커뮤니티",": Tailwind CSS가 더 큰 커뮤니티와 리소스를 보유",[32,140,141,144],{},[35,142,143],{},"안정성",": Tailwind CSS가 더 오래되어 더 안정적",[18,146,147,149],{},[22,148],{},[22,150],{},[13,152,154],{"id":153},"기본-사용법","기본 사용법",[156,157,158],"h3",{"id":158},"설치",[160,161,166],"pre",{"className":162,"code":163,"language":164,"meta":165,"style":165},"language-bash shiki shiki-themes dracula","npm install -D unocss\n","bash","",[167,168,169],"code",{"__ignoreMap":165},[170,171,174,178,182,186],"span",{"class":172,"line":173},"line",1,[170,175,177],{"class":176},"s57r0","npm",[170,179,181],{"class":180},"shai9"," install",[170,183,185],{"class":184},"sjKgF"," -D",[170,187,188],{"class":180}," unocss\n",[156,190,192],{"id":191},"vite-설정","Vite 설정",[160,194,198],{"className":195,"code":196,"language":197,"meta":165,"style":165},"language-typescript shiki shiki-themes dracula","// vite.config.ts\nimport { defineConfig } from \"vite\";\nimport UnoCSS from \"unocss/vite\";\n\nexport default defineConfig({\n  plugins: [UnoCSS()],\n});\n","typescript",[167,199,200,206,233,252,259,274,292],{"__ignoreMap":165},[170,201,202],{"class":172,"line":173},[170,203,205],{"class":204},"si6LB","// vite.config.ts\n",[170,207,209,213,217,220,224,227,230],{"class":172,"line":208},2,[170,210,212],{"class":211},"sRedq","import",[170,214,216],{"class":215},"sddWA"," { defineConfig } ",[170,218,219],{"class":211},"from",[170,221,223],{"class":222},"syA0A"," \"",[170,225,226],{"class":180},"vite",[170,228,229],{"class":222},"\"",[170,231,232],{"class":215},";\n",[170,234,236,238,241,243,245,248,250],{"class":172,"line":235},3,[170,237,212],{"class":211},[170,239,240],{"class":215}," UnoCSS ",[170,242,219],{"class":211},[170,244,223],{"class":222},[170,246,247],{"class":180},"unocss/vite",[170,249,229],{"class":222},[170,251,232],{"class":215},[170,253,255],{"class":172,"line":254},4,[170,256,258],{"emptyLinePlaceholder":257},true,"\n",[170,260,262,265,268,271],{"class":172,"line":261},5,[170,263,264],{"class":211},"export",[170,266,267],{"class":211}," default",[170,269,270],{"class":176}," defineConfig",[170,272,273],{"class":215},"({\n",[170,275,277,280,283,286,289],{"class":172,"line":276},6,[170,278,279],{"class":215},"  plugins",[170,281,282],{"class":211},":",[170,284,285],{"class":215}," [",[170,287,288],{"class":176},"UnoCSS",[170,290,291],{"class":215},"()],\n",[170,293,295],{"class":172,"line":294},7,[170,296,297],{"class":215},"});\n",[156,299,301],{"id":300},"기본-사용-예시","기본 사용 예시",[160,303,307],{"className":304,"code":305,"language":306,"meta":165,"style":165},"language-html shiki shiki-themes dracula","\u003Cdiv class=\"flex items-center justify-center p-4 bg-blue-500 text-white\">\n  Hello UnoCSS!\n\u003C/div>\n","html",[167,308,309,334,339],{"__ignoreMap":165},[170,310,311,314,317,321,324,326,329,331],{"class":172,"line":173},[170,312,313],{"class":215},"\u003C",[170,315,316],{"class":211},"div",[170,318,320],{"class":319},"so7px"," class",[170,322,323],{"class":211},"=",[170,325,229],{"class":222},[170,327,328],{"class":180},"flex items-center justify-center p-4 bg-blue-500 text-white",[170,330,229],{"class":222},[170,332,333],{"class":215},">\n",[170,335,336],{"class":172,"line":208},[170,337,338],{"class":215},"  Hello UnoCSS!\n",[170,340,341,344,346],{"class":172,"line":235},[170,342,343],{"class":215},"\u003C/",[170,345,316],{"class":211},[170,347,333],{"class":215},[156,349,351],{"id":350},"커스텀-규칙-추가","커스텀 규칙 추가",[160,353,355],{"className":195,"code":354,"language":197,"meta":165,"style":165},"// uno.config.ts\nimport { defineConfig } from \"unocss\";\n\nexport default defineConfig({\n  rules: [[\"custom-rule\", { color: \"red\" }]],\n});\n",[167,356,357,362,379,383,393,425],{"__ignoreMap":165},[170,358,359],{"class":172,"line":173},[170,360,361],{"class":204},"// uno.config.ts\n",[170,363,364,366,368,370,372,375,377],{"class":172,"line":208},[170,365,212],{"class":211},[170,367,216],{"class":215},[170,369,219],{"class":211},[170,371,223],{"class":222},[170,373,374],{"class":180},"unocss",[170,376,229],{"class":222},[170,378,232],{"class":215},[170,380,381],{"class":172,"line":235},[170,382,258],{"emptyLinePlaceholder":257},[170,384,385,387,389,391],{"class":172,"line":254},[170,386,264],{"class":211},[170,388,267],{"class":211},[170,390,270],{"class":176},[170,392,273],{"class":215},[170,394,395,398,400,403,405,408,410,413,415,417,420,422],{"class":172,"line":261},[170,396,397],{"class":215},"  rules",[170,399,282],{"class":211},[170,401,402],{"class":215}," [[",[170,404,229],{"class":222},[170,406,407],{"class":180},"custom-rule",[170,409,229],{"class":222},[170,411,412],{"class":215},", { color",[170,414,282],{"class":211},[170,416,223],{"class":222},[170,418,419],{"class":180},"red",[170,421,229],{"class":222},[170,423,424],{"class":215}," }]],\n",[170,426,427],{"class":172,"line":276},[170,428,297],{"class":215},[18,430,431,433],{},[22,432],{},[22,434],{},[156,436,438],{"id":437},"nuxt-설정","Nuxt 설정",[18,440,441],{},"Nuxt 3에서는 UnoCSS를 쉽게 통합할 수 있습니다. 다음 단계를 따라 설정할 수 있습니다:",[29,443,444],{},[32,445,446,282],{},[35,447,158],{},[160,449,451],{"className":162,"code":450,"language":164,"meta":165,"style":165},"npm install -D @unocss/nuxt\n",[167,452,453],{"__ignoreMap":165},[170,454,455,457,459,461],{"class":172,"line":173},[170,456,177],{"class":176},[170,458,181],{"class":180},[170,460,185],{"class":184},[170,462,463],{"class":180}," @unocss/nuxt\n",[29,465,466],{"start":208},[32,467,468,282],{},[35,469,470],{},"nuxt.config.ts 설정",[160,472,474],{"className":195,"code":473,"language":197,"meta":165,"style":165},"// nuxt.config.ts\nexport default defineNuxtConfig({\n  modules: [\"@unocss/nuxt\"],\n  unocss: {\n    // UnoCSS 설정\n    uno: true,\n    icons: true,\n    attributify: true,\n    // 프리셋 설정\n    presets: [\n      \"unocss-preset-uno\",\n      \"unocss-preset-attributify\",\n      \"unocss-preset-icons\",\n    ],\n  },\n});\n",[167,475,476,481,492,511,521,526,539,550,562,568,579,592,603,615,621,627],{"__ignoreMap":165},[170,477,478],{"class":172,"line":173},[170,479,480],{"class":204},"// nuxt.config.ts\n",[170,482,483,485,487,490],{"class":172,"line":208},[170,484,264],{"class":211},[170,486,267],{"class":211},[170,488,489],{"class":176}," defineNuxtConfig",[170,491,273],{"class":215},[170,493,494,497,499,501,503,506,508],{"class":172,"line":235},[170,495,496],{"class":215},"  modules",[170,498,282],{"class":211},[170,500,285],{"class":215},[170,502,229],{"class":222},[170,504,505],{"class":180},"@unocss/nuxt",[170,507,229],{"class":222},[170,509,510],{"class":215},"],\n",[170,512,513,516,518],{"class":172,"line":254},[170,514,515],{"class":215},"  unocss",[170,517,282],{"class":211},[170,519,520],{"class":215}," {\n",[170,522,523],{"class":172,"line":261},[170,524,525],{"class":204},"    // UnoCSS 설정\n",[170,527,528,531,533,536],{"class":172,"line":276},[170,529,530],{"class":215},"    uno",[170,532,282],{"class":211},[170,534,535],{"class":184}," true",[170,537,538],{"class":215},",\n",[170,540,541,544,546,548],{"class":172,"line":294},[170,542,543],{"class":215},"    icons",[170,545,282],{"class":211},[170,547,535],{"class":184},[170,549,538],{"class":215},[170,551,553,556,558,560],{"class":172,"line":552},8,[170,554,555],{"class":215},"    attributify",[170,557,282],{"class":211},[170,559,535],{"class":184},[170,561,538],{"class":215},[170,563,565],{"class":172,"line":564},9,[170,566,567],{"class":204},"    // 프리셋 설정\n",[170,569,571,574,576],{"class":172,"line":570},10,[170,572,573],{"class":215},"    presets",[170,575,282],{"class":211},[170,577,578],{"class":215}," [\n",[170,580,582,585,588,590],{"class":172,"line":581},11,[170,583,584],{"class":222},"      \"",[170,586,587],{"class":180},"unocss-preset-uno",[170,589,229],{"class":222},[170,591,538],{"class":215},[170,593,594,596,599,601],{"class":172,"line":4},[170,595,584],{"class":222},[170,597,598],{"class":180},"unocss-preset-attributify",[170,600,229],{"class":222},[170,602,538],{"class":215},[170,604,606,608,611,613],{"class":172,"line":605},13,[170,607,584],{"class":222},[170,609,610],{"class":180},"unocss-preset-icons",[170,612,229],{"class":222},[170,614,538],{"class":215},[170,616,618],{"class":172,"line":617},14,[170,619,620],{"class":215},"    ],\n",[170,622,624],{"class":172,"line":623},15,[170,625,626],{"class":215},"  },\n",[170,628,630],{"class":172,"line":629},16,[170,631,297],{"class":215},[29,633,634],{"start":235},[32,635,636,282],{},[35,637,638],{},"사용 예시",[160,640,644],{"className":641,"code":642,"language":643,"meta":165,"style":165},"language-vue shiki shiki-themes dracula","\u003Ctemplate>\n  \u003Cdiv class=\"flex items-center justify-center p-4 bg-blue-500 text-white\">\n    \u003Ci class=\"i-carbon-sun text-2xl\" />\n    Hello Nuxt + UnoCSS!\n  \u003C/div>\n\u003C/template>\n","vue",[167,645,646,655,674,699,704,713],{"__ignoreMap":165},[170,647,648,650,653],{"class":172,"line":173},[170,649,313],{"class":215},[170,651,652],{"class":211},"template",[170,654,333],{"class":215},[170,656,657,660,662,664,666,668,670,672],{"class":172,"line":208},[170,658,659],{"class":215},"  \u003C",[170,661,316],{"class":211},[170,663,320],{"class":319},[170,665,323],{"class":211},[170,667,229],{"class":222},[170,669,328],{"class":180},[170,671,229],{"class":222},[170,673,333],{"class":215},[170,675,676,679,682,684,686,688,691,693,697],{"class":172,"line":235},[170,677,678],{"class":215},"    \u003C",[170,680,681],{"class":211},"i",[170,683,320],{"class":319},[170,685,323],{"class":211},[170,687,229],{"class":222},[170,689,690],{"class":180},"i-carbon-sun text-2xl",[170,692,229],{"class":222},[170,694,696],{"class":695},"sY4df"," /",[170,698,333],{"class":215},[170,700,701],{"class":172,"line":254},[170,702,703],{"class":215},"    Hello Nuxt + UnoCSS!\n",[170,705,706,709,711],{"class":172,"line":261},[170,707,708],{"class":215},"  \u003C/",[170,710,316],{"class":211},[170,712,333],{"class":215},[170,714,715,717,719],{"class":172,"line":276},[170,716,343],{"class":215},[170,718,652],{"class":211},[170,720,333],{"class":215},[29,722,723],{"start":254},[32,724,725,727,728,731],{},[35,726,55],{},":\n",[167,729,730],{},"tsconfig.json","에 다음 설정을 추가합니다:",[160,733,737],{"className":734,"code":735,"language":736,"meta":165,"style":165},"language-json shiki shiki-themes dracula","{\n  \"compilerOptions\": {\n    \"types\": [\"@unocss/nuxt\"]\n  }\n}\n","json",[167,738,739,744,760,783,788],{"__ignoreMap":165},[170,740,741],{"class":172,"line":173},[170,742,743],{"class":215},"{\n",[170,745,746,750,754,756,758],{"class":172,"line":208},[170,747,749],{"class":748},"sTGHf","  \"",[170,751,753],{"class":752},"s0SIM","compilerOptions",[170,755,229],{"class":748},[170,757,282],{"class":211},[170,759,520],{"class":215},[170,761,762,765,768,770,772,774,776,778,780],{"class":172,"line":235},[170,763,764],{"class":748},"    \"",[170,766,767],{"class":752},"types",[170,769,229],{"class":748},[170,771,282],{"class":211},[170,773,285],{"class":215},[170,775,229],{"class":222},[170,777,505],{"class":180},[170,779,229],{"class":222},[170,781,782],{"class":215},"]\n",[170,784,785],{"class":172,"line":254},[170,786,787],{"class":215},"  }\n",[170,789,790],{"class":172,"line":261},[170,791,792],{"class":215},"}\n",[29,794,795],{"start":261},[32,796,797,282],{},[35,798,351],{},[160,800,801],{"className":195,"code":354,"language":197,"meta":165,"style":165},[167,802,803,807,823,827,837,863],{"__ignoreMap":165},[170,804,805],{"class":172,"line":173},[170,806,361],{"class":204},[170,808,809,811,813,815,817,819,821],{"class":172,"line":208},[170,810,212],{"class":211},[170,812,216],{"class":215},[170,814,219],{"class":211},[170,816,223],{"class":222},[170,818,374],{"class":180},[170,820,229],{"class":222},[170,822,232],{"class":215},[170,824,825],{"class":172,"line":235},[170,826,258],{"emptyLinePlaceholder":257},[170,828,829,831,833,835],{"class":172,"line":254},[170,830,264],{"class":211},[170,832,267],{"class":211},[170,834,270],{"class":176},[170,836,273],{"class":215},[170,838,839,841,843,845,847,849,851,853,855,857,859,861],{"class":172,"line":261},[170,840,397],{"class":215},[170,842,282],{"class":211},[170,844,402],{"class":215},[170,846,229],{"class":222},[170,848,407],{"class":180},[170,850,229],{"class":222},[170,852,412],{"class":215},[170,854,282],{"class":211},[170,856,223],{"class":222},[170,858,419],{"class":180},[170,860,229],{"class":222},[170,862,424],{"class":215},[170,864,865],{"class":172,"line":276},[170,866,297],{"class":215},[18,868,869],{},"Nuxt에서 UnoCSS를 사용하면 다음과 같은 이점이 있습니다:",[871,872,873,876,879,882,884],"ul",{},[32,874,875],{},"자동으로 CSS가 생성되고 최적화됨",[32,877,878],{},"HMR(Hot Module Replacement) 지원",[32,880,881],{},"Nuxt의 자동 임포트 기능과 통합",[32,883,55],{},[32,885,886],{},"아이콘 사용이 용이",[18,888,889,891],{},[22,890],{},[22,892],{},[18,894,895],{},"UnoCSS는 Tailwind CSS의 대안으로서, 더 작은 번들 사이즈와 더 빠른 개발 경험을 제공합니다. 새로운 프로젝트를 시작할 때 고려해볼 만한 프레임워크이며, 특히 성능이 중요한 프로젝트에서 유용할 수 있습니다. 다만, 아직 상대적으로 새로운 기술이므로 프로젝트의 요구사항과 팀의 상황을 고려하여 선택하는 것이 좋습니다.",[897,898,899],"style",{},"html pre.shiki code .s57r0, html code.shiki .s57r0{--shiki-default:#50FA7B}html pre.shiki code .shai9, html code.shiki .shai9{--shiki-default:#F1FA8C}html pre.shiki code .sjKgF, html code.shiki .sjKgF{--shiki-default:#BD93F9}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html pre.shiki code .si6LB, html code.shiki .si6LB{--shiki-default:#6272A4}html pre.shiki code .sRedq, html code.shiki .sRedq{--shiki-default:#FF79C6}html pre.shiki code .sddWA, html code.shiki .sddWA{--shiki-default:#F8F8F2}html pre.shiki code .syA0A, html code.shiki .syA0A{--shiki-default:#E9F284}html pre.shiki code .so7px, html code.shiki .so7px{--shiki-default:#50FA7B;--shiki-default-font-style:italic}html pre.shiki code .sY4df, html code.shiki .sY4df{--shiki-default:#FF5555;--shiki-default-font-style:italic;--shiki-default-text-decoration:underline}html pre.shiki code .sTGHf, html code.shiki .sTGHf{--shiki-default:#8BE9FE}html pre.shiki code .s0SIM, html code.shiki .s0SIM{--shiki-default:#8BE9FD}",{"title":165,"searchDepth":208,"depth":208,"links":901},[902,903,904,905,906,907],{"id":15,"depth":208,"text":16},{"id":26,"depth":208,"text":27},{"id":61,"depth":208,"text":61},{"id":92,"depth":208,"text":92},{"id":117,"depth":208,"text":118},{"id":153,"depth":208,"text":154,"children":908},[909,910,911,912,913],{"id":158,"depth":235,"text":158},{"id":191,"depth":235,"text":192},{"id":300,"depth":235,"text":301},{"id":350,"depth":235,"text":351},{"id":437,"depth":235,"text":438},"2025-04-12T00:00:00.000Z","UnoCSS의 기본 개념, 장단점, Tailwind CSS와의 비교, 그리고 사용법에 대해 알아봅니다.","md",null,{},"/2025-04-12-uno-css",{"title":8,"description":915},"2025-04-12-uno-css",[923,288,924,925],"CSS","Tailwind","프론트엔드","Ie7khgkls5",{"id":928,"title":929,"body":930,"date":2589,"description":2590,"extension":916,"image":917,"meta":2591,"navigation":257,"path":2592,"seo":2593,"stem":2594,"tags":2595,"__hash__":2599},"content/2025-04-03-data-type-map.md","자바스크립트 Map 자료형: 키-값 쌍의 효율적인 관리",{"type":10,"value":931,"toc":2571},[932,942,948,952,958,972,978,982,985,1125,1129,1133,1230,1234,1344,1348,1440,1444,1550,1554,1645,1649,1653,1862,1866,2065,2069,2372,2378,2382,2410,2416,2419,2424,2557,2562,2568],[18,933,934,935,938,939,941],{},"자바스크립트의 특별한 자료형인 ",[167,936,937],{},"Map","에 대해 이야기해보려고 합니다.",[22,940],{},"\nMap은 키-값 쌍을 효율적으로 관리할 수 있는 자료구조입니다.",[18,943,944,946],{},[22,945],{},[22,947],{},[13,949,951],{"id":950},"map이란-무엇인가요","Map이란 무엇인가요?",[18,953,954,955,957],{},"Map은 ES6(ECMAScript 2015)에서 도입된 새로운 자료구조로, 키-값 쌍을 저장하고 관리할 수 있게 해줍니다.",[22,956],{},"\n일반 객체와 비슷해 보이지만, Map은 다음과 같은 특징이 있습니다:",[871,959,960,963,966,969],{},[32,961,962],{},"키로 어떤 타입이든 사용 가능 (객체는 문자열이나 심볼만 가능)",[32,964,965],{},"삽입 순서가 보장됨",[32,967,968],{},"크기를 쉽게 알 수 있음",[32,970,971],{},"반복이 용이함",[18,973,974,976],{},[22,975],{},[22,977],{},[13,979,981],{"id":980},"map-생성하기","Map 생성하기",[18,983,984],{},"Map을 만드는 방법은 매우 간단합니다:",[160,986,990],{"className":987,"code":988,"language":989,"meta":165,"style":165},"language-javascript shiki shiki-themes dracula","// 빈 Map 생성\nconst emptyMap = new Map();\n\n// 배열로부터 Map 생성\nconst map = new Map([\n  [\"key1\", \"value1\"],\n  [\"key2\", \"value2\"],\n  [1, \"number key\"],\n  [{}, \"object key\"],\n]);\n","javascript",[167,991,992,997,1017,1021,1026,1042,1066,1088,1106,1120],{"__ignoreMap":165},[170,993,994],{"class":172,"line":173},[170,995,996],{"class":204},"// 빈 Map 생성\n",[170,998,999,1002,1005,1007,1011,1014],{"class":172,"line":208},[170,1000,1001],{"class":211},"const",[170,1003,1004],{"class":215}," emptyMap ",[170,1006,323],{"class":211},[170,1008,1010],{"class":1009},"sDz32"," new",[170,1012,1013],{"class":176}," Map",[170,1015,1016],{"class":215},"();\n",[170,1018,1019],{"class":172,"line":235},[170,1020,258],{"emptyLinePlaceholder":257},[170,1022,1023],{"class":172,"line":254},[170,1024,1025],{"class":204},"// 배열로부터 Map 생성\n",[170,1027,1028,1030,1033,1035,1037,1039],{"class":172,"line":261},[170,1029,1001],{"class":211},[170,1031,1032],{"class":215}," map ",[170,1034,323],{"class":211},[170,1036,1010],{"class":1009},[170,1038,1013],{"class":176},[170,1040,1041],{"class":215},"([\n",[170,1043,1044,1047,1049,1052,1054,1057,1059,1062,1064],{"class":172,"line":276},[170,1045,1046],{"class":215},"  [",[170,1048,229],{"class":222},[170,1050,1051],{"class":180},"key1",[170,1053,229],{"class":222},[170,1055,1056],{"class":215},", ",[170,1058,229],{"class":222},[170,1060,1061],{"class":180},"value1",[170,1063,229],{"class":222},[170,1065,510],{"class":215},[170,1067,1068,1070,1072,1075,1077,1079,1081,1084,1086],{"class":172,"line":294},[170,1069,1046],{"class":215},[170,1071,229],{"class":222},[170,1073,1074],{"class":180},"key2",[170,1076,229],{"class":222},[170,1078,1056],{"class":215},[170,1080,229],{"class":222},[170,1082,1083],{"class":180},"value2",[170,1085,229],{"class":222},[170,1087,510],{"class":215},[170,1089,1090,1092,1095,1097,1099,1102,1104],{"class":172,"line":552},[170,1091,1046],{"class":215},[170,1093,1094],{"class":184},"1",[170,1096,1056],{"class":215},[170,1098,229],{"class":222},[170,1100,1101],{"class":180},"number key",[170,1103,229],{"class":222},[170,1105,510],{"class":215},[170,1107,1108,1111,1113,1116,1118],{"class":172,"line":564},[170,1109,1110],{"class":215},"  [{}, ",[170,1112,229],{"class":222},[170,1114,1115],{"class":180},"object key",[170,1117,229],{"class":222},[170,1119,510],{"class":215},[170,1121,1122],{"class":172,"line":570},[170,1123,1124],{"class":215},"]);\n",[13,1126,1128],{"id":1127},"map의-주요-메서드들","Map의 주요 메서드들",[156,1130,1132],{"id":1131},"_1-값-추가하기-set","1. 값 추가하기 (set)",[160,1134,1136],{"className":987,"code":1135,"language":989,"meta":165,"style":165},"const map = new Map();\nmap.set(\"name\", \"홍길동\");\nmap.set(\"age\", 25);\nmap.set(\"city\", \"서울\");\n",[167,1137,1138,1152,1182,1204],{"__ignoreMap":165},[170,1139,1140,1142,1144,1146,1148,1150],{"class":172,"line":173},[170,1141,1001],{"class":211},[170,1143,1032],{"class":215},[170,1145,323],{"class":211},[170,1147,1010],{"class":1009},[170,1149,1013],{"class":176},[170,1151,1016],{"class":215},[170,1153,1154,1157,1160,1163,1165,1168,1170,1172,1174,1177,1179],{"class":172,"line":208},[170,1155,1156],{"class":215},"map.",[170,1158,1159],{"class":176},"set",[170,1161,1162],{"class":215},"(",[170,1164,229],{"class":222},[170,1166,1167],{"class":180},"name",[170,1169,229],{"class":222},[170,1171,1056],{"class":215},[170,1173,229],{"class":222},[170,1175,1176],{"class":180},"홍길동",[170,1178,229],{"class":222},[170,1180,1181],{"class":215},");\n",[170,1183,1184,1186,1188,1190,1192,1195,1197,1199,1202],{"class":172,"line":235},[170,1185,1156],{"class":215},[170,1187,1159],{"class":176},[170,1189,1162],{"class":215},[170,1191,229],{"class":222},[170,1193,1194],{"class":180},"age",[170,1196,229],{"class":222},[170,1198,1056],{"class":215},[170,1200,1201],{"class":184},"25",[170,1203,1181],{"class":215},[170,1205,1206,1208,1210,1212,1214,1217,1219,1221,1223,1226,1228],{"class":172,"line":254},[170,1207,1156],{"class":215},[170,1209,1159],{"class":176},[170,1211,1162],{"class":215},[170,1213,229],{"class":222},[170,1215,1216],{"class":180},"city",[170,1218,229],{"class":222},[170,1220,1056],{"class":215},[170,1222,229],{"class":222},[170,1224,1225],{"class":180},"서울",[170,1227,229],{"class":222},[170,1229,1181],{"class":215},[156,1231,1233],{"id":1232},"_2-값-가져오기-get","2. 값 가져오기 (get)",[160,1235,1237],{"className":987,"code":1236,"language":989,"meta":165,"style":165},"const map = new Map([\n  [\"name\", \"홍길동\"],\n  [\"age\", 25],\n]);\nconsole.log(map.get(\"name\")); // '홍길동'\nconsole.log(map.get(\"age\")); // 25\n",[167,1238,1239,1253,1273,1289,1293,1321],{"__ignoreMap":165},[170,1240,1241,1243,1245,1247,1249,1251],{"class":172,"line":173},[170,1242,1001],{"class":211},[170,1244,1032],{"class":215},[170,1246,323],{"class":211},[170,1248,1010],{"class":1009},[170,1250,1013],{"class":176},[170,1252,1041],{"class":215},[170,1254,1255,1257,1259,1261,1263,1265,1267,1269,1271],{"class":172,"line":208},[170,1256,1046],{"class":215},[170,1258,229],{"class":222},[170,1260,1167],{"class":180},[170,1262,229],{"class":222},[170,1264,1056],{"class":215},[170,1266,229],{"class":222},[170,1268,1176],{"class":180},[170,1270,229],{"class":222},[170,1272,510],{"class":215},[170,1274,1275,1277,1279,1281,1283,1285,1287],{"class":172,"line":235},[170,1276,1046],{"class":215},[170,1278,229],{"class":222},[170,1280,1194],{"class":180},[170,1282,229],{"class":222},[170,1284,1056],{"class":215},[170,1286,1201],{"class":184},[170,1288,510],{"class":215},[170,1290,1291],{"class":172,"line":254},[170,1292,1124],{"class":215},[170,1294,1295,1298,1301,1304,1307,1309,1311,1313,1315,1318],{"class":172,"line":261},[170,1296,1297],{"class":215},"console.",[170,1299,1300],{"class":176},"log",[170,1302,1303],{"class":215},"(map.",[170,1305,1306],{"class":176},"get",[170,1308,1162],{"class":215},[170,1310,229],{"class":222},[170,1312,1167],{"class":180},[170,1314,229],{"class":222},[170,1316,1317],{"class":215},")); ",[170,1319,1320],{"class":204},"// '홍길동'\n",[170,1322,1323,1325,1327,1329,1331,1333,1335,1337,1339,1341],{"class":172,"line":276},[170,1324,1297],{"class":215},[170,1326,1300],{"class":176},[170,1328,1303],{"class":215},[170,1330,1306],{"class":176},[170,1332,1162],{"class":215},[170,1334,229],{"class":222},[170,1336,1194],{"class":180},[170,1338,229],{"class":222},[170,1340,1317],{"class":215},[170,1342,1343],{"class":204},"// 25\n",[156,1345,1347],{"id":1346},"_3-값-삭제하기-delete","3. 값 삭제하기 (delete)",[160,1349,1351],{"className":987,"code":1350,"language":989,"meta":165,"style":165},"const map = new Map([\n  [\"name\", \"홍길동\"],\n  [\"age\", 25],\n]);\nmap.delete(\"age\"); // true 반환\nconsole.log(map); // Map(1) { 'name' => '홍길동' }\n",[167,1352,1353,1367,1387,1403,1407,1428],{"__ignoreMap":165},[170,1354,1355,1357,1359,1361,1363,1365],{"class":172,"line":173},[170,1356,1001],{"class":211},[170,1358,1032],{"class":215},[170,1360,323],{"class":211},[170,1362,1010],{"class":1009},[170,1364,1013],{"class":176},[170,1366,1041],{"class":215},[170,1368,1369,1371,1373,1375,1377,1379,1381,1383,1385],{"class":172,"line":208},[170,1370,1046],{"class":215},[170,1372,229],{"class":222},[170,1374,1167],{"class":180},[170,1376,229],{"class":222},[170,1378,1056],{"class":215},[170,1380,229],{"class":222},[170,1382,1176],{"class":180},[170,1384,229],{"class":222},[170,1386,510],{"class":215},[170,1388,1389,1391,1393,1395,1397,1399,1401],{"class":172,"line":235},[170,1390,1046],{"class":215},[170,1392,229],{"class":222},[170,1394,1194],{"class":180},[170,1396,229],{"class":222},[170,1398,1056],{"class":215},[170,1400,1201],{"class":184},[170,1402,510],{"class":215},[170,1404,1405],{"class":172,"line":254},[170,1406,1124],{"class":215},[170,1408,1409,1411,1414,1416,1418,1420,1422,1425],{"class":172,"line":261},[170,1410,1156],{"class":215},[170,1412,1413],{"class":176},"delete",[170,1415,1162],{"class":215},[170,1417,229],{"class":222},[170,1419,1194],{"class":180},[170,1421,229],{"class":222},[170,1423,1424],{"class":215},"); ",[170,1426,1427],{"class":204},"// true 반환\n",[170,1429,1430,1432,1434,1437],{"class":172,"line":276},[170,1431,1297],{"class":215},[170,1433,1300],{"class":176},[170,1435,1436],{"class":215},"(map); ",[170,1438,1439],{"class":204},"// Map(1) { 'name' => '홍길동' }\n",[156,1441,1443],{"id":1442},"_4-키-존재-확인하기-has","4. 키 존재 확인하기 (has)",[160,1445,1447],{"className":987,"code":1446,"language":989,"meta":165,"style":165},"const map = new Map([\n  [\"name\", \"홍길동\"],\n  [\"age\", 25],\n]);\nconsole.log(map.has(\"name\")); // true\nconsole.log(map.has(\"city\")); // false\n",[167,1448,1449,1463,1483,1499,1503,1527],{"__ignoreMap":165},[170,1450,1451,1453,1455,1457,1459,1461],{"class":172,"line":173},[170,1452,1001],{"class":211},[170,1454,1032],{"class":215},[170,1456,323],{"class":211},[170,1458,1010],{"class":1009},[170,1460,1013],{"class":176},[170,1462,1041],{"class":215},[170,1464,1465,1467,1469,1471,1473,1475,1477,1479,1481],{"class":172,"line":208},[170,1466,1046],{"class":215},[170,1468,229],{"class":222},[170,1470,1167],{"class":180},[170,1472,229],{"class":222},[170,1474,1056],{"class":215},[170,1476,229],{"class":222},[170,1478,1176],{"class":180},[170,1480,229],{"class":222},[170,1482,510],{"class":215},[170,1484,1485,1487,1489,1491,1493,1495,1497],{"class":172,"line":235},[170,1486,1046],{"class":215},[170,1488,229],{"class":222},[170,1490,1194],{"class":180},[170,1492,229],{"class":222},[170,1494,1056],{"class":215},[170,1496,1201],{"class":184},[170,1498,510],{"class":215},[170,1500,1501],{"class":172,"line":254},[170,1502,1124],{"class":215},[170,1504,1505,1507,1509,1511,1514,1516,1518,1520,1522,1524],{"class":172,"line":261},[170,1506,1297],{"class":215},[170,1508,1300],{"class":176},[170,1510,1303],{"class":215},[170,1512,1513],{"class":176},"has",[170,1515,1162],{"class":215},[170,1517,229],{"class":222},[170,1519,1167],{"class":180},[170,1521,229],{"class":222},[170,1523,1317],{"class":215},[170,1525,1526],{"class":204},"// true\n",[170,1528,1529,1531,1533,1535,1537,1539,1541,1543,1545,1547],{"class":172,"line":276},[170,1530,1297],{"class":215},[170,1532,1300],{"class":176},[170,1534,1303],{"class":215},[170,1536,1513],{"class":176},[170,1538,1162],{"class":215},[170,1540,229],{"class":222},[170,1542,1216],{"class":180},[170,1544,229],{"class":222},[170,1546,1317],{"class":215},[170,1548,1549],{"class":204},"// false\n",[156,1551,1553],{"id":1552},"_5-크기-확인하기-size","5. 크기 확인하기 (size)",[160,1555,1557],{"className":987,"code":1556,"language":989,"meta":165,"style":165},"const map = new Map([\n  [\"name\", \"홍길동\"],\n  [\"age\", 25],\n  [\"city\", \"서울\"],\n]);\nconsole.log(map.size); // 3\n",[167,1558,1559,1573,1593,1609,1629,1633],{"__ignoreMap":165},[170,1560,1561,1563,1565,1567,1569,1571],{"class":172,"line":173},[170,1562,1001],{"class":211},[170,1564,1032],{"class":215},[170,1566,323],{"class":211},[170,1568,1010],{"class":1009},[170,1570,1013],{"class":176},[170,1572,1041],{"class":215},[170,1574,1575,1577,1579,1581,1583,1585,1587,1589,1591],{"class":172,"line":208},[170,1576,1046],{"class":215},[170,1578,229],{"class":222},[170,1580,1167],{"class":180},[170,1582,229],{"class":222},[170,1584,1056],{"class":215},[170,1586,229],{"class":222},[170,1588,1176],{"class":180},[170,1590,229],{"class":222},[170,1592,510],{"class":215},[170,1594,1595,1597,1599,1601,1603,1605,1607],{"class":172,"line":235},[170,1596,1046],{"class":215},[170,1598,229],{"class":222},[170,1600,1194],{"class":180},[170,1602,229],{"class":222},[170,1604,1056],{"class":215},[170,1606,1201],{"class":184},[170,1608,510],{"class":215},[170,1610,1611,1613,1615,1617,1619,1621,1623,1625,1627],{"class":172,"line":254},[170,1612,1046],{"class":215},[170,1614,229],{"class":222},[170,1616,1216],{"class":180},[170,1618,229],{"class":222},[170,1620,1056],{"class":215},[170,1622,229],{"class":222},[170,1624,1225],{"class":180},[170,1626,229],{"class":222},[170,1628,510],{"class":215},[170,1630,1631],{"class":172,"line":261},[170,1632,1124],{"class":215},[170,1634,1635,1637,1639,1642],{"class":172,"line":276},[170,1636,1297],{"class":215},[170,1638,1300],{"class":176},[170,1640,1641],{"class":215},"(map.size); ",[170,1643,1644],{"class":204},"// 3\n",[13,1646,1648],{"id":1647},"map의-실제-활용-예시","Map의 실제 활용 예시",[156,1650,1652],{"id":1651},"_1-사용자-세션-관리","1. 사용자 세션 관리",[160,1654,1656],{"className":987,"code":1655,"language":989,"meta":165,"style":165},"const userSessions = new Map();\n\nfunction createSession(userId, sessionData) {\n  userSessions.set(userId, {\n    ...sessionData,\n    createdAt: new Date(),\n    lastActive: new Date(),\n  });\n}\n\nfunction updateLastActive(userId) {\n  const session = userSessions.get(userId);\n  if (session) {\n    session.lastActive = new Date();\n    userSessions.set(userId, session);\n  }\n}\n\nfunction removeSession(userId) {\n  userSessions.delete(userId);\n}\n",[167,1657,1658,1673,1677,1699,1709,1717,1732,1745,1750,1754,1758,1771,1789,1797,1810,1820,1824,1829,1834,1848,1857],{"__ignoreMap":165},[170,1659,1660,1662,1665,1667,1669,1671],{"class":172,"line":173},[170,1661,1001],{"class":211},[170,1663,1664],{"class":215}," userSessions ",[170,1666,323],{"class":211},[170,1668,1010],{"class":1009},[170,1670,1013],{"class":176},[170,1672,1016],{"class":215},[170,1674,1675],{"class":172,"line":208},[170,1676,258],{"emptyLinePlaceholder":257},[170,1678,1679,1682,1685,1687,1691,1693,1696],{"class":172,"line":235},[170,1680,1681],{"class":211},"function",[170,1683,1684],{"class":176}," createSession",[170,1686,1162],{"class":215},[170,1688,1690],{"class":1689},"sDXMj","userId",[170,1692,1056],{"class":215},[170,1694,1695],{"class":1689},"sessionData",[170,1697,1698],{"class":215},") {\n",[170,1700,1701,1704,1706],{"class":172,"line":254},[170,1702,1703],{"class":215},"  userSessions.",[170,1705,1159],{"class":176},[170,1707,1708],{"class":215},"(userId, {\n",[170,1710,1711,1714],{"class":172,"line":261},[170,1712,1713],{"class":211},"    ...",[170,1715,1716],{"class":215},"sessionData,\n",[170,1718,1719,1722,1724,1726,1729],{"class":172,"line":276},[170,1720,1721],{"class":215},"    createdAt",[170,1723,282],{"class":211},[170,1725,1010],{"class":1009},[170,1727,1728],{"class":176}," Date",[170,1730,1731],{"class":215},"(),\n",[170,1733,1734,1737,1739,1741,1743],{"class":172,"line":294},[170,1735,1736],{"class":215},"    lastActive",[170,1738,282],{"class":211},[170,1740,1010],{"class":1009},[170,1742,1728],{"class":176},[170,1744,1731],{"class":215},[170,1746,1747],{"class":172,"line":552},[170,1748,1749],{"class":215},"  });\n",[170,1751,1752],{"class":172,"line":564},[170,1753,792],{"class":215},[170,1755,1756],{"class":172,"line":570},[170,1757,258],{"emptyLinePlaceholder":257},[170,1759,1760,1762,1765,1767,1769],{"class":172,"line":581},[170,1761,1681],{"class":211},[170,1763,1764],{"class":176}," updateLastActive",[170,1766,1162],{"class":215},[170,1768,1690],{"class":1689},[170,1770,1698],{"class":215},[170,1772,1773,1776,1779,1781,1784,1786],{"class":172,"line":4},[170,1774,1775],{"class":211},"  const",[170,1777,1778],{"class":215}," session ",[170,1780,323],{"class":211},[170,1782,1783],{"class":215}," userSessions.",[170,1785,1306],{"class":176},[170,1787,1788],{"class":215},"(userId);\n",[170,1790,1791,1794],{"class":172,"line":605},[170,1792,1793],{"class":211},"  if",[170,1795,1796],{"class":215}," (session) {\n",[170,1798,1799,1802,1804,1806,1808],{"class":172,"line":617},[170,1800,1801],{"class":215},"    session.lastActive ",[170,1803,323],{"class":211},[170,1805,1010],{"class":1009},[170,1807,1728],{"class":176},[170,1809,1016],{"class":215},[170,1811,1812,1815,1817],{"class":172,"line":623},[170,1813,1814],{"class":215},"    userSessions.",[170,1816,1159],{"class":176},[170,1818,1819],{"class":215},"(userId, session);\n",[170,1821,1822],{"class":172,"line":629},[170,1823,787],{"class":215},[170,1825,1827],{"class":172,"line":1826},17,[170,1828,792],{"class":215},[170,1830,1832],{"class":172,"line":1831},18,[170,1833,258],{"emptyLinePlaceholder":257},[170,1835,1837,1839,1842,1844,1846],{"class":172,"line":1836},19,[170,1838,1681],{"class":211},[170,1840,1841],{"class":176}," removeSession",[170,1843,1162],{"class":215},[170,1845,1690],{"class":1689},[170,1847,1698],{"class":215},[170,1849,1851,1853,1855],{"class":172,"line":1850},20,[170,1852,1703],{"class":215},[170,1854,1413],{"class":176},[170,1856,1788],{"class":215},[170,1858,1860],{"class":172,"line":1859},21,[170,1861,792],{"class":215},[156,1863,1865],{"id":1864},"_2-캐시-구현","2. 캐시 구현",[160,1867,1869],{"className":987,"code":1868,"language":989,"meta":165,"style":165},"const cache = new Map();\n\nfunction getCachedData(key) {\n  if (cache.has(key)) {\n    const { data, timestamp } = cache.get(key);\n    // 1시간 이내의 캐시만 유효\n    if (Date.now() - timestamp \u003C 3600000) {\n      return data;\n    }\n    cache.delete(key);\n  }\n  return null;\n}\n\nfunction setCachedData(key, data) {\n  cache.set(key, {\n    data,\n    timestamp: Date.now(),\n  });\n}\n",[167,1870,1871,1886,1890,1904,1916,1934,1939,1966,1974,1979,1988,1992,2002,2006,2010,2028,2038,2043,2057,2061],{"__ignoreMap":165},[170,1872,1873,1875,1878,1880,1882,1884],{"class":172,"line":173},[170,1874,1001],{"class":211},[170,1876,1877],{"class":215}," cache ",[170,1879,323],{"class":211},[170,1881,1010],{"class":1009},[170,1883,1013],{"class":176},[170,1885,1016],{"class":215},[170,1887,1888],{"class":172,"line":208},[170,1889,258],{"emptyLinePlaceholder":257},[170,1891,1892,1894,1897,1899,1902],{"class":172,"line":235},[170,1893,1681],{"class":211},[170,1895,1896],{"class":176}," getCachedData",[170,1898,1162],{"class":215},[170,1900,1901],{"class":1689},"key",[170,1903,1698],{"class":215},[170,1905,1906,1908,1911,1913],{"class":172,"line":254},[170,1907,1793],{"class":211},[170,1909,1910],{"class":215}," (cache.",[170,1912,1513],{"class":176},[170,1914,1915],{"class":215},"(key)) {\n",[170,1917,1918,1921,1924,1926,1929,1931],{"class":172,"line":261},[170,1919,1920],{"class":211},"    const",[170,1922,1923],{"class":215}," { data, timestamp } ",[170,1925,323],{"class":211},[170,1927,1928],{"class":215}," cache.",[170,1930,1306],{"class":176},[170,1932,1933],{"class":215},"(key);\n",[170,1935,1936],{"class":172,"line":276},[170,1937,1938],{"class":204},"    // 1시간 이내의 캐시만 유효\n",[170,1940,1941,1944,1947,1950,1953,1956,1959,1961,1964],{"class":172,"line":294},[170,1942,1943],{"class":211},"    if",[170,1945,1946],{"class":215}," (Date.",[170,1948,1949],{"class":176},"now",[170,1951,1952],{"class":215},"() ",[170,1954,1955],{"class":211},"-",[170,1957,1958],{"class":215}," timestamp ",[170,1960,313],{"class":211},[170,1962,1963],{"class":184}," 3600000",[170,1965,1698],{"class":215},[170,1967,1968,1971],{"class":172,"line":552},[170,1969,1970],{"class":211},"      return",[170,1972,1973],{"class":215}," data;\n",[170,1975,1976],{"class":172,"line":564},[170,1977,1978],{"class":215},"    }\n",[170,1980,1981,1984,1986],{"class":172,"line":570},[170,1982,1983],{"class":215},"    cache.",[170,1985,1413],{"class":176},[170,1987,1933],{"class":215},[170,1989,1990],{"class":172,"line":581},[170,1991,787],{"class":215},[170,1993,1994,1997,2000],{"class":172,"line":4},[170,1995,1996],{"class":211},"  return",[170,1998,1999],{"class":184}," null",[170,2001,232],{"class":215},[170,2003,2004],{"class":172,"line":605},[170,2005,792],{"class":215},[170,2007,2008],{"class":172,"line":617},[170,2009,258],{"emptyLinePlaceholder":257},[170,2011,2012,2014,2017,2019,2021,2023,2026],{"class":172,"line":623},[170,2013,1681],{"class":211},[170,2015,2016],{"class":176}," setCachedData",[170,2018,1162],{"class":215},[170,2020,1901],{"class":1689},[170,2022,1056],{"class":215},[170,2024,2025],{"class":1689},"data",[170,2027,1698],{"class":215},[170,2029,2030,2033,2035],{"class":172,"line":629},[170,2031,2032],{"class":215},"  cache.",[170,2034,1159],{"class":176},[170,2036,2037],{"class":215},"(key, {\n",[170,2039,2040],{"class":172,"line":1826},[170,2041,2042],{"class":215},"    data,\n",[170,2044,2045,2048,2050,2053,2055],{"class":172,"line":1831},[170,2046,2047],{"class":215},"    timestamp",[170,2049,282],{"class":211},[170,2051,2052],{"class":215}," Date.",[170,2054,1949],{"class":176},[170,2056,1731],{"class":215},[170,2058,2059],{"class":172,"line":1836},[170,2060,1749],{"class":215},[170,2062,2063],{"class":172,"line":1850},[170,2064,792],{"class":215},[156,2066,2068],{"id":2067},"_3-map-순회하기","3. Map 순회하기",[160,2070,2072],{"className":987,"code":2071,"language":989,"meta":165,"style":165},"const map = new Map([\n  [\"name\", \"홍길동\"],\n  [\"age\", 25],\n  [\"city\", \"서울\"],\n]);\n\n// 키-값 쌍 순회\nfor (const [key, value] of map) {\n  console.log(`${key}: ${value}`);\n}\n\n// 키만 순회\nfor (const key of map.keys()) {\n  console.log(key);\n}\n\n// 값만 순회\nfor (const value of map.values()) {\n  console.log(value);\n}\n\n// Map을 배열로 변환\nconst entries = Array.from(map.entries());\nconst keys = Array.from(map.keys());\nconst values = Array.from(map.values());\n",[167,2073,2074,2088,2108,2124,2144,2148,2152,2157,2176,2210,2214,2218,2223,2245,2253,2257,2261,2266,2286,2295,2299,2303,2309,2332,2352],{"__ignoreMap":165},[170,2075,2076,2078,2080,2082,2084,2086],{"class":172,"line":173},[170,2077,1001],{"class":211},[170,2079,1032],{"class":215},[170,2081,323],{"class":211},[170,2083,1010],{"class":1009},[170,2085,1013],{"class":176},[170,2087,1041],{"class":215},[170,2089,2090,2092,2094,2096,2098,2100,2102,2104,2106],{"class":172,"line":208},[170,2091,1046],{"class":215},[170,2093,229],{"class":222},[170,2095,1167],{"class":180},[170,2097,229],{"class":222},[170,2099,1056],{"class":215},[170,2101,229],{"class":222},[170,2103,1176],{"class":180},[170,2105,229],{"class":222},[170,2107,510],{"class":215},[170,2109,2110,2112,2114,2116,2118,2120,2122],{"class":172,"line":235},[170,2111,1046],{"class":215},[170,2113,229],{"class":222},[170,2115,1194],{"class":180},[170,2117,229],{"class":222},[170,2119,1056],{"class":215},[170,2121,1201],{"class":184},[170,2123,510],{"class":215},[170,2125,2126,2128,2130,2132,2134,2136,2138,2140,2142],{"class":172,"line":254},[170,2127,1046],{"class":215},[170,2129,229],{"class":222},[170,2131,1216],{"class":180},[170,2133,229],{"class":222},[170,2135,1056],{"class":215},[170,2137,229],{"class":222},[170,2139,1225],{"class":180},[170,2141,229],{"class":222},[170,2143,510],{"class":215},[170,2145,2146],{"class":172,"line":261},[170,2147,1124],{"class":215},[170,2149,2150],{"class":172,"line":276},[170,2151,258],{"emptyLinePlaceholder":257},[170,2153,2154],{"class":172,"line":294},[170,2155,2156],{"class":204},"// 키-값 쌍 순회\n",[170,2158,2159,2162,2165,2167,2170,2173],{"class":172,"line":552},[170,2160,2161],{"class":211},"for",[170,2163,2164],{"class":215}," (",[170,2166,1001],{"class":211},[170,2168,2169],{"class":215}," [key, value] ",[170,2171,2172],{"class":211},"of",[170,2174,2175],{"class":215}," map) {\n",[170,2177,2178,2181,2183,2185,2188,2191,2193,2196,2199,2201,2204,2206,2208],{"class":172,"line":564},[170,2179,2180],{"class":215},"  console.",[170,2182,1300],{"class":176},[170,2184,1162],{"class":215},[170,2186,2187],{"class":180},"`",[170,2189,2190],{"class":211},"${",[170,2192,1901],{"class":215},[170,2194,2195],{"class":211},"}",[170,2197,2198],{"class":180},": ",[170,2200,2190],{"class":211},[170,2202,2203],{"class":215},"value",[170,2205,2195],{"class":211},[170,2207,2187],{"class":180},[170,2209,1181],{"class":215},[170,2211,2212],{"class":172,"line":570},[170,2213,792],{"class":215},[170,2215,2216],{"class":172,"line":581},[170,2217,258],{"emptyLinePlaceholder":257},[170,2219,2220],{"class":172,"line":4},[170,2221,2222],{"class":204},"// 키만 순회\n",[170,2224,2225,2227,2229,2231,2234,2236,2239,2242],{"class":172,"line":605},[170,2226,2161],{"class":211},[170,2228,2164],{"class":215},[170,2230,1001],{"class":211},[170,2232,2233],{"class":215}," key ",[170,2235,2172],{"class":211},[170,2237,2238],{"class":215}," map.",[170,2240,2241],{"class":176},"keys",[170,2243,2244],{"class":215},"()) {\n",[170,2246,2247,2249,2251],{"class":172,"line":617},[170,2248,2180],{"class":215},[170,2250,1300],{"class":176},[170,2252,1933],{"class":215},[170,2254,2255],{"class":172,"line":623},[170,2256,792],{"class":215},[170,2258,2259],{"class":172,"line":629},[170,2260,258],{"emptyLinePlaceholder":257},[170,2262,2263],{"class":172,"line":1826},[170,2264,2265],{"class":204},"// 값만 순회\n",[170,2267,2268,2270,2272,2274,2277,2279,2281,2284],{"class":172,"line":1831},[170,2269,2161],{"class":211},[170,2271,2164],{"class":215},[170,2273,1001],{"class":211},[170,2275,2276],{"class":215}," value ",[170,2278,2172],{"class":211},[170,2280,2238],{"class":215},[170,2282,2283],{"class":176},"values",[170,2285,2244],{"class":215},[170,2287,2288,2290,2292],{"class":172,"line":1836},[170,2289,2180],{"class":215},[170,2291,1300],{"class":176},[170,2293,2294],{"class":215},"(value);\n",[170,2296,2297],{"class":172,"line":1850},[170,2298,792],{"class":215},[170,2300,2301],{"class":172,"line":1859},[170,2302,258],{"emptyLinePlaceholder":257},[170,2304,2306],{"class":172,"line":2305},22,[170,2307,2308],{"class":204},"// Map을 배열로 변환\n",[170,2310,2312,2314,2317,2319,2322,2324,2326,2329],{"class":172,"line":2311},23,[170,2313,1001],{"class":211},[170,2315,2316],{"class":215}," entries ",[170,2318,323],{"class":211},[170,2320,2321],{"class":215}," Array.",[170,2323,219],{"class":176},[170,2325,1303],{"class":215},[170,2327,2328],{"class":176},"entries",[170,2330,2331],{"class":215},"());\n",[170,2333,2335,2337,2340,2342,2344,2346,2348,2350],{"class":172,"line":2334},24,[170,2336,1001],{"class":211},[170,2338,2339],{"class":215}," keys ",[170,2341,323],{"class":211},[170,2343,2321],{"class":215},[170,2345,219],{"class":176},[170,2347,1303],{"class":215},[170,2349,2241],{"class":176},[170,2351,2331],{"class":215},[170,2353,2355,2357,2360,2362,2364,2366,2368,2370],{"class":172,"line":2354},25,[170,2356,1001],{"class":211},[170,2358,2359],{"class":215}," values ",[170,2361,323],{"class":211},[170,2363,2321],{"class":215},[170,2365,219],{"class":176},[170,2367,1303],{"class":215},[170,2369,2283],{"class":176},[170,2371,2331],{"class":215},[18,2373,2374,2376],{},[22,2375],{},[22,2377],{},[13,2379,2381],{"id":2380},"map의-장점","Map의 장점",[29,2383,2384,2390,2396,2401],{},[32,2385,2386,2389],{},[35,2387,2388],{},"다양한 키 타입",": 객체는 문자열이나 심볼만 키로 사용할 수 있지만, Map은 어떤 타입이든 키로 사용 가능합니다.",[32,2391,2392,2395],{},[35,2393,2394],{},"순서 보장",": 삽입 순서가 보장되어 있어 순회할 때 예측 가능한 순서로 데이터를 얻을 수 있습니다.",[32,2397,2398,2400],{},[35,2399,125],{},": 빈번한 추가/삭제 작업에서 객체보다 더 나은 성능을 보입니다.",[32,2402,2403,2198,2406,2409],{},[35,2404,2405],{},"크기 확인",[167,2407,2408],{},"size"," 속성으로 쉽게 크기를 알 수 있습니다.",[18,2411,2412,2414],{},[22,2413],{},[22,2415],{},[13,2417,2418],{"id":2418},"주의사항",[29,2420,2421],{},[32,2422,2423],{},"JSON 직렬화가 되지 않습니다. Map을 JSON으로 변환하려면 별도의 변환 작업이 필요합니다:",[160,2425,2427],{"className":987,"code":2426,"language":989,"meta":165,"style":165},"const map = new Map([\n  [\"name\", \"홍길동\"],\n  [\"age\", 25],\n]);\n\n// Map을 JSON으로 변환\nconst json = JSON.stringify(Array.from(map.entries()));\n\n// JSON을 Map으로 변환\nconst map2 = new Map(JSON.parse(json));\n",[167,2428,2429,2443,2463,2479,2483,2487,2492,2522,2526,2531],{"__ignoreMap":165},[170,2430,2431,2433,2435,2437,2439,2441],{"class":172,"line":173},[170,2432,1001],{"class":211},[170,2434,1032],{"class":215},[170,2436,323],{"class":211},[170,2438,1010],{"class":1009},[170,2440,1013],{"class":176},[170,2442,1041],{"class":215},[170,2444,2445,2447,2449,2451,2453,2455,2457,2459,2461],{"class":172,"line":208},[170,2446,1046],{"class":215},[170,2448,229],{"class":222},[170,2450,1167],{"class":180},[170,2452,229],{"class":222},[170,2454,1056],{"class":215},[170,2456,229],{"class":222},[170,2458,1176],{"class":180},[170,2460,229],{"class":222},[170,2462,510],{"class":215},[170,2464,2465,2467,2469,2471,2473,2475,2477],{"class":172,"line":235},[170,2466,1046],{"class":215},[170,2468,229],{"class":222},[170,2470,1194],{"class":180},[170,2472,229],{"class":222},[170,2474,1056],{"class":215},[170,2476,1201],{"class":184},[170,2478,510],{"class":215},[170,2480,2481],{"class":172,"line":254},[170,2482,1124],{"class":215},[170,2484,2485],{"class":172,"line":261},[170,2486,258],{"emptyLinePlaceholder":257},[170,2488,2489],{"class":172,"line":276},[170,2490,2491],{"class":204},"// Map을 JSON으로 변환\n",[170,2493,2494,2496,2499,2501,2504,2507,2510,2513,2515,2517,2519],{"class":172,"line":294},[170,2495,1001],{"class":211},[170,2497,2498],{"class":215}," json ",[170,2500,323],{"class":211},[170,2502,2503],{"class":184}," JSON",[170,2505,2506],{"class":215},".",[170,2508,2509],{"class":176},"stringify",[170,2511,2512],{"class":215},"(Array.",[170,2514,219],{"class":176},[170,2516,1303],{"class":215},[170,2518,2328],{"class":176},[170,2520,2521],{"class":215},"()));\n",[170,2523,2524],{"class":172,"line":552},[170,2525,258],{"emptyLinePlaceholder":257},[170,2527,2528],{"class":172,"line":564},[170,2529,2530],{"class":204},"// JSON을 Map으로 변환\n",[170,2532,2533,2535,2538,2540,2542,2544,2546,2549,2551,2554],{"class":172,"line":570},[170,2534,1001],{"class":211},[170,2536,2537],{"class":215}," map2 ",[170,2539,323],{"class":211},[170,2541,1010],{"class":1009},[170,2543,1013],{"class":176},[170,2545,1162],{"class":215},[170,2547,2548],{"class":184},"JSON",[170,2550,2506],{"class":215},[170,2552,2553],{"class":176},"parse",[170,2555,2556],{"class":215},"(json));\n",[29,2558,2559],{"start":208},[32,2560,2561],{},"객체와 달리 Map은 프로토타입 체인의 영향을 받지 않습니다. 이는 보안상의 이점이 있습니다.",[18,2563,2564,2566],{},[22,2565],{},[22,2567],{},[897,2569,2570],{},"html pre.shiki code .si6LB, html code.shiki .si6LB{--shiki-default:#6272A4}html pre.shiki code .sRedq, html code.shiki .sRedq{--shiki-default:#FF79C6}html pre.shiki code .sddWA, html code.shiki .sddWA{--shiki-default:#F8F8F2}html pre.shiki code .sDz32, html code.shiki .sDz32{--shiki-default:#FF79C6;--shiki-default-font-weight:bold}html pre.shiki code .s57r0, html code.shiki .s57r0{--shiki-default:#50FA7B}html pre.shiki code .syA0A, html code.shiki .syA0A{--shiki-default:#E9F284}html pre.shiki code .shai9, html code.shiki .shai9{--shiki-default:#F1FA8C}html pre.shiki code .sjKgF, html code.shiki .sjKgF{--shiki-default:#BD93F9}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html pre.shiki code .sDXMj, html code.shiki .sDXMj{--shiki-default:#FFB86C;--shiki-default-font-style:italic}",{"title":165,"searchDepth":208,"depth":208,"links":2572},[2573,2574,2575,2582,2587,2588],{"id":950,"depth":208,"text":951},{"id":980,"depth":208,"text":981},{"id":1127,"depth":208,"text":1128,"children":2576},[2577,2578,2579,2580,2581],{"id":1131,"depth":235,"text":1132},{"id":1232,"depth":235,"text":1233},{"id":1346,"depth":235,"text":1347},{"id":1442,"depth":235,"text":1443},{"id":1552,"depth":235,"text":1553},{"id":1647,"depth":208,"text":1648,"children":2583},[2584,2585,2586],{"id":1651,"depth":235,"text":1652},{"id":1864,"depth":235,"text":1865},{"id":2067,"depth":235,"text":2068},{"id":2380,"depth":208,"text":2381},{"id":2418,"depth":208,"text":2418},"2025-04-03T00:00:00.000Z","자바스크립트의 Map 자료형에 대해 알아보고, 실제 사용 예시를 통해 이해해봅시다.",{},"/2025-04-03-data-type-map",{"title":929,"description":2590},"2025-04-03-data-type-map",[989,2596,2597,2598],"map","자료구조","프로그래밍","OXdmB9AdKO",{"id":2601,"title":2602,"body":2603,"date":3796,"description":3797,"extension":916,"image":917,"meta":3798,"navigation":257,"path":3799,"seo":3800,"stem":3801,"tags":3802,"__hash__":3803},"content/2025-04-02-data-type-set.md","자바스크립트 Set 자료형: 중복 없는 데이터 관리의 시작",{"type":10,"value":2604,"toc":3778},[2605,2613,2619,2623,2629,2635,2639,2642,2782,2786,2790,2861,2865,2930,2934,3023,3027,3078,3082,3086,3168,3172,3363,3367,3617,3623,3627,3646,3652,3654,3659,3755,3760,3766,3769,3772,3775],[18,2606,934,2607,938,2610,2612],{},[167,2608,2609],{},"Set",[22,2611],{},"\nSet은 중복을 허용하지 않는 값들의 집합을 다룰 때 매우 유용한 자료구조입니다.",[18,2614,2615,2617],{},[22,2616],{},[22,2618],{},[13,2620,2622],{"id":2621},"set이란-무엇인가요","Set이란 무엇인가요?",[18,2624,2625,2626,2628],{},"Set은 ES6(ECMAScript 2015)에서 도입된 새로운 자료구조로, 중복되지 않는 값들의 집합을 다룰 수 있게 해줍니다.",[22,2627],{},"\n배열과 비슷해 보이지만, Set은 값의 순서를 보장하지 않으며 중복된 값을 자동으로 제거한다는 특징이 있습니다.",[18,2630,2631,2633],{},[22,2632],{},[22,2634],{},[13,2636,2638],{"id":2637},"set-생성하기","Set 생성하기",[18,2640,2641],{},"Set을 만드는 방법은 매우 간단합니다:",[160,2643,2645],{"className":987,"code":2644,"language":989,"meta":165,"style":165},"// 빈 Set 생성\nconst emptySet = new Set();\n\n// 배열로부터 Set 생성\nconst numberSet = new Set([1, 2, 3, 3, 4, 4, 5]); // [1, 2, 3, 4, 5]\nconst fruitSet = new Set([\"사과\", \"바나나\", \"사과\", \"오렌지\"]); // ['사과', '바나나', '오렌지']\n",[167,2646,2647,2652,2668,2672,2677,2729],{"__ignoreMap":165},[170,2648,2649],{"class":172,"line":173},[170,2650,2651],{"class":204},"// 빈 Set 생성\n",[170,2653,2654,2656,2659,2661,2663,2666],{"class":172,"line":208},[170,2655,1001],{"class":211},[170,2657,2658],{"class":215}," emptySet ",[170,2660,323],{"class":211},[170,2662,1010],{"class":1009},[170,2664,2665],{"class":176}," Set",[170,2667,1016],{"class":215},[170,2669,2670],{"class":172,"line":235},[170,2671,258],{"emptyLinePlaceholder":257},[170,2673,2674],{"class":172,"line":254},[170,2675,2676],{"class":204},"// 배열로부터 Set 생성\n",[170,2678,2679,2681,2684,2686,2688,2690,2693,2695,2697,2700,2702,2705,2707,2709,2711,2714,2716,2718,2720,2723,2726],{"class":172,"line":261},[170,2680,1001],{"class":211},[170,2682,2683],{"class":215}," numberSet ",[170,2685,323],{"class":211},[170,2687,1010],{"class":1009},[170,2689,2665],{"class":176},[170,2691,2692],{"class":215},"([",[170,2694,1094],{"class":184},[170,2696,1056],{"class":215},[170,2698,2699],{"class":184},"2",[170,2701,1056],{"class":215},[170,2703,2704],{"class":184},"3",[170,2706,1056],{"class":215},[170,2708,2704],{"class":184},[170,2710,1056],{"class":215},[170,2712,2713],{"class":184},"4",[170,2715,1056],{"class":215},[170,2717,2713],{"class":184},[170,2719,1056],{"class":215},[170,2721,2722],{"class":184},"5",[170,2724,2725],{"class":215},"]); ",[170,2727,2728],{"class":204},"// [1, 2, 3, 4, 5]\n",[170,2730,2731,2733,2736,2738,2740,2742,2744,2746,2749,2751,2753,2755,2758,2760,2762,2764,2766,2768,2770,2772,2775,2777,2779],{"class":172,"line":276},[170,2732,1001],{"class":211},[170,2734,2735],{"class":215}," fruitSet ",[170,2737,323],{"class":211},[170,2739,1010],{"class":1009},[170,2741,2665],{"class":176},[170,2743,2692],{"class":215},[170,2745,229],{"class":222},[170,2747,2748],{"class":180},"사과",[170,2750,229],{"class":222},[170,2752,1056],{"class":215},[170,2754,229],{"class":222},[170,2756,2757],{"class":180},"바나나",[170,2759,229],{"class":222},[170,2761,1056],{"class":215},[170,2763,229],{"class":222},[170,2765,2748],{"class":180},[170,2767,229],{"class":222},[170,2769,1056],{"class":215},[170,2771,229],{"class":222},[170,2773,2774],{"class":180},"오렌지",[170,2776,229],{"class":222},[170,2778,2725],{"class":215},[170,2780,2781],{"class":204},"// ['사과', '바나나', '오렌지']\n",[13,2783,2785],{"id":2784},"set의-주요-메서드들","Set의 주요 메서드들",[156,2787,2789],{"id":2788},"_1-값-추가하기-add","1. 값 추가하기 (add)",[160,2791,2793],{"className":987,"code":2792,"language":989,"meta":165,"style":165},"const set = new Set();\nset.add(1);\nset.add(\"안녕하세요\");\nset.add({ name: \"홍길동\" });\n",[167,2794,2795,2810,2824,2841],{"__ignoreMap":165},[170,2796,2797,2799,2802,2804,2806,2808],{"class":172,"line":173},[170,2798,1001],{"class":211},[170,2800,2801],{"class":215}," set ",[170,2803,323],{"class":211},[170,2805,1010],{"class":1009},[170,2807,2665],{"class":176},[170,2809,1016],{"class":215},[170,2811,2812,2815,2818,2820,2822],{"class":172,"line":208},[170,2813,2814],{"class":215},"set.",[170,2816,2817],{"class":176},"add",[170,2819,1162],{"class":215},[170,2821,1094],{"class":184},[170,2823,1181],{"class":215},[170,2825,2826,2828,2830,2832,2834,2837,2839],{"class":172,"line":235},[170,2827,2814],{"class":215},[170,2829,2817],{"class":176},[170,2831,1162],{"class":215},[170,2833,229],{"class":222},[170,2835,2836],{"class":180},"안녕하세요",[170,2838,229],{"class":222},[170,2840,1181],{"class":215},[170,2842,2843,2845,2847,2850,2852,2854,2856,2858],{"class":172,"line":254},[170,2844,2814],{"class":215},[170,2846,2817],{"class":176},[170,2848,2849],{"class":215},"({ name",[170,2851,282],{"class":211},[170,2853,223],{"class":222},[170,2855,1176],{"class":180},[170,2857,229],{"class":222},[170,2859,2860],{"class":215}," });\n",[156,2862,2864],{"id":2863},"_2-값-삭제하기-delete","2. 값 삭제하기 (delete)",[160,2866,2868],{"className":987,"code":2867,"language":989,"meta":165,"style":165},"const set = new Set([1, 2, 3, 4, 5]);\nset.delete(3); // true 반환\nconsole.log(set); // Set(4) { 1, 2, 4, 5 }\n",[167,2869,2870,2904,2918],{"__ignoreMap":165},[170,2871,2872,2874,2876,2878,2880,2882,2884,2886,2888,2890,2892,2894,2896,2898,2900,2902],{"class":172,"line":173},[170,2873,1001],{"class":211},[170,2875,2801],{"class":215},[170,2877,323],{"class":211},[170,2879,1010],{"class":1009},[170,2881,2665],{"class":176},[170,2883,2692],{"class":215},[170,2885,1094],{"class":184},[170,2887,1056],{"class":215},[170,2889,2699],{"class":184},[170,2891,1056],{"class":215},[170,2893,2704],{"class":184},[170,2895,1056],{"class":215},[170,2897,2713],{"class":184},[170,2899,1056],{"class":215},[170,2901,2722],{"class":184},[170,2903,1124],{"class":215},[170,2905,2906,2908,2910,2912,2914,2916],{"class":172,"line":208},[170,2907,2814],{"class":215},[170,2909,1413],{"class":176},[170,2911,1162],{"class":215},[170,2913,2704],{"class":184},[170,2915,1424],{"class":215},[170,2917,1427],{"class":204},[170,2919,2920,2922,2924,2927],{"class":172,"line":235},[170,2921,1297],{"class":215},[170,2923,1300],{"class":176},[170,2925,2926],{"class":215},"(set); ",[170,2928,2929],{"class":204},"// Set(4) { 1, 2, 4, 5 }\n",[156,2931,2933],{"id":2932},"_3-값-확인하기-has","3. 값 확인하기 (has)",[160,2935,2937],{"className":987,"code":2936,"language":989,"meta":165,"style":165},"const set = new Set([\"사과\", \"바나나\", \"오렌지\"]);\nconsole.log(set.has(\"사과\")); // true\nconsole.log(set.has(\"포도\")); // false\n",[167,2938,2939,2977,3000],{"__ignoreMap":165},[170,2940,2941,2943,2945,2947,2949,2951,2953,2955,2957,2959,2961,2963,2965,2967,2969,2971,2973,2975],{"class":172,"line":173},[170,2942,1001],{"class":211},[170,2944,2801],{"class":215},[170,2946,323],{"class":211},[170,2948,1010],{"class":1009},[170,2950,2665],{"class":176},[170,2952,2692],{"class":215},[170,2954,229],{"class":222},[170,2956,2748],{"class":180},[170,2958,229],{"class":222},[170,2960,1056],{"class":215},[170,2962,229],{"class":222},[170,2964,2757],{"class":180},[170,2966,229],{"class":222},[170,2968,1056],{"class":215},[170,2970,229],{"class":222},[170,2972,2774],{"class":180},[170,2974,229],{"class":222},[170,2976,1124],{"class":215},[170,2978,2979,2981,2983,2986,2988,2990,2992,2994,2996,2998],{"class":172,"line":208},[170,2980,1297],{"class":215},[170,2982,1300],{"class":176},[170,2984,2985],{"class":215},"(set.",[170,2987,1513],{"class":176},[170,2989,1162],{"class":215},[170,2991,229],{"class":222},[170,2993,2748],{"class":180},[170,2995,229],{"class":222},[170,2997,1317],{"class":215},[170,2999,1526],{"class":204},[170,3001,3002,3004,3006,3008,3010,3012,3014,3017,3019,3021],{"class":172,"line":235},[170,3003,1297],{"class":215},[170,3005,1300],{"class":176},[170,3007,2985],{"class":215},[170,3009,1513],{"class":176},[170,3011,1162],{"class":215},[170,3013,229],{"class":222},[170,3015,3016],{"class":180},"포도",[170,3018,229],{"class":222},[170,3020,1317],{"class":215},[170,3022,1549],{"class":204},[156,3024,3026],{"id":3025},"_4-크기-확인하기-size","4. 크기 확인하기 (size)",[160,3028,3030],{"className":987,"code":3029,"language":989,"meta":165,"style":165},"const set = new Set([1, 2, 3, 4, 5]);\nconsole.log(set.size); // 5\n",[167,3031,3032,3066],{"__ignoreMap":165},[170,3033,3034,3036,3038,3040,3042,3044,3046,3048,3050,3052,3054,3056,3058,3060,3062,3064],{"class":172,"line":173},[170,3035,1001],{"class":211},[170,3037,2801],{"class":215},[170,3039,323],{"class":211},[170,3041,1010],{"class":1009},[170,3043,2665],{"class":176},[170,3045,2692],{"class":215},[170,3047,1094],{"class":184},[170,3049,1056],{"class":215},[170,3051,2699],{"class":184},[170,3053,1056],{"class":215},[170,3055,2704],{"class":184},[170,3057,1056],{"class":215},[170,3059,2713],{"class":184},[170,3061,1056],{"class":215},[170,3063,2722],{"class":184},[170,3065,1124],{"class":215},[170,3067,3068,3070,3072,3075],{"class":172,"line":208},[170,3069,1297],{"class":215},[170,3071,1300],{"class":176},[170,3073,3074],{"class":215},"(set.size); ",[170,3076,3077],{"class":204},"// 5\n",[13,3079,3081],{"id":3080},"set의-실제-활용-예시","Set의 실제 활용 예시",[156,3083,3085],{"id":3084},"_1-중복-제거하기","1. 중복 제거하기",[160,3087,3089],{"className":987,"code":3088,"language":989,"meta":165,"style":165},"const numbers = [1, 2, 2, 3, 3, 4, 5, 5];\nconst uniqueNumbers = [...new Set(numbers)];\nconsole.log(uniqueNumbers); // [1, 2, 3, 4, 5]\n",[167,3090,3091,3135,3157],{"__ignoreMap":165},[170,3092,3093,3095,3098,3100,3102,3104,3106,3108,3110,3112,3114,3116,3118,3120,3122,3124,3126,3128,3130,3132],{"class":172,"line":173},[170,3094,1001],{"class":211},[170,3096,3097],{"class":215}," numbers ",[170,3099,323],{"class":211},[170,3101,285],{"class":215},[170,3103,1094],{"class":184},[170,3105,1056],{"class":215},[170,3107,2699],{"class":184},[170,3109,1056],{"class":215},[170,3111,2699],{"class":184},[170,3113,1056],{"class":215},[170,3115,2704],{"class":184},[170,3117,1056],{"class":215},[170,3119,2704],{"class":184},[170,3121,1056],{"class":215},[170,3123,2713],{"class":184},[170,3125,1056],{"class":215},[170,3127,2722],{"class":184},[170,3129,1056],{"class":215},[170,3131,2722],{"class":184},[170,3133,3134],{"class":215},"];\n",[170,3136,3137,3139,3142,3144,3146,3149,3152,3154],{"class":172,"line":208},[170,3138,1001],{"class":211},[170,3140,3141],{"class":215}," uniqueNumbers ",[170,3143,323],{"class":211},[170,3145,285],{"class":215},[170,3147,3148],{"class":211},"...",[170,3150,3151],{"class":1009},"new",[170,3153,2665],{"class":176},[170,3155,3156],{"class":215},"(numbers)];\n",[170,3158,3159,3161,3163,3166],{"class":172,"line":235},[170,3160,1297],{"class":215},[170,3162,1300],{"class":176},[170,3164,3165],{"class":215},"(uniqueNumbers); ",[170,3167,2728],{"class":204},[156,3169,3171],{"id":3170},"_2-유니크한-사용자-id-관리","2. 유니크한 사용자 ID 관리",[160,3173,3175],{"className":987,"code":3174,"language":989,"meta":165,"style":165},"const activeUsers = new Set();\n\nfunction userLogin(userId) {\n  activeUsers.add(userId);\n  console.log(`${userId}님이 로그인했습니다.`);\n}\n\nfunction userLogout(userId) {\n  activeUsers.delete(userId);\n  console.log(`${userId}님이 로그아웃했습니다.`);\n}\n\nuserLogin(\"user1\"); // user1님이 로그인했습니다.\nuserLogin(\"user2\"); // user2님이 로그인했습니다.\nuserLogin(\"user1\"); // user1님이 로그인했습니다. (중복 추가는 무시됨)\nconsole.log(activeUsers.size); // 2\n",[167,3176,3177,3192,3196,3209,3218,3239,3243,3247,3260,3268,3289,3293,3297,3316,3334,3351],{"__ignoreMap":165},[170,3178,3179,3181,3184,3186,3188,3190],{"class":172,"line":173},[170,3180,1001],{"class":211},[170,3182,3183],{"class":215}," activeUsers ",[170,3185,323],{"class":211},[170,3187,1010],{"class":1009},[170,3189,2665],{"class":176},[170,3191,1016],{"class":215},[170,3193,3194],{"class":172,"line":208},[170,3195,258],{"emptyLinePlaceholder":257},[170,3197,3198,3200,3203,3205,3207],{"class":172,"line":235},[170,3199,1681],{"class":211},[170,3201,3202],{"class":176}," userLogin",[170,3204,1162],{"class":215},[170,3206,1690],{"class":1689},[170,3208,1698],{"class":215},[170,3210,3211,3214,3216],{"class":172,"line":254},[170,3212,3213],{"class":215},"  activeUsers.",[170,3215,2817],{"class":176},[170,3217,1788],{"class":215},[170,3219,3220,3222,3224,3226,3228,3230,3232,3234,3237],{"class":172,"line":261},[170,3221,2180],{"class":215},[170,3223,1300],{"class":176},[170,3225,1162],{"class":215},[170,3227,2187],{"class":180},[170,3229,2190],{"class":211},[170,3231,1690],{"class":215},[170,3233,2195],{"class":211},[170,3235,3236],{"class":180},"님이 로그인했습니다.`",[170,3238,1181],{"class":215},[170,3240,3241],{"class":172,"line":276},[170,3242,792],{"class":215},[170,3244,3245],{"class":172,"line":294},[170,3246,258],{"emptyLinePlaceholder":257},[170,3248,3249,3251,3254,3256,3258],{"class":172,"line":552},[170,3250,1681],{"class":211},[170,3252,3253],{"class":176}," userLogout",[170,3255,1162],{"class":215},[170,3257,1690],{"class":1689},[170,3259,1698],{"class":215},[170,3261,3262,3264,3266],{"class":172,"line":564},[170,3263,3213],{"class":215},[170,3265,1413],{"class":176},[170,3267,1788],{"class":215},[170,3269,3270,3272,3274,3276,3278,3280,3282,3284,3287],{"class":172,"line":570},[170,3271,2180],{"class":215},[170,3273,1300],{"class":176},[170,3275,1162],{"class":215},[170,3277,2187],{"class":180},[170,3279,2190],{"class":211},[170,3281,1690],{"class":215},[170,3283,2195],{"class":211},[170,3285,3286],{"class":180},"님이 로그아웃했습니다.`",[170,3288,1181],{"class":215},[170,3290,3291],{"class":172,"line":581},[170,3292,792],{"class":215},[170,3294,3295],{"class":172,"line":4},[170,3296,258],{"emptyLinePlaceholder":257},[170,3298,3299,3302,3304,3306,3309,3311,3313],{"class":172,"line":605},[170,3300,3301],{"class":176},"userLogin",[170,3303,1162],{"class":215},[170,3305,229],{"class":222},[170,3307,3308],{"class":180},"user1",[170,3310,229],{"class":222},[170,3312,1424],{"class":215},[170,3314,3315],{"class":204},"// user1님이 로그인했습니다.\n",[170,3317,3318,3320,3322,3324,3327,3329,3331],{"class":172,"line":617},[170,3319,3301],{"class":176},[170,3321,1162],{"class":215},[170,3323,229],{"class":222},[170,3325,3326],{"class":180},"user2",[170,3328,229],{"class":222},[170,3330,1424],{"class":215},[170,3332,3333],{"class":204},"// user2님이 로그인했습니다.\n",[170,3335,3336,3338,3340,3342,3344,3346,3348],{"class":172,"line":623},[170,3337,3301],{"class":176},[170,3339,1162],{"class":215},[170,3341,229],{"class":222},[170,3343,3308],{"class":180},[170,3345,229],{"class":222},[170,3347,1424],{"class":215},[170,3349,3350],{"class":204},"// user1님이 로그인했습니다. (중복 추가는 무시됨)\n",[170,3352,3353,3355,3357,3360],{"class":172,"line":629},[170,3354,1297],{"class":215},[170,3356,1300],{"class":176},[170,3358,3359],{"class":215},"(activeUsers.size); ",[170,3361,3362],{"class":204},"// 2\n",[156,3364,3366],{"id":3365},"_3-교집합-합집합-차집합-구현","3. 교집합, 합집합, 차집합 구현",[160,3368,3370],{"className":987,"code":3369,"language":989,"meta":165,"style":165},"const setA = new Set([1, 2, 3, 4]);\nconst setB = new Set([3, 4, 5, 6]);\n\n// 합집합\nconst union = new Set([...setA, ...setB]);\nconsole.log([...union]); // [1, 2, 3, 4, 5, 6]\n\n// 교집합\nconst intersection = new Set([...setA].filter((x) => setB.has(x)));\nconsole.log([...intersection]); // [3, 4]\n\n// 차집합\nconst difference = new Set([...setA].filter((x) => !setB.has(x)));\nconsole.log([...difference]); // [1, 2]\n",[167,3371,3372,3403,3435,3439,3444,3469,3485,3489,3494,3537,3553,3557,3562,3601],{"__ignoreMap":165},[170,3373,3374,3376,3379,3381,3383,3385,3387,3389,3391,3393,3395,3397,3399,3401],{"class":172,"line":173},[170,3375,1001],{"class":211},[170,3377,3378],{"class":215}," setA ",[170,3380,323],{"class":211},[170,3382,1010],{"class":1009},[170,3384,2665],{"class":176},[170,3386,2692],{"class":215},[170,3388,1094],{"class":184},[170,3390,1056],{"class":215},[170,3392,2699],{"class":184},[170,3394,1056],{"class":215},[170,3396,2704],{"class":184},[170,3398,1056],{"class":215},[170,3400,2713],{"class":184},[170,3402,1124],{"class":215},[170,3404,3405,3407,3410,3412,3414,3416,3418,3420,3422,3424,3426,3428,3430,3433],{"class":172,"line":208},[170,3406,1001],{"class":211},[170,3408,3409],{"class":215}," setB ",[170,3411,323],{"class":211},[170,3413,1010],{"class":1009},[170,3415,2665],{"class":176},[170,3417,2692],{"class":215},[170,3419,2704],{"class":184},[170,3421,1056],{"class":215},[170,3423,2713],{"class":184},[170,3425,1056],{"class":215},[170,3427,2722],{"class":184},[170,3429,1056],{"class":215},[170,3431,3432],{"class":184},"6",[170,3434,1124],{"class":215},[170,3436,3437],{"class":172,"line":235},[170,3438,258],{"emptyLinePlaceholder":257},[170,3440,3441],{"class":172,"line":254},[170,3442,3443],{"class":204},"// 합집합\n",[170,3445,3446,3448,3451,3453,3455,3457,3459,3461,3464,3466],{"class":172,"line":261},[170,3447,1001],{"class":211},[170,3449,3450],{"class":215}," union ",[170,3452,323],{"class":211},[170,3454,1010],{"class":1009},[170,3456,2665],{"class":176},[170,3458,2692],{"class":215},[170,3460,3148],{"class":211},[170,3462,3463],{"class":215},"setA, ",[170,3465,3148],{"class":211},[170,3467,3468],{"class":215},"setB]);\n",[170,3470,3471,3473,3475,3477,3479,3482],{"class":172,"line":276},[170,3472,1297],{"class":215},[170,3474,1300],{"class":176},[170,3476,2692],{"class":215},[170,3478,3148],{"class":211},[170,3480,3481],{"class":215},"union]); ",[170,3483,3484],{"class":204},"// [1, 2, 3, 4, 5, 6]\n",[170,3486,3487],{"class":172,"line":294},[170,3488,258],{"emptyLinePlaceholder":257},[170,3490,3491],{"class":172,"line":552},[170,3492,3493],{"class":204},"// 교집합\n",[170,3495,3496,3498,3501,3503,3505,3507,3509,3511,3514,3517,3520,3523,3526,3529,3532,3534],{"class":172,"line":564},[170,3497,1001],{"class":211},[170,3499,3500],{"class":215}," intersection ",[170,3502,323],{"class":211},[170,3504,1010],{"class":1009},[170,3506,2665],{"class":176},[170,3508,2692],{"class":215},[170,3510,3148],{"class":211},[170,3512,3513],{"class":215},"setA].",[170,3515,3516],{"class":176},"filter",[170,3518,3519],{"class":215},"((",[170,3521,3522],{"class":1689},"x",[170,3524,3525],{"class":215},") ",[170,3527,3528],{"class":211},"=>",[170,3530,3531],{"class":215}," setB.",[170,3533,1513],{"class":176},[170,3535,3536],{"class":215},"(x)));\n",[170,3538,3539,3541,3543,3545,3547,3550],{"class":172,"line":570},[170,3540,1297],{"class":215},[170,3542,1300],{"class":176},[170,3544,2692],{"class":215},[170,3546,3148],{"class":211},[170,3548,3549],{"class":215},"intersection]); ",[170,3551,3552],{"class":204},"// [3, 4]\n",[170,3554,3555],{"class":172,"line":581},[170,3556,258],{"emptyLinePlaceholder":257},[170,3558,3559],{"class":172,"line":4},[170,3560,3561],{"class":204},"// 차집합\n",[170,3563,3564,3566,3569,3571,3573,3575,3577,3579,3581,3583,3585,3587,3589,3591,3594,3597,3599],{"class":172,"line":605},[170,3565,1001],{"class":211},[170,3567,3568],{"class":215}," difference ",[170,3570,323],{"class":211},[170,3572,1010],{"class":1009},[170,3574,2665],{"class":176},[170,3576,2692],{"class":215},[170,3578,3148],{"class":211},[170,3580,3513],{"class":215},[170,3582,3516],{"class":176},[170,3584,3519],{"class":215},[170,3586,3522],{"class":1689},[170,3588,3525],{"class":215},[170,3590,3528],{"class":211},[170,3592,3593],{"class":211}," !",[170,3595,3596],{"class":215},"setB.",[170,3598,1513],{"class":176},[170,3600,3536],{"class":215},[170,3602,3603,3605,3607,3609,3611,3614],{"class":172,"line":617},[170,3604,1297],{"class":215},[170,3606,1300],{"class":176},[170,3608,2692],{"class":215},[170,3610,3148],{"class":211},[170,3612,3613],{"class":215},"difference]); ",[170,3615,3616],{"class":204},"// [1, 2]\n",[18,3618,3619,3621],{},[22,3620],{},[22,3622],{},[13,3624,3626],{"id":3625},"set의-장점","Set의 장점",[29,3628,3629,3635,3640],{},[32,3630,3631,3634],{},[35,3632,3633],{},"중복 제거",": 자동으로 중복된 값을 제거합니다.",[32,3636,3637,3639],{},[35,3638,125],{},": 값의 존재 여부를 확인하는 작업이 배열보다 빠릅니다.",[32,3641,3642,3645],{},[35,3643,3644],{},"간단한 API",": 직관적이고 사용하기 쉬운 메서드들을 제공합니다.",[18,3647,3648,3650],{},[22,3649],{},[22,3651],{},[13,3653,2418],{"id":2418},[29,3655,3656],{},[32,3657,3658],{},"Set은 객체 참조를 저장할 때도 중복을 체크합니다:",[160,3660,3662],{"className":987,"code":3661,"language":989,"meta":165,"style":165},"const set = new Set();\nconst obj1 = { name: \"홍길동\" };\nconst obj2 = { name: \"홍길동\" };\n\nset.add(obj1);\nset.add(obj2);\nconsole.log(set.size); // 2 (다른 객체로 인식)\n",[167,3663,3664,3678,3701,3722,3726,3735,3744],{"__ignoreMap":165},[170,3665,3666,3668,3670,3672,3674,3676],{"class":172,"line":173},[170,3667,1001],{"class":211},[170,3669,2801],{"class":215},[170,3671,323],{"class":211},[170,3673,1010],{"class":1009},[170,3675,2665],{"class":176},[170,3677,1016],{"class":215},[170,3679,3680,3682,3685,3687,3690,3692,3694,3696,3698],{"class":172,"line":208},[170,3681,1001],{"class":211},[170,3683,3684],{"class":215}," obj1 ",[170,3686,323],{"class":211},[170,3688,3689],{"class":215}," { name",[170,3691,282],{"class":211},[170,3693,223],{"class":222},[170,3695,1176],{"class":180},[170,3697,229],{"class":222},[170,3699,3700],{"class":215}," };\n",[170,3702,3703,3705,3708,3710,3712,3714,3716,3718,3720],{"class":172,"line":235},[170,3704,1001],{"class":211},[170,3706,3707],{"class":215}," obj2 ",[170,3709,323],{"class":211},[170,3711,3689],{"class":215},[170,3713,282],{"class":211},[170,3715,223],{"class":222},[170,3717,1176],{"class":180},[170,3719,229],{"class":222},[170,3721,3700],{"class":215},[170,3723,3724],{"class":172,"line":254},[170,3725,258],{"emptyLinePlaceholder":257},[170,3727,3728,3730,3732],{"class":172,"line":261},[170,3729,2814],{"class":215},[170,3731,2817],{"class":176},[170,3733,3734],{"class":215},"(obj1);\n",[170,3736,3737,3739,3741],{"class":172,"line":276},[170,3738,2814],{"class":215},[170,3740,2817],{"class":176},[170,3742,3743],{"class":215},"(obj2);\n",[170,3745,3746,3748,3750,3752],{"class":172,"line":294},[170,3747,1297],{"class":215},[170,3749,1300],{"class":176},[170,3751,3074],{"class":215},[170,3753,3754],{"class":204},"// 2 (다른 객체로 인식)\n",[29,3756,3757],{"start":208},[32,3758,3759],{},"Set은 순서를 보장하지 않습니다. 순서가 중요한 경우에는 배열을 사용하는 것이 좋습니다.",[18,3761,3762,3764],{},[22,3763],{},[22,3765],{},[13,3767,3768],{"id":3768},"마치며",[18,3770,3771],{},"Set은 중복 없는 데이터를 다룰 때 매우 유용한 자료구조입니다. 특히 사용자 ID 관리, 태그 관리, 중복 제거 등 다양한 상황에서 활용할 수 있습니다. 이제 여러분의 코드에서도 Set을 활용해보세요! 😊",[18,3773,3774],{},"더 자세한 내용이나 궁금한 점이 있다면 댓글로 남겨주세요. 함께 공부해요! 💪",[897,3776,3777],{},"html pre.shiki code .si6LB, html code.shiki .si6LB{--shiki-default:#6272A4}html pre.shiki code .sRedq, html code.shiki .sRedq{--shiki-default:#FF79C6}html pre.shiki code .sddWA, html code.shiki .sddWA{--shiki-default:#F8F8F2}html pre.shiki code .sDz32, html code.shiki .sDz32{--shiki-default:#FF79C6;--shiki-default-font-weight:bold}html pre.shiki code .s57r0, html code.shiki .s57r0{--shiki-default:#50FA7B}html pre.shiki code .sjKgF, html code.shiki .sjKgF{--shiki-default:#BD93F9}html pre.shiki code .syA0A, html code.shiki .syA0A{--shiki-default:#E9F284}html pre.shiki code .shai9, html code.shiki .shai9{--shiki-default:#F1FA8C}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html pre.shiki code .sDXMj, html code.shiki .sDXMj{--shiki-default:#FFB86C;--shiki-default-font-style:italic}",{"title":165,"searchDepth":208,"depth":208,"links":3779},[3780,3781,3782,3788,3793,3794,3795],{"id":2621,"depth":208,"text":2622},{"id":2637,"depth":208,"text":2638},{"id":2784,"depth":208,"text":2785,"children":3783},[3784,3785,3786,3787],{"id":2788,"depth":235,"text":2789},{"id":2863,"depth":235,"text":2864},{"id":2932,"depth":235,"text":2933},{"id":3025,"depth":235,"text":3026},{"id":3080,"depth":208,"text":3081,"children":3789},[3790,3791,3792],{"id":3084,"depth":235,"text":3085},{"id":3170,"depth":235,"text":3171},{"id":3365,"depth":235,"text":3366},{"id":3625,"depth":208,"text":3626},{"id":2418,"depth":208,"text":2418},{"id":3768,"depth":208,"text":3768},"2025-04-02T00:00:00.000Z","자바스크립트의 Set 자료형에 대해 알아보고, 실제 사용 예시를 통해 이해해봅시다.",{},"/2025-04-02-data-type-set",{"title":2602,"description":3797},"2025-04-02-data-type-set",[989,1159,2597,2598],"13BBAXaaBg",{"id":3805,"title":3806,"body":3807,"date":4431,"description":4432,"extension":916,"image":917,"meta":4433,"navigation":257,"path":4434,"seo":4435,"stem":4436,"tags":4437,"__hash__":4441},"content/2025-04-01-async-await.md","JavaScript의 async/await 이해하기",{"type":10,"value":3808,"toc":4422},[3809,3812,3816,3819,3823,3826,3862,3866,3869,3939,3943,3946,4053,4057,4060,4251,4255,4258,4410,4413,4416,4419],[18,3810,3811],{},"JavaScript에서 비동기 프로그래밍을 처리하는 방법은 시간이 지날수록 더욱 발전해왔습니다. 콜백 함수에서 Promise, 그리고 현재 널리 사용되는 async/await까지. 이번 포스트에서는 async/await의 개념과 사용법에 대해 자세히 살펴보겠습니다.",[13,3813,3815],{"id":3814},"asyncawait란","async/await란?",[18,3817,3818],{},"async/await는 Promise를 기반으로 한 문법적 설탕(syntactic sugar)입니다. 비동기 코드를 동기 코드처럼 보이게 만들어주어 코드의 가독성과 유지보수성을 크게 향상시킵니다.",[13,3820,3822],{"id":3821},"async-함수","async 함수",[18,3824,3825],{},"async 키워드는 함수 선언 앞에 붙여서 사용합니다. 이 함수는 항상 Promise를 반환합니다.",[160,3827,3829],{"className":987,"code":3828,"language":989,"meta":165,"style":165},"async function fetchData() {\n  return \"데이터\";\n}\n",[167,3830,3831,3845,3858],{"__ignoreMap":165},[170,3832,3833,3836,3839,3842],{"class":172,"line":173},[170,3834,3835],{"class":211},"async",[170,3837,3838],{"class":211}," function",[170,3840,3841],{"class":176}," fetchData",[170,3843,3844],{"class":215},"() {\n",[170,3846,3847,3849,3851,3854,3856],{"class":172,"line":208},[170,3848,1996],{"class":211},[170,3850,223],{"class":222},[170,3852,3853],{"class":180},"데이터",[170,3855,229],{"class":222},[170,3857,232],{"class":215},[170,3859,3860],{"class":172,"line":235},[170,3861,792],{"class":215},[13,3863,3865],{"id":3864},"await-키워드","await 키워드",[18,3867,3868],{},"await는 async 함수 내부에서만 사용할 수 있으며, Promise가 resolve될 때까지 기다립니다.",[160,3870,3872],{"className":987,"code":3871,"language":989,"meta":165,"style":165},"async function getUserData() {\n  const response = await fetch(\"https://api.example.com/user\");\n  const data = await response.json();\n  return data;\n}\n",[167,3873,3874,3885,3911,3929,3935],{"__ignoreMap":165},[170,3875,3876,3878,3880,3883],{"class":172,"line":173},[170,3877,3835],{"class":211},[170,3879,3838],{"class":211},[170,3881,3882],{"class":176}," getUserData",[170,3884,3844],{"class":215},[170,3886,3887,3889,3892,3894,3897,3900,3902,3904,3907,3909],{"class":172,"line":208},[170,3888,1775],{"class":211},[170,3890,3891],{"class":215}," response ",[170,3893,323],{"class":211},[170,3895,3896],{"class":211}," await",[170,3898,3899],{"class":176}," fetch",[170,3901,1162],{"class":215},[170,3903,229],{"class":222},[170,3905,3906],{"class":180},"https://api.example.com/user",[170,3908,229],{"class":222},[170,3910,1181],{"class":215},[170,3912,3913,3915,3918,3920,3922,3925,3927],{"class":172,"line":235},[170,3914,1775],{"class":211},[170,3916,3917],{"class":215}," data ",[170,3919,323],{"class":211},[170,3921,3896],{"class":211},[170,3923,3924],{"class":215}," response.",[170,3926,736],{"class":176},[170,3928,1016],{"class":215},[170,3930,3931,3933],{"class":172,"line":254},[170,3932,1996],{"class":211},[170,3934,1973],{"class":215},[170,3936,3937],{"class":172,"line":261},[170,3938,792],{"class":215},[13,3940,3942],{"id":3941},"에러-처리","에러 처리",[18,3944,3945],{},"try/catch 구문을 사용하여 async/await의 에러를 처리할 수 있습니다.",[160,3947,3949],{"className":987,"code":3948,"language":989,"meta":165,"style":165},"async function fetchUserData() {\n  try {\n    const response = await fetch(\"https://api.example.com/user\");\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(\"데이터를 가져오는데 실패했습니다:\", error);\n  }\n}\n",[167,3950,3951,3962,3969,3991,4007,4014,4025,4045,4049],{"__ignoreMap":165},[170,3952,3953,3955,3957,3960],{"class":172,"line":173},[170,3954,3835],{"class":211},[170,3956,3838],{"class":211},[170,3958,3959],{"class":176}," fetchUserData",[170,3961,3844],{"class":215},[170,3963,3964,3967],{"class":172,"line":208},[170,3965,3966],{"class":211},"  try",[170,3968,520],{"class":215},[170,3970,3971,3973,3975,3977,3979,3981,3983,3985,3987,3989],{"class":172,"line":235},[170,3972,1920],{"class":211},[170,3974,3891],{"class":215},[170,3976,323],{"class":211},[170,3978,3896],{"class":211},[170,3980,3899],{"class":176},[170,3982,1162],{"class":215},[170,3984,229],{"class":222},[170,3986,3906],{"class":180},[170,3988,229],{"class":222},[170,3990,1181],{"class":215},[170,3992,3993,3995,3997,3999,4001,4003,4005],{"class":172,"line":254},[170,3994,1920],{"class":211},[170,3996,3917],{"class":215},[170,3998,323],{"class":211},[170,4000,3896],{"class":211},[170,4002,3924],{"class":215},[170,4004,736],{"class":176},[170,4006,1016],{"class":215},[170,4008,4009,4012],{"class":172,"line":261},[170,4010,4011],{"class":211},"    return",[170,4013,1973],{"class":215},[170,4015,4016,4019,4022],{"class":172,"line":276},[170,4017,4018],{"class":215},"  } ",[170,4020,4021],{"class":211},"catch",[170,4023,4024],{"class":215}," (error) {\n",[170,4026,4027,4030,4033,4035,4037,4040,4042],{"class":172,"line":294},[170,4028,4029],{"class":215},"    console.",[170,4031,4032],{"class":176},"error",[170,4034,1162],{"class":215},[170,4036,229],{"class":222},[170,4038,4039],{"class":180},"데이터를 가져오는데 실패했습니다:",[170,4041,229],{"class":222},[170,4043,4044],{"class":215},", error);\n",[170,4046,4047],{"class":172,"line":552},[170,4048,787],{"class":215},[170,4050,4051],{"class":172,"line":564},[170,4052,792],{"class":215},[13,4054,4056],{"id":4055},"promise와의-비교","Promise와의 비교",[18,4058,4059],{},"async/await를 사용하면 Promise 체인보다 더 읽기 쉽고 이해하기 쉬운 코드를 작성할 수 있습니다.",[160,4061,4063],{"className":987,"code":4062,"language":989,"meta":165,"style":165},"// Promise 체인\nfetch(\"https://api.example.com/user\")\n  .then((response) => response.json())\n  .then((data) => console.log(data))\n  .catch((error) => console.error(error));\n\n// async/await\nasync function getUser() {\n  try {\n    const response = await fetch(\"https://api.example.com/user\");\n    const data = await response.json();\n    console.log(data);\n  } catch (error) {\n    console.error(error);\n  }\n}\n",[167,4064,4065,4070,4086,4110,4132,4153,4157,4162,4173,4179,4201,4217,4226,4234,4243,4247],{"__ignoreMap":165},[170,4066,4067],{"class":172,"line":173},[170,4068,4069],{"class":204},"// Promise 체인\n",[170,4071,4072,4075,4077,4079,4081,4083],{"class":172,"line":208},[170,4073,4074],{"class":176},"fetch",[170,4076,1162],{"class":215},[170,4078,229],{"class":222},[170,4080,3906],{"class":180},[170,4082,229],{"class":222},[170,4084,4085],{"class":215},")\n",[170,4087,4088,4091,4094,4096,4099,4101,4103,4105,4107],{"class":172,"line":235},[170,4089,4090],{"class":215},"  .",[170,4092,4093],{"class":176},"then",[170,4095,3519],{"class":215},[170,4097,4098],{"class":1689},"response",[170,4100,3525],{"class":215},[170,4102,3528],{"class":211},[170,4104,3924],{"class":215},[170,4106,736],{"class":176},[170,4108,4109],{"class":215},"())\n",[170,4111,4112,4114,4116,4118,4120,4122,4124,4127,4129],{"class":172,"line":254},[170,4113,4090],{"class":215},[170,4115,4093],{"class":176},[170,4117,3519],{"class":215},[170,4119,2025],{"class":1689},[170,4121,3525],{"class":215},[170,4123,3528],{"class":211},[170,4125,4126],{"class":215}," console.",[170,4128,1300],{"class":176},[170,4130,4131],{"class":215},"(data))\n",[170,4133,4134,4136,4138,4140,4142,4144,4146,4148,4150],{"class":172,"line":261},[170,4135,4090],{"class":215},[170,4137,4021],{"class":176},[170,4139,3519],{"class":215},[170,4141,4032],{"class":1689},[170,4143,3525],{"class":215},[170,4145,3528],{"class":211},[170,4147,4126],{"class":215},[170,4149,4032],{"class":176},[170,4151,4152],{"class":215},"(error));\n",[170,4154,4155],{"class":172,"line":276},[170,4156,258],{"emptyLinePlaceholder":257},[170,4158,4159],{"class":172,"line":294},[170,4160,4161],{"class":204},"// async/await\n",[170,4163,4164,4166,4168,4171],{"class":172,"line":552},[170,4165,3835],{"class":211},[170,4167,3838],{"class":211},[170,4169,4170],{"class":176}," getUser",[170,4172,3844],{"class":215},[170,4174,4175,4177],{"class":172,"line":564},[170,4176,3966],{"class":211},[170,4178,520],{"class":215},[170,4180,4181,4183,4185,4187,4189,4191,4193,4195,4197,4199],{"class":172,"line":570},[170,4182,1920],{"class":211},[170,4184,3891],{"class":215},[170,4186,323],{"class":211},[170,4188,3896],{"class":211},[170,4190,3899],{"class":176},[170,4192,1162],{"class":215},[170,4194,229],{"class":222},[170,4196,3906],{"class":180},[170,4198,229],{"class":222},[170,4200,1181],{"class":215},[170,4202,4203,4205,4207,4209,4211,4213,4215],{"class":172,"line":581},[170,4204,1920],{"class":211},[170,4206,3917],{"class":215},[170,4208,323],{"class":211},[170,4210,3896],{"class":211},[170,4212,3924],{"class":215},[170,4214,736],{"class":176},[170,4216,1016],{"class":215},[170,4218,4219,4221,4223],{"class":172,"line":4},[170,4220,4029],{"class":215},[170,4222,1300],{"class":176},[170,4224,4225],{"class":215},"(data);\n",[170,4227,4228,4230,4232],{"class":172,"line":605},[170,4229,4018],{"class":215},[170,4231,4021],{"class":211},[170,4233,4024],{"class":215},[170,4235,4236,4238,4240],{"class":172,"line":617},[170,4237,4029],{"class":215},[170,4239,4032],{"class":176},[170,4241,4242],{"class":215},"(error);\n",[170,4244,4245],{"class":172,"line":623},[170,4246,787],{"class":215},[170,4248,4249],{"class":172,"line":629},[170,4250,792],{"class":215},[13,4252,4254],{"id":4253},"병렬-실행","병렬 실행",[18,4256,4257],{},"여러 비동기 작업을 병렬로 실행하려면 Promise.all()을 사용할 수 있습니다.",[160,4259,4261],{"className":987,"code":4260,"language":989,"meta":165,"style":165},"async function fetchMultipleData() {\n  const [users, posts, comments] = await Promise.all([\n    fetch(\"/api/users\").then((res) => res.json()),\n    fetch(\"/api/posts\").then((res) => res.json()),\n    fetch(\"/api/comments\").then((res) => res.json()),\n  ]);\n  return { users, posts, comments };\n}\n",[167,4262,4263,4274,4296,4332,4363,4394,4399,4406],{"__ignoreMap":165},[170,4264,4265,4267,4269,4272],{"class":172,"line":173},[170,4266,3835],{"class":211},[170,4268,3838],{"class":211},[170,4270,4271],{"class":176}," fetchMultipleData",[170,4273,3844],{"class":215},[170,4275,4276,4278,4281,4283,4285,4289,4291,4294],{"class":172,"line":208},[170,4277,1775],{"class":211},[170,4279,4280],{"class":215}," [users, posts, comments] ",[170,4282,323],{"class":211},[170,4284,3896],{"class":211},[170,4286,4288],{"class":4287},"s40py"," Promise",[170,4290,2506],{"class":215},[170,4292,4293],{"class":176},"all",[170,4295,1041],{"class":215},[170,4297,4298,4301,4303,4305,4308,4310,4313,4315,4317,4320,4322,4324,4327,4329],{"class":172,"line":235},[170,4299,4300],{"class":176},"    fetch",[170,4302,1162],{"class":215},[170,4304,229],{"class":222},[170,4306,4307],{"class":180},"/api/users",[170,4309,229],{"class":222},[170,4311,4312],{"class":215},").",[170,4314,4093],{"class":176},[170,4316,3519],{"class":215},[170,4318,4319],{"class":1689},"res",[170,4321,3525],{"class":215},[170,4323,3528],{"class":211},[170,4325,4326],{"class":215}," res.",[170,4328,736],{"class":176},[170,4330,4331],{"class":215},"()),\n",[170,4333,4334,4336,4338,4340,4343,4345,4347,4349,4351,4353,4355,4357,4359,4361],{"class":172,"line":254},[170,4335,4300],{"class":176},[170,4337,1162],{"class":215},[170,4339,229],{"class":222},[170,4341,4342],{"class":180},"/api/posts",[170,4344,229],{"class":222},[170,4346,4312],{"class":215},[170,4348,4093],{"class":176},[170,4350,3519],{"class":215},[170,4352,4319],{"class":1689},[170,4354,3525],{"class":215},[170,4356,3528],{"class":211},[170,4358,4326],{"class":215},[170,4360,736],{"class":176},[170,4362,4331],{"class":215},[170,4364,4365,4367,4369,4371,4374,4376,4378,4380,4382,4384,4386,4388,4390,4392],{"class":172,"line":261},[170,4366,4300],{"class":176},[170,4368,1162],{"class":215},[170,4370,229],{"class":222},[170,4372,4373],{"class":180},"/api/comments",[170,4375,229],{"class":222},[170,4377,4312],{"class":215},[170,4379,4093],{"class":176},[170,4381,3519],{"class":215},[170,4383,4319],{"class":1689},[170,4385,3525],{"class":215},[170,4387,3528],{"class":211},[170,4389,4326],{"class":215},[170,4391,736],{"class":176},[170,4393,4331],{"class":215},[170,4395,4396],{"class":172,"line":276},[170,4397,4398],{"class":215},"  ]);\n",[170,4400,4401,4403],{"class":172,"line":294},[170,4402,1996],{"class":211},[170,4404,4405],{"class":215}," { users, posts, comments };\n",[170,4407,4408],{"class":172,"line":552},[170,4409,792],{"class":215},[13,4411,4412],{"id":4412},"결론",[18,4414,4415],{},"async/await는 JavaScript의 비동기 프로그래밍을 더욱 직관적이고 관리하기 쉽게 만들어주는 강력한 도구입니다. Promise를 기반으로 하면서도, 동기 코드처럼 보이는 비동기 코드를 작성할 수 있게 해주어 개발자들의 생산성을 크게 향상시킵니다.",[18,4417,4418],{},"이 문법을 적절히 활용하면 복잡한 비동기 로직도 깔끔하고 이해하기 쉽게 구현할 수 있습니다.",[897,4420,4421],{},"html pre.shiki code .sRedq, html code.shiki .sRedq{--shiki-default:#FF79C6}html pre.shiki code .s57r0, html code.shiki .s57r0{--shiki-default:#50FA7B}html pre.shiki code .sddWA, html code.shiki .sddWA{--shiki-default:#F8F8F2}html pre.shiki code .syA0A, html code.shiki .syA0A{--shiki-default:#E9F284}html pre.shiki code .shai9, html code.shiki .shai9{--shiki-default:#F1FA8C}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html pre.shiki code .si6LB, html code.shiki .si6LB{--shiki-default:#6272A4}html pre.shiki code .sDXMj, html code.shiki .sDXMj{--shiki-default:#FFB86C;--shiki-default-font-style:italic}html pre.shiki code .s40py, html code.shiki .s40py{--shiki-default:#8BE9FD;--shiki-default-font-style:italic}",{"title":165,"searchDepth":208,"depth":208,"links":4423},[4424,4425,4426,4427,4428,4429,4430],{"id":3814,"depth":208,"text":3815},{"id":3821,"depth":208,"text":3822},{"id":3864,"depth":208,"text":3865},{"id":3941,"depth":208,"text":3942},{"id":4055,"depth":208,"text":4056},{"id":4253,"depth":208,"text":4254},{"id":4412,"depth":208,"text":4412},"2025-04-01T00:00:00.000Z","JavaScript에서 비동기 프로그래밍을 더 쉽게 만드는 async/await 문법에 대해 알아보겠습니다.",{},"/2025-04-01-async-await",{"title":3806,"description":4432},"2025-04-01-async-await",[4438,4439,4440],"JavaScript","비동기 프로그래밍","async/await","zd02LF3dgf",{"id":4443,"title":4444,"body":4445,"date":5204,"description":5205,"extension":916,"image":917,"meta":5206,"navigation":257,"path":5207,"seo":5208,"stem":5209,"tags":5210,"__hash__":5211},"content/2025-03-30-javascript-predicate.md","자바스크립트 Predicate 이해하기",{"type":10,"value":4446,"toc":5191},[4447,4450,4454,4457,4468,4472,4476,4654,4658,4881,4885,4911,4915,4919,5013,5017,5183,5185,5188],[18,4448,4449],{},"Predicate는 프로그래밍에서 참(true) 또는 거짓(false)을 반환하는 함수를 의미합니다. 자바스크립트에서 Predicate는 배열 메서드나 조건문에서 자주 사용되는 중요한 개념입니다.",[13,4451,4453],{"id":4452},"predicate의-기본-개념","Predicate의 기본 개념",[18,4455,4456],{},"Predicate는 주로 다음과 같은 특징을 가집니다:",[29,4458,4459,4462,4465],{},[32,4460,4461],{},"하나 이상의 매개변수를 받습니다",[32,4463,4464],{},"항상 boolean 값을 반환합니다",[32,4466,4467],{},"주로 조건을 검사하는 용도로 사용됩니다",[13,4469,4471],{"id":4470},"자주-사용되는-predicate-예시","자주 사용되는 Predicate 예시",[156,4473,4475],{"id":4474},"_1-배열-메서드에서의-predicate","1. 배열 메서드에서의 Predicate",[160,4477,4479],{"className":987,"code":4478,"language":989,"meta":165,"style":165},"const numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\n// 짝수인지 확인하는 Predicate\nconst isEven = (num) => num % 2 === 0;\n\n// filter 메서드에서 Predicate 사용\nconst evenNumbers = numbers.filter(isEven);\nconsole.log(evenNumbers); // [2, 4, 6, 8, 10]\n\n// some 메서드에서 Predicate 사용\nconst hasEvenNumber = numbers.some(isEven);\nconsole.log(hasEvenNumber); // true\n",[167,4480,4481,4535,4539,4544,4580,4584,4589,4606,4618,4622,4627,4643],{"__ignoreMap":165},[170,4482,4483,4485,4487,4489,4491,4493,4495,4497,4499,4501,4503,4505,4507,4509,4511,4513,4515,4518,4520,4523,4525,4528,4530,4533],{"class":172,"line":173},[170,4484,1001],{"class":211},[170,4486,3097],{"class":215},[170,4488,323],{"class":211},[170,4490,285],{"class":215},[170,4492,1094],{"class":184},[170,4494,1056],{"class":215},[170,4496,2699],{"class":184},[170,4498,1056],{"class":215},[170,4500,2704],{"class":184},[170,4502,1056],{"class":215},[170,4504,2713],{"class":184},[170,4506,1056],{"class":215},[170,4508,2722],{"class":184},[170,4510,1056],{"class":215},[170,4512,3432],{"class":184},[170,4514,1056],{"class":215},[170,4516,4517],{"class":184},"7",[170,4519,1056],{"class":215},[170,4521,4522],{"class":184},"8",[170,4524,1056],{"class":215},[170,4526,4527],{"class":184},"9",[170,4529,1056],{"class":215},[170,4531,4532],{"class":184},"10",[170,4534,3134],{"class":215},[170,4536,4537],{"class":172,"line":208},[170,4538,258],{"emptyLinePlaceholder":257},[170,4540,4541],{"class":172,"line":235},[170,4542,4543],{"class":204},"// 짝수인지 확인하는 Predicate\n",[170,4545,4546,4548,4551,4554,4556,4559,4561,4563,4566,4569,4572,4575,4578],{"class":172,"line":254},[170,4547,1001],{"class":211},[170,4549,4550],{"class":176}," isEven",[170,4552,4553],{"class":211}," =",[170,4555,2164],{"class":215},[170,4557,4558],{"class":1689},"num",[170,4560,3525],{"class":215},[170,4562,3528],{"class":211},[170,4564,4565],{"class":215}," num ",[170,4567,4568],{"class":211},"%",[170,4570,4571],{"class":184}," 2",[170,4573,4574],{"class":211}," ===",[170,4576,4577],{"class":184}," 0",[170,4579,232],{"class":215},[170,4581,4582],{"class":172,"line":261},[170,4583,258],{"emptyLinePlaceholder":257},[170,4585,4586],{"class":172,"line":276},[170,4587,4588],{"class":204},"// filter 메서드에서 Predicate 사용\n",[170,4590,4591,4593,4596,4598,4601,4603],{"class":172,"line":294},[170,4592,1001],{"class":211},[170,4594,4595],{"class":215}," evenNumbers ",[170,4597,323],{"class":211},[170,4599,4600],{"class":215}," numbers.",[170,4602,3516],{"class":176},[170,4604,4605],{"class":215},"(isEven);\n",[170,4607,4608,4610,4612,4615],{"class":172,"line":552},[170,4609,1297],{"class":215},[170,4611,1300],{"class":176},[170,4613,4614],{"class":215},"(evenNumbers); ",[170,4616,4617],{"class":204},"// [2, 4, 6, 8, 10]\n",[170,4619,4620],{"class":172,"line":564},[170,4621,258],{"emptyLinePlaceholder":257},[170,4623,4624],{"class":172,"line":570},[170,4625,4626],{"class":204},"// some 메서드에서 Predicate 사용\n",[170,4628,4629,4631,4634,4636,4638,4641],{"class":172,"line":581},[170,4630,1001],{"class":211},[170,4632,4633],{"class":215}," hasEvenNumber ",[170,4635,323],{"class":211},[170,4637,4600],{"class":215},[170,4639,4640],{"class":176},"some",[170,4642,4605],{"class":215},[170,4644,4645,4647,4649,4652],{"class":172,"line":4},[170,4646,1297],{"class":215},[170,4648,1300],{"class":176},[170,4650,4651],{"class":215},"(hasEvenNumber); ",[170,4653,1526],{"class":204},[156,4655,4657],{"id":4656},"_2-객체-검증에서의-predicate","2. 객체 검증에서의 Predicate",[160,4659,4661],{"className":987,"code":4660,"language":989,"meta":165,"style":165},"const user = {\n  name: \"홍길동\",\n  age: 25,\n  email: \"hong@example.com\",\n};\n\n// 유효성 검사를 위한 Predicate들\nconst isValidName = (name) => name.length >= 2;\nconst isValidAge = (age) => age >= 0 && age \u003C= 120;\nconst isValidEmail = (email) => email.includes(\"@\");\n\n// Predicate들을 조합하여 사용\nconst isValidUser = (user) =>\n  isValidName(user.name) && isValidAge(user.age) && isValidEmail(user.email);\n",[167,4662,4663,4674,4689,4701,4717,4722,4726,4731,4758,4795,4830,4834,4839,4858],{"__ignoreMap":165},[170,4664,4665,4667,4670,4672],{"class":172,"line":173},[170,4666,1001],{"class":211},[170,4668,4669],{"class":215}," user ",[170,4671,323],{"class":211},[170,4673,520],{"class":215},[170,4675,4676,4679,4681,4683,4685,4687],{"class":172,"line":208},[170,4677,4678],{"class":215},"  name",[170,4680,282],{"class":211},[170,4682,223],{"class":222},[170,4684,1176],{"class":180},[170,4686,229],{"class":222},[170,4688,538],{"class":215},[170,4690,4691,4694,4696,4699],{"class":172,"line":235},[170,4692,4693],{"class":215},"  age",[170,4695,282],{"class":211},[170,4697,4698],{"class":184}," 25",[170,4700,538],{"class":215},[170,4702,4703,4706,4708,4710,4713,4715],{"class":172,"line":254},[170,4704,4705],{"class":215},"  email",[170,4707,282],{"class":211},[170,4709,223],{"class":222},[170,4711,4712],{"class":180},"hong@example.com",[170,4714,229],{"class":222},[170,4716,538],{"class":215},[170,4718,4719],{"class":172,"line":261},[170,4720,4721],{"class":215},"};\n",[170,4723,4724],{"class":172,"line":276},[170,4725,258],{"emptyLinePlaceholder":257},[170,4727,4728],{"class":172,"line":294},[170,4729,4730],{"class":204},"// 유효성 검사를 위한 Predicate들\n",[170,4732,4733,4735,4738,4740,4742,4744,4746,4748,4751,4754,4756],{"class":172,"line":552},[170,4734,1001],{"class":211},[170,4736,4737],{"class":176}," isValidName",[170,4739,4553],{"class":211},[170,4741,2164],{"class":215},[170,4743,1167],{"class":1689},[170,4745,3525],{"class":215},[170,4747,3528],{"class":211},[170,4749,4750],{"class":215}," name.length ",[170,4752,4753],{"class":211},">=",[170,4755,4571],{"class":184},[170,4757,232],{"class":215},[170,4759,4760,4762,4765,4767,4769,4771,4773,4775,4778,4780,4782,4785,4787,4790,4793],{"class":172,"line":564},[170,4761,1001],{"class":211},[170,4763,4764],{"class":176}," isValidAge",[170,4766,4553],{"class":211},[170,4768,2164],{"class":215},[170,4770,1194],{"class":1689},[170,4772,3525],{"class":215},[170,4774,3528],{"class":211},[170,4776,4777],{"class":215}," age ",[170,4779,4753],{"class":211},[170,4781,4577],{"class":184},[170,4783,4784],{"class":211}," &&",[170,4786,4777],{"class":215},[170,4788,4789],{"class":211},"\u003C=",[170,4791,4792],{"class":184}," 120",[170,4794,232],{"class":215},[170,4796,4797,4799,4802,4804,4806,4809,4811,4813,4816,4819,4821,4823,4826,4828],{"class":172,"line":570},[170,4798,1001],{"class":211},[170,4800,4801],{"class":176}," isValidEmail",[170,4803,4553],{"class":211},[170,4805,2164],{"class":215},[170,4807,4808],{"class":1689},"email",[170,4810,3525],{"class":215},[170,4812,3528],{"class":211},[170,4814,4815],{"class":215}," email.",[170,4817,4818],{"class":176},"includes",[170,4820,1162],{"class":215},[170,4822,229],{"class":222},[170,4824,4825],{"class":180},"@",[170,4827,229],{"class":222},[170,4829,1181],{"class":215},[170,4831,4832],{"class":172,"line":581},[170,4833,258],{"emptyLinePlaceholder":257},[170,4835,4836],{"class":172,"line":4},[170,4837,4838],{"class":204},"// Predicate들을 조합하여 사용\n",[170,4840,4841,4843,4846,4848,4850,4853,4855],{"class":172,"line":605},[170,4842,1001],{"class":211},[170,4844,4845],{"class":176}," isValidUser",[170,4847,4553],{"class":211},[170,4849,2164],{"class":215},[170,4851,4852],{"class":1689},"user",[170,4854,3525],{"class":215},[170,4856,4857],{"class":211},"=>\n",[170,4859,4860,4863,4866,4869,4871,4874,4876,4878],{"class":172,"line":617},[170,4861,4862],{"class":176},"  isValidName",[170,4864,4865],{"class":215},"(user.name) ",[170,4867,4868],{"class":211},"&&",[170,4870,4764],{"class":176},[170,4872,4873],{"class":215},"(user.age) ",[170,4875,4868],{"class":211},[170,4877,4801],{"class":176},[170,4879,4880],{"class":215},"(user.email);\n",[13,4882,4884],{"id":4883},"predicate의-장점","Predicate의 장점",[29,4886,4887,4893,4899,4905],{},[32,4888,4889,4892],{},[35,4890,4891],{},"재사용성",": 한 번 정의한 Predicate를 여러 곳에서 재사용할 수 있습니다.",[32,4894,4895,4898],{},[35,4896,4897],{},"가독성",": 조건 로직을 명확하게 표현할 수 있습니다.",[32,4900,4901,4904],{},[35,4902,4903],{},"유지보수성",": 조건 변경이 필요할 때 한 곳만 수정하면 됩니다.",[32,4906,4907,4910],{},[35,4908,4909],{},"테스트 용이성",": Predicate는 순수 함수이므로 단위 테스트가 쉽습니다.",[13,4912,4914],{"id":4913},"고급-predicate-활용","고급 Predicate 활용",[156,4916,4918],{"id":4917},"_1-predicate-조합","1. Predicate 조합",[160,4920,4922],{"className":987,"code":4921,"language":989,"meta":165,"style":165},"const isPositive = (num) => num > 0;\nconst isInteger = (num) => Number.isInteger(num);\n\n// Predicate 조합\nconst isPositiveInteger = (num) => isPositive(num) && isInteger(num);\n",[167,4923,4924,4950,4976,4980,4985],{"__ignoreMap":165},[170,4925,4926,4928,4931,4933,4935,4937,4939,4941,4943,4946,4948],{"class":172,"line":173},[170,4927,1001],{"class":211},[170,4929,4930],{"class":176}," isPositive",[170,4932,4553],{"class":211},[170,4934,2164],{"class":215},[170,4936,4558],{"class":1689},[170,4938,3525],{"class":215},[170,4940,3528],{"class":211},[170,4942,4565],{"class":215},[170,4944,4945],{"class":211},">",[170,4947,4577],{"class":184},[170,4949,232],{"class":215},[170,4951,4952,4954,4957,4959,4961,4963,4965,4967,4970,4973],{"class":172,"line":208},[170,4953,1001],{"class":211},[170,4955,4956],{"class":176}," isInteger",[170,4958,4553],{"class":211},[170,4960,2164],{"class":215},[170,4962,4558],{"class":1689},[170,4964,3525],{"class":215},[170,4966,3528],{"class":211},[170,4968,4969],{"class":215}," Number.",[170,4971,4972],{"class":176},"isInteger",[170,4974,4975],{"class":215},"(num);\n",[170,4977,4978],{"class":172,"line":235},[170,4979,258],{"emptyLinePlaceholder":257},[170,4981,4982],{"class":172,"line":254},[170,4983,4984],{"class":204},"// Predicate 조합\n",[170,4986,4987,4989,4992,4994,4996,4998,5000,5002,5004,5007,5009,5011],{"class":172,"line":261},[170,4988,1001],{"class":211},[170,4990,4991],{"class":176}," isPositiveInteger",[170,4993,4553],{"class":211},[170,4995,2164],{"class":215},[170,4997,4558],{"class":1689},[170,4999,3525],{"class":215},[170,5001,3528],{"class":211},[170,5003,4930],{"class":176},[170,5005,5006],{"class":215},"(num) ",[170,5008,4868],{"class":211},[170,5010,4956],{"class":176},[170,5012,4975],{"class":215},[156,5014,5016],{"id":5015},"_2-커링을-활용한-predicate","2. 커링을 활용한 Predicate",[160,5018,5020],{"className":987,"code":5019,"language":989,"meta":165,"style":165},"const greaterThan = (threshold) => (value) => value > threshold;\nconst lessThan = (threshold) => (value) => value \u003C threshold;\n\nconst isBetween = (min, max) => (value) =>\n  greaterThan(min)(value) && lessThan(max)(value);\n\nconst isInRange = isBetween(0, 100);\nconsole.log(isInRange(50)); // true\n",[167,5021,5022,5055,5086,5090,5121,5136,5140,5163],{"__ignoreMap":165},[170,5023,5024,5026,5029,5031,5033,5036,5038,5040,5042,5044,5046,5048,5050,5052],{"class":172,"line":173},[170,5025,1001],{"class":211},[170,5027,5028],{"class":176}," greaterThan",[170,5030,4553],{"class":211},[170,5032,2164],{"class":215},[170,5034,5035],{"class":1689},"threshold",[170,5037,3525],{"class":215},[170,5039,3528],{"class":211},[170,5041,2164],{"class":215},[170,5043,2203],{"class":1689},[170,5045,3525],{"class":215},[170,5047,3528],{"class":211},[170,5049,2276],{"class":215},[170,5051,4945],{"class":211},[170,5053,5054],{"class":215}," threshold;\n",[170,5056,5057,5059,5062,5064,5066,5068,5070,5072,5074,5076,5078,5080,5082,5084],{"class":172,"line":208},[170,5058,1001],{"class":211},[170,5060,5061],{"class":176}," lessThan",[170,5063,4553],{"class":211},[170,5065,2164],{"class":215},[170,5067,5035],{"class":1689},[170,5069,3525],{"class":215},[170,5071,3528],{"class":211},[170,5073,2164],{"class":215},[170,5075,2203],{"class":1689},[170,5077,3525],{"class":215},[170,5079,3528],{"class":211},[170,5081,2276],{"class":215},[170,5083,313],{"class":211},[170,5085,5054],{"class":215},[170,5087,5088],{"class":172,"line":235},[170,5089,258],{"emptyLinePlaceholder":257},[170,5091,5092,5094,5097,5099,5101,5104,5106,5109,5111,5113,5115,5117,5119],{"class":172,"line":254},[170,5093,1001],{"class":211},[170,5095,5096],{"class":176}," isBetween",[170,5098,4553],{"class":211},[170,5100,2164],{"class":215},[170,5102,5103],{"class":1689},"min",[170,5105,1056],{"class":215},[170,5107,5108],{"class":1689},"max",[170,5110,3525],{"class":215},[170,5112,3528],{"class":211},[170,5114,2164],{"class":215},[170,5116,2203],{"class":1689},[170,5118,3525],{"class":215},[170,5120,4857],{"class":211},[170,5122,5123,5126,5129,5131,5133],{"class":172,"line":261},[170,5124,5125],{"class":176},"  greaterThan",[170,5127,5128],{"class":215},"(min)(value) ",[170,5130,4868],{"class":211},[170,5132,5061],{"class":176},[170,5134,5135],{"class":215},"(max)(value);\n",[170,5137,5138],{"class":172,"line":276},[170,5139,258],{"emptyLinePlaceholder":257},[170,5141,5142,5144,5147,5149,5151,5153,5156,5158,5161],{"class":172,"line":294},[170,5143,1001],{"class":211},[170,5145,5146],{"class":215}," isInRange ",[170,5148,323],{"class":211},[170,5150,5096],{"class":176},[170,5152,1162],{"class":215},[170,5154,5155],{"class":184},"0",[170,5157,1056],{"class":215},[170,5159,5160],{"class":184},"100",[170,5162,1181],{"class":215},[170,5164,5165,5167,5169,5171,5174,5176,5179,5181],{"class":172,"line":552},[170,5166,1297],{"class":215},[170,5168,1300],{"class":176},[170,5170,1162],{"class":215},[170,5172,5173],{"class":176},"isInRange",[170,5175,1162],{"class":215},[170,5177,5178],{"class":184},"50",[170,5180,1317],{"class":215},[170,5182,1526],{"class":204},[13,5184,4412],{"id":4412},[18,5186,5187],{},"Predicate는 자바스크립트에서 조건부 로직을 표현하는 강력한 도구입니다. 특히 배열 메서드나 객체 검증에서 자주 사용되며, 코드의 재사용성과 가독성을 높이는 데 도움을 줍니다. Predicate를 적절히 활용하면 더 깔끔하고 유지보수하기 쉬운 코드를 작성할 수 있습니다.",[897,5189,5190],{},"html pre.shiki code .sRedq, html code.shiki .sRedq{--shiki-default:#FF79C6}html pre.shiki code .sddWA, html code.shiki .sddWA{--shiki-default:#F8F8F2}html pre.shiki code .sjKgF, html code.shiki .sjKgF{--shiki-default:#BD93F9}html pre.shiki code .si6LB, html code.shiki .si6LB{--shiki-default:#6272A4}html pre.shiki code .s57r0, html code.shiki .s57r0{--shiki-default:#50FA7B}html pre.shiki code .sDXMj, html code.shiki .sDXMj{--shiki-default:#FFB86C;--shiki-default-font-style:italic}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html pre.shiki code .syA0A, html code.shiki .syA0A{--shiki-default:#E9F284}html pre.shiki code .shai9, html code.shiki .shai9{--shiki-default:#F1FA8C}",{"title":165,"searchDepth":208,"depth":208,"links":5192},[5193,5194,5198,5199,5203],{"id":4452,"depth":208,"text":4453},{"id":4470,"depth":208,"text":4471,"children":5195},[5196,5197],{"id":4474,"depth":235,"text":4475},{"id":4656,"depth":235,"text":4657},{"id":4883,"depth":208,"text":4884},{"id":4913,"depth":208,"text":4914,"children":5200},[5201,5202],{"id":4917,"depth":235,"text":4918},{"id":5015,"depth":235,"text":5016},{"id":4412,"depth":208,"text":4412},"2025-03-30T00:00:00.000Z","자바스크립트에서 Predicate의 개념과 활용 방법에 대해 알아봅니다.",{},"/2025-03-30-javascript-predicate",{"title":4444,"description":5205},"2025-03-30-javascript-predicate",[4438],"u5C27b6bf7",1744460481613]